// Generated by psc-bundle 0.7.5.2
var PS = { };
(function(exports) {
  /* global exports */
  "use strict";

  // module Prelude

  //- Functor --------------------------------------------------------------------

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  };

  //- Eq -------------------------------------------------------------------------

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  //- Show -----------------------------------------------------------------------

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    return JSON.stringify(s);
  };
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Prelude"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Semigroup = function (append) {
      this.append = append;
  };
  var Eq = function (eq) {
      this.eq = eq;
  };
  var Show = function (show) {
      this.show = show;
  };
  var $dollar = function (f) {
      return function (x) {
          return f(x);
      };
  };                                                                           
  var unit = {};
  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };                                                                     
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var semigroupArray = new Semigroup($foreign.concatArray);
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (__dict_Applicative_2) {
      return pure(__dict_Applicative_2);
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (__dict_Functor_5) {
      return map(__dict_Functor_5);
  };
  var id = function (dict) {
      return dict.id;
  };
  var functorArray = new Functor($foreign.arrayMap);
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  }; 
  var eqString = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var $eq$eq = function (__dict_Eq_7) {
      return eq(__dict_Eq_7);
  };
  var $$const = function (a) {
      return function (_3) {
          return a;
      };
  };
  var $$void = function (__dict_Functor_12) {
      return function (fa) {
          return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);
      };
  };
  var compose = function (dict) {
      return dict.compose;
  };
  var $greater$greater$greater = function (__dict_Semigroupoid_15) {
      return flip(compose(__dict_Semigroupoid_15));
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var bind = function (dict) {
      return dict.bind;
  };
  var liftM1 = function (__dict_Monad_23) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_23["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                  return $$return(__dict_Monad_23["__superclass_Prelude.Applicative_0"]())(f(_0));
              });
          };
      };
  };
  var $greater$greater$eq = function (__dict_Bind_24) {
      return bind(__dict_Bind_24);
  }; 
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (__dict_Apply_25) {
      return apply(__dict_Apply_25);
  };
  var liftA1 = function (__dict_Applicative_26) {
      return function (f) {
          return function (a) {
              return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
          };
      };
  }; 
  var append = function (dict) {
      return dict.append;
  };
  var $plus$plus = function (__dict_Semigroup_27) {
      return append(__dict_Semigroup_27);
  };
  var $less$greater = function (__dict_Semigroup_28) {
      return append(__dict_Semigroup_28);
  };
  var ap = function (__dict_Monad_30) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                  return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                      return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_2(_1));
                  });
              });
          };
      };
  };
  exports["Show"] = Show;
  exports["Eq"] = Eq;
  exports["Semigroup"] = Semigroup;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["show"] = show;
  exports["=="] = $eq$eq;
  exports["eq"] = eq;
  exports["++"] = $plus$plus;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["liftM1"] = liftM1;
  exports["return"] = $$return;
  exports[">>="] = $greater$greater$eq;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["<*>"] = $less$times$greater;
  exports["apply"] = apply;
  exports["void"] = $$void;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports[">>>"] = $greater$greater$greater;
  exports["compose"] = compose;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["$"] = $dollar;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;
  exports["functorArray"] = functorArray;
  exports["semigroupArray"] = semigroupArray;
  exports["eqString"] = eqString;
  exports["showInt"] = showInt;
  exports["showString"] = showString;;
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  /* global exports, require */
  "use strict";

  // module OpticUI.Internal.VirtualDOM

  // VTree -> HTMLElement
  exports.createElement = function () {
    var vcreateElement = require('virtual-dom/create-element');
    return function (vtree) {
      return vcreateElement(vtree);
    };
  }();

  // VTree -> VTree -> Patch
  exports.diff = function () {
    var vdiff = require('virtual-dom/diff');
    return function (a) {
      return function (b) {
        return vdiff(a, b);
      };
    };
  }();

  // forall eff. Patch -> HTMLElement -> Eff (dom :: DOM | eff) HTMLElement
  exports.patch = function () {
    var vpatch = require('virtual-dom/patch');
    return function (p) {
      return function (node) {
        return function () {
          return vpatch(node, p);
        };
      };
    };
  }();

  // String -> VTree
  exports.vtext = function () {
    var VText = require('virtual-dom/vnode/vtext');
    return function (s) { return new VText(s); };
  }();

  // Nullable String -> String -> Nullable String -> Props -> Array VTree -> VTree
  exports.vnode = function () {
    var VirtualNode = require("virtual-dom/vnode/vnode");
    var SoftSetHook = require("virtual-dom/virtual-hyperscript/hooks/soft-set-hook");
    return function (ns) {
      return function (name) {
        return function (key) {
          return function (props) {
            return function (children) {
              if (name === "input" && props.value !== undefined) {
                props.value = new SoftSetHook(props.value);
              }
              return new VirtualNode(name, props, children, key, ns);
            };
          };
        };
      };
    };
  }();

  // forall a. Fn2 String a Props
  exports.prop = function (key, value) {
    var props = {};
    props[key] = value;
    return props;
  };

  // Fn2 String String Props
  exports.attrProp = function (key, value) {
    var props = { attributes : {} };
    props.attributes[key] = value;
    return props;
  };

  // forall eff e. Fn2 String (e -> Eff eff Unit) Props
  exports.handlerProp = function (key, f) {
    var Hook  = function () {};
    var props = {};
    Hook.prototype.callback = function (e) {
      f(e)();
    };
    Hook.prototype.hook = function (node) {
      node.addEventListener(key, this.callback);
    };
    Hook.prototype.unhook = function (node) {
      node.removeEventListener(key, this.callback);
    };
    props["opticui-hook-" + key] = new Hook(f);
    return props;
  };

  // Fn2 Props Props Props
  exports.concatProps = function () {
    var hOP = Object.prototype.hasOwnProperty;
    var copy = function (source, result) {
      for (var key in source) {
        if (hOP.call(source, key)) {
          if (key === "attributes") {
            var sourceAttrs = source[key];
            var resultAttrs = result[key];

            for (var attr in sourceAttrs) {
              if (hOP.call(sourceAttrs, attr)) {
                resultAttrs[attr] = sourceAttrs[attr];
              }
            }
          } else {
            result[key] = source[key];
          }
        }
      }
      return result;
    };
    return function (p, q) {
      return copy(p, copy(q, { attributes: {} } ));
    };
  }();

  // Props
  exports.emptyProps = {};

  //Fn2 String (HTMLElement -> Eff eff Unit) Props
  exports.initializer = function(s, f){
    var Hook = function () {};
    Hook.prototype.hook = function (node) {
      if(!node.initialized){
        node.initialized = true;
        f(node)();
      }
    };
    var obj = {};
    obj[s] = new Hook(f);
    return obj;
  };

  //Fn2 String (HTMLElement -> Eff eff Unit) Props
  exports.finalizer = function(s, f){
    var Hook = function () {};
    Hook.prototype.unhook = function (node) {
      f(node)();
    };
    var obj = {};
    obj[s] = new Hook(f);
    return obj;
  };
 
})(PS["OpticUI.Internal.VirtualDOM"] = PS["OpticUI.Internal.VirtualDOM"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];     
  var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
      this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
      this.mempty = mempty;
  };       
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;;
 
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];     
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;;
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.runFn2 = function (fn) {
    return function (a) {
      return function (b) {
        return fn(a, b);
      };
    };
  };

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
 
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Function"];
  var Prelude = PS["Prelude"];
  exports["runFn4"] = $foreign.runFn4;
  exports["runFn2"] = $foreign.runFn2;;
 
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foldable

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (b) {
      return function (f) {
          return function (_0) {
              if (_0 instanceof Nothing) {
                  return b;
              };
              if (_0 instanceof Just) {
                  return f(_0.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 26, column 1 - line 27, column 1: " + [ b.constructor.name, f.constructor.name, _0.constructor.name ]);
          };
      };
  };                                                
  var functorMaybe = new Prelude.Functor(function (fn) {
      return function (_2) {
          if (_2 instanceof Just) {
              return new Just(fn(_2.value0));
          };
          return Nothing.value;
      };
  });
  var applyMaybe = new Prelude.Apply(function () {
      return functorMaybe;
  }, function (_3) {
      return function (x) {
          if (_3 instanceof Just) {
              return Prelude["<$>"](functorMaybe)(_3.value0)(x);
          };
          if (_3 instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 121, column 1 - line 145, column 1: " + [ _3.constructor.name, x.constructor.name ]);
      };
  });
  var bindMaybe = new Prelude.Bind(function () {
      return applyMaybe;
  }, function (_5) {
      return function (k) {
          if (_5 instanceof Just) {
              return k(_5.value0);
          };
          if (_5 instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 180, column 1 - line 199, column 1: " + [ _5.constructor.name, k.constructor.name ]);
      };
  });
  var applicativeMaybe = new Prelude.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["bindMaybe"] = bindMaybe;;
 
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];     
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var mconcat = function (__dict_Foldable_8) {
      return function (__dict_Monoid_9) {
          return foldl(__dict_Foldable_8)(Prelude["<>"](__dict_Monoid_9["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_9));
      };
  }; 
  var foldableArray = new Foldable(function (__dict_Monoid_19) {
      return function (f) {
          return function (xs) {
              return foldr(foldableArray)(function (x) {
                  return function (acc) {
                      return Prelude["<>"](__dict_Monoid_19["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(__dict_Monoid_19))(xs);
          };
      };
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var find = function (__dict_Foldable_25) {
      return function (p) {
          return foldl(__dict_Foldable_25)(function (r) {
              return function (x) {
                  var _96 = p(x);
                  if (_96) {
                      return new Data_Maybe.Just(x);
                  };
                  if (!_96) {
                      return r;
                  };
                  throw new Error("Failed pattern match at Data.Foldable line 181, column 1 - line 182, column 1: " + [ _96.constructor.name ]);
              };
          })(Data_Maybe.Nothing.value);
      };
  };
  exports["Foldable"] = Foldable;
  exports["find"] = find;
  exports["mconcat"] = mconcat;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;;
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Traversable

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont (fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList (x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray (list) {
      var arr = [];
      while (list !== emptyList) {
        arr.push(list.head);
        list = list.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Prelude.functorArray;
  }, function (__dict_Applicative_11) {
      return traverse(traversableArray)(__dict_Applicative_11)(Prelude.id(Prelude.categoryFn));
  }, function (__dict_Applicative_10) {
      return $foreign.traverseArrayImpl(Prelude.apply(__dict_Applicative_10["__superclass_Prelude.Apply_0"]()))(Prelude.map((__dict_Applicative_10["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_10));
  });
  var sequence = function (dict) {
      return dict.sequence;
  }; 
  var $$for = function (__dict_Applicative_22) {
      return function (__dict_Traversable_23) {
          return function (x) {
              return function (f) {
                  return traverse(__dict_Traversable_23)(__dict_Applicative_22)(f)(x);
              };
          };
      };
  };
  exports["Traversable"] = Traversable;
  exports["for"] = $$for;
  exports["sequence"] = sequence;
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;;
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Prelude.Functor(function (f) {
      return function (_2) {
          if (_2 instanceof Left) {
              return new Left(_2.value0);
          };
          if (_2 instanceof Right) {
              return new Right(f(_2.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 52, column 1 - line 56, column 1: " + [ f.constructor.name, _2.constructor.name ]);
      };
  });
  var either = function (f) {
      return function (g) {
          return function (_1) {
              if (_1 instanceof Left) {
                  return f(_1.value0);
              };
              if (_1 instanceof Right) {
                  return g(_1.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 28, column 1 - line 29, column 1: " + [ f.constructor.name, g.constructor.name, _1.constructor.name ]);
          };
      };
  }; 
  var applyEither = new Prelude.Apply(function () {
      return functorEither;
  }, function (_4) {
      return function (r) {
          if (_4 instanceof Left) {
              return new Left(_4.value0);
          };
          if (_4 instanceof Right) {
              return Prelude["<$>"](functorEither)(_4.value0)(r);
          };
          throw new Error("Failed pattern match at Data.Either line 92, column 1 - line 116, column 1: " + [ _4.constructor.name, r.constructor.name ]);
      };
  });
  var bindEither = new Prelude.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (_0) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Prelude.Applicative(function () {
      return applyEither;
  }, Right.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;;
 
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foreign

  // jshint maxparams: 3
  exports.parseJSONImpl = function (left, right, str) {
    try {
      return right(JSON.parse(str));
    } catch (e) {
      return left(e.toString());
    }
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };
 
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Int"];
  var Prelude = PS["Prelude"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var $$Math = PS["Math"];                                                                   
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["fromNumber"] = fromNumber;;
 
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];
  var Data_Int = PS["Data.Int"];
  var Data_String = PS["Data.String"];     
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var JSONError = (function () {
      function JSONError(value0) {
          this.value0 = value0;
      };
      JSONError.create = function (value0) {
          return new JSONError(value0);
      };
      return JSONError;
  })();
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if (Prelude["=="](Prelude.eqString)($foreign.tagOf(value))(tag)) {
              return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
          };
          return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
      };
  };
  var showForeignError = new Prelude.Show(function (_0) {
      if (_0 instanceof TypeMismatch) {
          return "Type mismatch: expected " + (_0.value0 + (", found " + _0.value1));
      };
      if (_0 instanceof ErrorAtIndex) {
          return "Error at array index " + (Prelude.show(Prelude.showInt)(_0.value0) + (": " + Prelude.show(showForeignError)(_0.value1)));
      };
      if (_0 instanceof ErrorAtProperty) {
          return "Error at property " + (Prelude.show(Prelude.showString)(_0.value0) + (": " + Prelude.show(showForeignError)(_0.value1)));
      };
      if (_0 instanceof JSONError) {
          return "JSON error: " + _0.value0;
      };
      throw new Error("Failed pattern match: " + [ _0.constructor.name ]);
  });
  var readString = unsafeReadTagged("String");
  var parseJSON = function (json) {
      return $foreign.parseJSONImpl(function (_32) {
          return Data_Either.Left.create(JSONError.create(_32));
      }, Data_Either.Right.create, json);
  };
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["JSONError"] = JSONError;
  exports["readString"] = readString;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["parseJSON"] = parseJSON;
  exports["showForeignError"] = showForeignError;;
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function(x) { return x; }
 
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;;
 
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["DOM.HTML.Types"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];     
  var windowToEventTarget = Unsafe_Coerce.unsafeCoerce;                  
  var htmlElementToNode = Unsafe_Coerce.unsafeCoerce;
  exports["htmlElementToNode"] = htmlElementToNode;
  exports["windowToEventTarget"] = windowToEventTarget;;
 
})(PS["DOM.HTML.Types"] = PS["DOM.HTML.Types"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Nullable

  exports["null"] = null;

  exports.nullable = function(a, r, f) {
      return a == null ? r : f(a);
  };

  exports.notNull = function(x) {
      return x;
  }; 
 
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];     
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toNullable"] = toNullable;
  exports["toMaybe"] = toMaybe;;
 
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["OpticUI.Internal.VirtualDOM"];
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Function = PS["Data.Function"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Nullable = PS["Data.Nullable"];     
  var semigroupProps = new Prelude.Semigroup(Data_Function.runFn2($foreign.concatProps));
  var monoidProps = new Data_Monoid.Monoid(function () {
      return semigroupProps;
  }, $foreign.emptyProps);
  exports["semigroupProps"] = semigroupProps;
  exports["monoidProps"] = monoidProps;
  exports["finalizer"] = $foreign.finalizer;
  exports["initializer"] = $foreign.initializer;
  exports["handlerProp"] = $foreign.handlerProp;
  exports["attrProp"] = $foreign.attrProp;
  exports["prop"] = $foreign.prop;
  exports["vnode"] = $foreign.vnode;
  exports["vtext"] = $foreign.vtext;
  exports["patch"] = $foreign.patch;
  exports["diff"] = $foreign.diff;
  exports["createElement"] = $foreign.createElement;;
 
})(PS["OpticUI.Internal.VirtualDOM"] = PS["OpticUI.Internal.VirtualDOM"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.runExists = function (f) {
    return function (fa) {
      return f(fa);
    };
  };
 
})(PS["Data.Exists"] = PS["Data.Exists"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Exists"];
  var Prelude = PS["Prelude"];
  exports["runExists"] = $foreign.runExists;;
 
})(PS["Data.Exists"] = PS["Data.Exists"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Exists = PS["Data.Exists"];
  var OpticUI_Internal_VirtualDOM = PS["OpticUI.Internal.VirtualDOM"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Function = PS["Data.Function"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var AttrP = (function () {
      function AttrP(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AttrP.create = function (value0) {
          return function (value1) {
              return new AttrP(value0, value1);
          };
      };
      return AttrP;
  })();
  var PropP = (function () {
      function PropP(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      PropP.create = function (value0) {
          return function (value1) {
              return new PropP(value0, value1);
          };
      };
      return PropP;
  })();
  var HandlerP = (function () {
      function HandlerP(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HandlerP.create = function (value0) {
          return function (value1) {
              return new HandlerP(value0, value1);
          };
      };
      return HandlerP;
  })();
  var InitializerP = (function () {
      function InitializerP(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      InitializerP.create = function (value0) {
          return function (value1) {
              return new InitializerP(value0, value1);
          };
      };
      return InitializerP;
  })();
  var FinalizerP = (function () {
      function FinalizerP(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      FinalizerP.create = function (value0) {
          return function (value1) {
              return new FinalizerP(value0, value1);
          };
      };
      return FinalizerP;
  })();
  var Text = (function () {
      function Text(value0) {
          this.value0 = value0;
      };
      Text.create = function (value0) {
          return new Text(value0);
      };
      return Text;
  })();
  var Element = (function () {
      function Element(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Element.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Element(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Element;
  })();
  var Markup = (function () {
      function Markup(value0) {
          this.value0 = value0;
      };
      Markup.create = function (value0) {
          return new Markup(value0);
      };
      return Markup;
  })();
  var text = function (t) {
      return new Markup([ new Text(t) ]);
  };
  var runInitializer = function (f) {
      return function (init) {
          return f(Unsafe_Coerce.unsafeCoerce(init));
      };
  };
  var runFinalizer = function (f) {
      return function (i) {
          return f(Unsafe_Coerce.unsafeCoerce(i));
      };
  };
  var runEventHandler = function (f) {
      return function (h) {
          return f(Unsafe_Coerce.unsafeCoerce(h));
      };
  };                                           
  var mkEventHandler = Unsafe_Coerce.unsafeCoerce;
  var markupSemigroup = new Prelude.Semigroup(function (_0) {
      return function (_1) {
          return new Markup(Prelude["++"](Prelude.semigroupArray)(_0.value0)(_1.value0));
      };
  });
  var markupMonoid = new Data_Monoid.Monoid(function () {
      return markupSemigroup;
  }, new Markup([  ]));
  var handle = function (n) {
      return function (f) {
          return new HandlerP(n, mkEventHandler(f));
      };
  };
  var element = function (ns) {
      return function (tag) {
          return function (props) {
              return function (childs) {
                  return new Markup([ new Element(ns, tag, props, childs) ]);
              };
          };
      };
  };
  exports["AttrP"] = AttrP;
  exports["PropP"] = PropP;
  exports["HandlerP"] = HandlerP;
  exports["InitializerP"] = InitializerP;
  exports["FinalizerP"] = FinalizerP;
  exports["Text"] = Text;
  exports["Element"] = Element;
  exports["Markup"] = Markup;
  exports["runFinalizer"] = runFinalizer;
  exports["runInitializer"] = runInitializer;
  exports["runEventHandler"] = runEventHandler;
  exports["mkEventHandler"] = mkEventHandler;
  exports["handle"] = handle;
  exports["text"] = text;
  exports["element"] = element;
  exports["markupSemigroup"] = markupSemigroup;
  exports["markupMonoid"] = markupMonoid;;
 
})(PS["OpticUI.Markup"] = PS["OpticUI.Markup"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];     
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  }; 
  var dimap = function (dict) {
      return dict.dimap;
  };
  var rmap = function (__dict_Profunctor_1) {
      return function (b2c) {
          return dimap(__dict_Profunctor_1)(Prelude.id(Prelude.categoryFn))(b2c);
      };
  };
  exports["Profunctor"] = Profunctor;
  exports["rmap"] = rmap;
  exports["dimap"] = dimap;;
 
})(PS["Data.Profunctor"] = PS["Data.Profunctor"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Profunctor = PS["Data.Profunctor"];     
  var Choice = function (__superclass_Data$dotProfunctor$dotProfunctor_0, left, right) {
      this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
      this.left = left;
      this.right = right;
  };
  var right = function (dict) {
      return dict.right;
  };
  var left = function (dict) {
      return dict.left;
  };
  exports["Choice"] = Choice;
  exports["right"] = right;
  exports["left"] = left;;
 
})(PS["Data.Profunctor.Choice"] = PS["Data.Profunctor.Choice"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  exports["Tuple"] = Tuple;;
 
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];     
  var Strong = function (__superclass_Data$dotProfunctor$dotProfunctor_0, first, second) {
      this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
      this.first = first;
      this.second = second;
  };                                          
  var second = function (dict) {
      return dict.second;
  };
  var first = function (dict) {
      return dict.first;
  };
  exports["Strong"] = Strong;
  exports["second"] = second;
  exports["first"] = first;;
 
})(PS["Data.Profunctor.Strong"] = PS["Data.Profunctor.Strong"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Identity = function (x) {
      return x;
  };
  var runIdentity = function (_0) {
      return _0;
  };
  var functorIdentity = new Prelude.Functor(function (f) {
      return function (_23) {
          return f(_23);
      };
  });
  var applyIdentity = new Prelude.Apply(function () {
      return functorIdentity;
  }, function (_24) {
      return function (_25) {
          return _24(_25);
      };
  });
  var bindIdentity = new Prelude.Bind(function () {
      return applyIdentity;
  }, function (_26) {
      return function (f) {
          return f(_26);
      };
  });
  var applicativeIdentity = new Prelude.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Prelude.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["runIdentity"] = runIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;;
 
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];     
  var MonadState = function (__superclass_Prelude$dotMonad_0, state) {
      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  var modify = function (__dict_MonadState_1) {
      return function (f) {
          return state(__dict_MonadState_1)(function (s) {
              return new Data_Tuple.Tuple(Prelude.unit, f(s));
          });
      };
  };
  var gets = function (__dict_MonadState_2) {
      return function (f) {
          return state(__dict_MonadState_2)(function (s) {
              return new Data_Tuple.Tuple(f(s), s);
          });
      };
  };
  exports["MonadState"] = MonadState;
  exports["modify"] = modify;
  exports["gets"] = gets;
  exports["state"] = state;;
 
})(PS["Control.Monad.State.Class"] = PS["Control.Monad.State.Class"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];     
  var MonadError = function (__superclass_Prelude$dotMonad_0, catchError, throwError) {
      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
      this.catchError = catchError;
      this.throwError = throwError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };                          
  var catchError = function (dict) {
      return dict.catchError;
  };
  exports["MonadError"] = MonadError;
  exports["catchError"] = catchError;
  exports["throwError"] = throwError;;
 
})(PS["Control.Monad.Error.Class"] = PS["Control.Monad.Error.Class"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Either = PS["Data.Either"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];     
  var StateT = function (x) {
      return x;
  };
  var runStateT = function (_6) {
      return _6;
  };
  var monadStateT = function (__dict_Monad_5) {
      return new Prelude.Monad(function () {
          return applicativeStateT(__dict_Monad_5);
      }, function () {
          return bindStateT(__dict_Monad_5);
      });
  };
  var functorStateT = function (__dict_Monad_14) {
      return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_14)));
  };
  var bindStateT = function (__dict_Monad_17) {
      return new Prelude.Bind(function () {
          return applyStateT(__dict_Monad_17);
      }, function (_7) {
          return function (f) {
              return function (s) {
                  return Prelude.bind(__dict_Monad_17["__superclass_Prelude.Bind_1"]())(_7(s))(function (_0) {
                      return runStateT(f(_0.value0))(_0.value1);
                  });
              };
          };
      });
  };
  var applyStateT = function (__dict_Monad_18) {
      return new Prelude.Apply(function () {
          return functorStateT(__dict_Monad_18);
      }, Prelude.ap(monadStateT(__dict_Monad_18)));
  };
  var applicativeStateT = function (__dict_Monad_19) {
      return new Prelude.Applicative(function () {
          return applyStateT(__dict_Monad_19);
      }, function (a) {
          return StateT(function (s) {
              return Prelude["return"](__dict_Monad_19["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(a, s));
          });
      });
  };
  var monadStateStateT = function (__dict_Monad_6) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadStateT(__dict_Monad_6);
      }, function (f) {
          return StateT(function (_39) {
              return Prelude["return"](__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(f(_39));
          });
      });
  };
  exports["StateT"] = StateT;
  exports["runStateT"] = runStateT;
  exports["functorStateT"] = functorStateT;
  exports["applyStateT"] = applyStateT;
  exports["applicativeStateT"] = applicativeStateT;
  exports["bindStateT"] = bindStateT;
  exports["monadStateT"] = monadStateT;
  exports["monadStateStateT"] = monadStateStateT;;
 
})(PS["Control.Monad.State.Trans"] = PS["Control.Monad.State.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var runState = function (s) {
      return function (_0) {
          return Data_Identity.runIdentity(Control_Monad_State_Trans.runStateT(s)(_0));
      };
  };
  exports["runState"] = runState;;
 
})(PS["Control.Monad.State"] = PS["Control.Monad.State"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Either = PS["Data.Either"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];     
  var Star = function (x) {
      return x;
  };
  var runStar = function (_3) {
      return _3;
  };
  var profunctorStar = function (__dict_Functor_1) {
      return new Data_Profunctor.Profunctor(function (f) {
          return function (g) {
              return function (_4) {
                  return Prelude[">>>"](Prelude.semigroupoidFn)(f)(Prelude[">>>"](Prelude.semigroupoidFn)(_4)(Prelude.map(__dict_Functor_1)(g)));
              };
          };
      });
  };
  var strongStar = function (__dict_Functor_0) {
      return new Data_Profunctor_Strong.Strong(function () {
          return profunctorStar(__dict_Functor_0);
      }, function (_5) {
          return function (_1) {
              return Prelude.map(__dict_Functor_0)(function (_0) {
                  return new Data_Tuple.Tuple(_0, _1.value1);
              })(_5(_1.value0));
          };
      }, function (_6) {
          return function (_2) {
              return Prelude.map(__dict_Functor_0)(Data_Tuple.Tuple.create(_2.value0))(_6(_2.value1));
          };
      });
  };
  var choiceStar = function (__dict_Applicative_2) {
      return new Data_Profunctor_Choice.Choice(function () {
          return profunctorStar((__dict_Applicative_2["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
      }, function (_7) {
          return Star(Data_Either.either(function (_23) {
              return Prelude.map((__dict_Applicative_2["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Left.create)(_7(_23));
          })(function (_24) {
              return Prelude.pure(__dict_Applicative_2)(Data_Either.Right.create(_24));
          }));
      }, function (_8) {
          return Star(Data_Either.either(function (_25) {
              return Prelude.pure(__dict_Applicative_2)(Data_Either.Left.create(_25));
          })(function (_26) {
              return Prelude.map((__dict_Applicative_2["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_8(_26));
          }));
      });
  };
  exports["Star"] = Star;
  exports["runStar"] = runStar;
  exports["profunctorStar"] = profunctorStar;
  exports["strongStar"] = strongStar;
  exports["choiceStar"] = choiceStar;;
 
})(PS["Data.Profunctor.Star"] = PS["Data.Profunctor.Star"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];     
  var Contravariant = function (cmap) {
      this.cmap = cmap;
  };
  var cmap = function (dict) {
      return dict.cmap;
  };
  exports["Contravariant"] = Contravariant;
  exports["cmap"] = cmap;;
 
})(PS["Data.Functor.Contravariant"] = PS["Data.Functor.Contravariant"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Star = PS["Data.Profunctor.Star"];
  var Data_Identity = PS["Data.Identity"];     
  var Wander = function (__superclass_Data$dotProfunctor$dotChoice$dotChoice_1, __superclass_Data$dotProfunctor$dotStrong$dotStrong_0, wander) {
      this["__superclass_Data.Profunctor.Choice.Choice_1"] = __superclass_Data$dotProfunctor$dotChoice$dotChoice_1;
      this["__superclass_Data.Profunctor.Strong.Strong_0"] = __superclass_Data$dotProfunctor$dotStrong$dotStrong_0;
      this.wander = wander;
  };
  var wanderStar = function (__dict_Applicative_0) {
      return new Wander(function () {
          return Data_Profunctor_Star.choiceStar(__dict_Applicative_0);
      }, function () {
          return Data_Profunctor_Star.strongStar((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
      }, function (t) {
          return function (_0) {
              return Data_Profunctor_Star.Star(t(__dict_Applicative_0)(Data_Profunctor_Star.runStar(_0)));
          };
      });
  }; 
  var wander = function (dict) {
      return dict.wander;
  };
  exports["Wander"] = Wander;
  exports["wander"] = wander;
  exports["wanderStar"] = wanderStar;;
 
})(PS["Data.Lens.Internal.Wander"] = PS["Data.Lens.Internal.Wander"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Profunctor_Star = PS["Data.Profunctor.Star"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor_Contravariant = PS["Data.Functor.Contravariant"];
  var Data_Lens_Internal_Wander = PS["Data.Lens.Internal.Wander"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Data_Identity = PS["Data.Identity"];     
  var Handler = function (x) {
      return x;
  };
  var Sink = (function () {
      function Sink(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Sink.create = function (value0) {
          return function (value1) {
              return new Sink(value0, value1);
          };
      };
      return Sink;
  })();
  var withView = function (f) {
      return function (_14) {
          return function (s) {
              return function (h) {
                  return Prelude.map(Control_Monad_Eff.functorEff)(f)(_14(s)(h));
              };
          };
      };
  };
  var $$with = function (f) {
      return function (s) {
          return function (h) {
              var _30 = f(s)(h);
              return _30(s)(h);
          };
      };
  };
  var uiSemigroup = function (__dict_Semigroup_0) {
      return new Prelude.Semigroup(function (_22) {
          return function (_23) {
              return function (s) {
                  return function (h) {
                      return Prelude["<*>"](Control_Monad_Eff.applyEff)(Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude.append(__dict_Semigroup_0))(_22(s)(h)))(_23(s)(h));
                  };
              };
          };
      });
  };
  var uiMonoid = function (__dict_Monoid_1) {
      return new Data_Monoid.Monoid(function () {
          return uiSemigroup(__dict_Monoid_1["__superclass_Prelude.Semigroup_0"]());
      }, function (_6) {
          return function (_5) {
              return Prelude.pure(Control_Monad_Eff.applicativeEff)(Data_Monoid.mempty(__dict_Monoid_1));
          };
      });
  };
  var ui = function (v) {
      return function (_8) {
          return function (_7) {
              return Prelude.pure(Control_Monad_Eff.applicativeEff)(v);
          };
      };
  };
  var toSink = function (_16) {
      return function (s) {
          return new Sink(s, _16(s));
      };
  };
  var runUI = function (_12) {
      return _12;
  };
  var runSink = function (_15) {
      return _15.value1;
  };
  var runHandler = function (_13) {
      return _13;
  };
  var inline = function (go) {
      return function (_10) {
          return function (_9) {
              return go;
          };
      };
  };
  var handlerContravariant = new Data_Functor_Contravariant.Contravariant(function (f) {
      return function (_24) {
          return function (_74) {
              return _24(f(_74));
          };
      };
  });
  var sinkFunctor = new Prelude.Functor(function (f) {
      return function (_25) {
          return new Sink(f(_25.value0), function (_75) {
              return _25.value1(Data_Functor_Contravariant.cmap(handlerContravariant)(f)(_75));
          });
      };
  });
  var sinkApply = function (__dict_Semigroup_3) {
      return new Prelude.Apply(function () {
          return sinkFunctor;
      }, function (_26) {
          return function (_27) {
              return new Sink(_26.value0(_27.value0), function (h) {
                  return Prelude["<*>"](Control_Monad_Eff.applyEff)(Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude.append(__dict_Semigroup_3))(_26.value1(Data_Functor_Contravariant.cmap(handlerContravariant)(function (_0) {
                      return _0(_27.value0);
                  })(h))))(_27.value1(Data_Functor_Contravariant.cmap(handlerContravariant)(Prelude["$"](_26.value0))(h)));
              });
          };
      });
  };
  var sinkApplicative = function (__dict_Monoid_4) {
      return new Prelude.Applicative(function () {
          return sinkApply(__dict_Monoid_4["__superclass_Prelude.Semigroup_0"]());
      }, function (x) {
          return new Sink(x, function (_11) {
              return Prelude.pure(Control_Monad_Eff.applicativeEff)(Data_Monoid.mempty(__dict_Monoid_4));
          });
      });
  };
  var uiProfunctor = new Data_Profunctor.Profunctor(function (f) {
      return function (g) {
          return function (_17) {
              return function (s) {
                  return function (h) {
                      return _17(f(s))(Data_Functor_Contravariant.cmap(handlerContravariant)(g)(h));
                  };
              };
          };
      };
  });
  var uiChoice = function (__dict_Monoid_2) {
      return new Data_Profunctor_Choice.Choice(function () {
          return uiProfunctor;
      }, function (_18) {
          return function (s) {
              return function (h) {
                  return Data_Either.either(Prelude.flip(_18)(Data_Functor_Contravariant.cmap(handlerContravariant)(Data_Either.Left.create)(h)))(function (_1) {
                      return Prelude.pure(Control_Monad_Eff.applicativeEff)(Data_Monoid.mempty(__dict_Monoid_2));
                  })(s);
              };
          };
      }, function (_19) {
          return function (s) {
              return function (h) {
                  return Data_Either.either(function (_2) {
                      return Prelude.pure(Control_Monad_Eff.applicativeEff)(Data_Monoid.mempty(__dict_Monoid_2));
                  })(Prelude.flip(_19)(Data_Functor_Contravariant.cmap(handlerContravariant)(Data_Either.Right.create)(h)))(s);
              };
          };
      });
  };
  var uiStrong = new Data_Profunctor_Strong.Strong(function () {
      return uiProfunctor;
  }, function (_20) {
      return function (_3) {
          return function (h) {
              return _20(_3.value0)(Data_Functor_Contravariant.cmap(handlerContravariant)(function (r) {
                  return new Data_Tuple.Tuple(r, _3.value1);
              })(h));
          };
      };
  }, function (_21) {
      return function (_4) {
          return function (h) {
              return _21(_4.value1)(Data_Functor_Contravariant.cmap(handlerContravariant)(function (r) {
                  return new Data_Tuple.Tuple(_4.value0, r);
              })(h));
          };
      };
  });
  var fromSink = function (f) {
      return function (_76) {
          return runSink(f(_76));
      };
  };
  var traversal = function (__dict_Monoid_5) {
      return function (t) {
          return function (_77) {
              return fromSink(Data_Profunctor_Star.runStar(t(Data_Lens_Internal_Wander.wanderStar(sinkApplicative(__dict_Monoid_5)))(Data_Profunctor_Star.Star(toSink(_77)))));
          };
      };
  };
  exports["Handler"] = Handler;
  exports["inline"] = inline;
  exports["traversal"] = traversal;
  exports["withView"] = withView;
  exports["with"] = $$with;
  exports["ui"] = ui;
  exports["runUI"] = runUI;
  exports["runHandler"] = runHandler;
  exports["uiProfunctor"] = uiProfunctor;
  exports["uiChoice"] = uiChoice;
  exports["uiStrong"] = uiStrong;
  exports["uiSemigroup"] = uiSemigroup;
  exports["uiMonoid"] = uiMonoid;
  exports["handlerContravariant"] = handlerContravariant;;
 
})(PS["OpticUI.Core"] = PS["OpticUI.Core"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];     
  var when = function (__dict_Monad_0) {
      return function (_0) {
          return function (m) {
              if (_0) {
                  return m;
              };
              if (!_0) {
                  return Prelude["return"](__dict_Monad_0["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
              };
              throw new Error("Failed pattern match at Control.Monad line 8, column 1 - line 9, column 1: " + [ _0.constructor.name, m.constructor.name ]);
          };
      };
  };
  exports["when"] = when;;
 
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Ref

  exports.newRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.writeRef = function (ref) {
    return function (val) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
 
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Ref"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["writeRef"] = $foreign.writeRef;
  exports["readRef"] = $foreign.readRef;
  exports["newRef"] = $foreign.newRef;;
 
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var zipWithA = function (__dict_Applicative_0) {
      return function (f) {
          return function (xs) {
              return function (ys) {
                  return Data_Traversable.sequence(Data_Traversable.traversableArray)(__dict_Applicative_0)($foreign.zipWith(f)(xs)(ys));
              };
          };
      };
  };
  var foldM = function (__dict_Monad_10) {
      return function (f) {
          return function (a) {
              return $foreign["uncons'"](function (_11) {
                  return Prelude["return"](__dict_Monad_10["__superclass_Prelude.Applicative_0"]())(a);
              })(function (b) {
                  return function (bs) {
                      return Prelude[">>="](__dict_Monad_10["__superclass_Prelude.Bind_1"]())(f(a)(b))(function (a$prime) {
                          return foldM(__dict_Monad_10)(f)(a$prime)(bs);
                      });
                  };
              });
          };
      };
  };
  exports["foldM"] = foldM;
  exports["zipWithA"] = zipWithA;;
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports._copyEff = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (m.hasOwnProperty(k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f;
  };

  // jshint maxparams: 4
  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function _collect (f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (m.hasOwnProperty(k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }  
 
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.poke = function (m) {
    return function (k) {
      return function (v) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
 
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.StrMap.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["poke"] = $foreign.poke;;
 
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.StrMap"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_List = PS["Data.List"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_StrMap_ST = PS["Data.StrMap.ST"];
  var thawST = $foreign._copyEff;
  var pureST = function (f) {
      return Control_Monad_Eff.runPure($foreign.runST(f));
  };
  var mutate = function (f) {
      return function (m) {
          return pureST(function __do() {
              var _0 = thawST(m)();
              f(_0)();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(_0)();
          });
      };
  };                                                                                 
  var lookup = Data_Function.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var insert = function (k) {
      return function (v) {
          return mutate(function (s) {
              return Data_StrMap_ST.poke(s)(k)(v);
          });
      };
  };
  exports["thawST"] = thawST;
  exports["lookup"] = lookup;
  exports["insert"] = insert;
  exports["empty"] = $foreign.empty;;
 
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module DOM.Event.EventTarget

  exports.eventListener = function (fn) {
    return function (event) {
      return fn(event)();
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            target.addEventListener(type, listener, useCapture);
            return {};
          };
        };
      };
    };
  };
 
})(PS["DOM.Event.EventTarget"] = PS["DOM.Event.EventTarget"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.message = function (e) {
    return e.message;
  };
 
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["message"] = $foreign.message;
  exports["error"] = $foreign.error;;
 
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["DOM.Event.EventTarget"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var DOM = PS["DOM"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  exports["addEventListener"] = $foreign.addEventListener;
  exports["eventListener"] = $foreign.eventListener;;
 
})(PS["DOM.Event.EventTarget"] = PS["DOM.Event.EventTarget"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var load = "load";
  exports["load"] = load;;
 
})(PS["DOM.Event.EventTypes"] = PS["DOM.Event.EventTypes"] || {});
(function(exports) {
  /* global exports, window */
  "use strict";

  // module DOM.HTML

  exports.window = function () {
    return window;
  };
 
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["window"] = $foreign.window;;
 
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module DOM.HTML.Document

  exports.body = function (doc) {
    return function () {
      return doc.body;
    };
  };
 
})(PS["DOM.HTML.Document"] = PS["DOM.HTML.Document"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["DOM.HTML.Document"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Nullable = PS["Data.Nullable"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["body"] = $foreign.body;;
 
})(PS["DOM.HTML.Document"] = PS["DOM.HTML.Document"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module DOM.HTML.Window

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };
 
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["DOM.HTML.Window"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["document"] = $foreign.document;;
 
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.appendChild = function (node) {
    return function (parent) {
      return function () {
        return parent.appendChild(node);
      };
    };
  };
 
})(PS["DOM.Node.Node"] = PS["DOM.Node.Node"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["DOM.Node.Node"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var DOM = PS["DOM"];
  var DOM_Node_NodeType = PS["DOM.Node.NodeType"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  exports["appendChild"] = $foreign.appendChild;;
 
})(PS["DOM.Node.Node"] = PS["DOM.Node.Node"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var OpticUI_Internal_VirtualDOM = PS["OpticUI.Internal.VirtualDOM"];
  var OpticUI_Markup = PS["OpticUI.Markup"];
  var OpticUI_Core = PS["OpticUI.Core"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Data_Function = PS["Data.Function"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Array = PS["Data.Array"];
  var Data_StrMap = PS["Data.StrMap"];
  var DOM = PS["DOM"];
  var DOM_Event_EventTarget = PS["DOM.Event.EventTarget"];
  var DOM_Event_EventTypes = PS["DOM.Event.EventTypes"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Document = PS["DOM.HTML.Document"];
  var DOM_Node_Element = PS["DOM.Node.Element"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var DOM_Node_Node = PS["DOM.Node.Node"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Data_Identity = PS["Data.Identity"];     
  var onLoad = function (go) {
      return function __do() {
          var _19 = DOM_HTML.window();
          return (function () {
              var et = DOM_HTML_Types.windowToEventTarget(_19);
              return DOM_Event_EventTarget.addEventListener(DOM_Event_EventTypes.load)(DOM_Event_EventTarget.eventListener(function (_24) {
                  return go;
              }))(false)(et);
          })()();
      };
  };
  var findProp = function (getter) {
      return function (setter) {
          return function (key) {
              return function (newprop) {
                  return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.gets(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(getter))(function (_18) {
                      var _31 = Data_StrMap.lookup(key)(_18);
                      if (_31 instanceof Data_Maybe.Nothing) {
                          return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(setter(Data_StrMap.insert(key)(newprop)(_18))))(function () {
                              return Prelude["return"](Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(newprop);
                          });
                      };
                      if (_31 instanceof Data_Maybe.Just) {
                          return Prelude["return"](Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(_31.value0);
                      };
                      throw new Error("Failed pattern match at OpticUI.Run line 95, column 1 - line 100, column 1: " + [ _31.constructor.name ]);
                  });
              };
          };
      };
  };
  var toVProp = function (_27) {
      if (_27 instanceof OpticUI_Markup.AttrP) {
          return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(OpticUI_Internal_VirtualDOM.attrProp(_27.value0, _27.value1));
      };
      if (_27 instanceof OpticUI_Markup.HandlerP) {
          return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(OpticUI_Markup.runEventHandler(function (f) {
              return OpticUI_Internal_VirtualDOM.handlerProp(_27.value0, f);
          })(_27.value1));
      };
      if (_27 instanceof OpticUI_Markup.PropP) {
          return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Exists.runExists(function (_23) {
              return OpticUI_Internal_VirtualDOM.prop(_27.value0, _23.value0);
          })(_27.value1));
      };
      if (_27 instanceof OpticUI_Markup.InitializerP) {
          return findProp(function (_0) {
              return _0.initializers;
          })(function (is) {
              return function (_1) {
                  var _42 = {};
                  for (var _43 in _1) {
                      if (_1.hasOwnProperty(_43)) {
                          _42[_43] = _1[_43];
                      };
                  };
                  _42.initializers = is;
                  return _42;
              };
          })(_27.value0)(OpticUI_Markup.runInitializer(function (i) {
              return OpticUI_Internal_VirtualDOM.initializer(_27.value0, i);
          })(_27.value1));
      };
      if (_27 instanceof OpticUI_Markup.FinalizerP) {
          return findProp(function (_2) {
              return _2.finalizers;
          })(function (fs) {
              return function (_3) {
                  var _46 = {};
                  for (var _47 in _3) {
                      if (_3.hasOwnProperty(_47)) {
                          _46[_47] = _3[_47];
                      };
                  };
                  _46.finalizers = fs;
                  return _46;
              };
          })(_27.value0)(OpticUI_Markup.runFinalizer(function (i) {
              return OpticUI_Internal_VirtualDOM.finalizer(_27.value0, i);
          })(_27.value1));
      };
      throw new Error("Failed pattern match at OpticUI.Run line 83, column 1 - line 84, column 1: " + [ _27.constructor.name ]);
  };
  var toVTree = function (_26) {
      if (_26 instanceof OpticUI_Markup.Text) {
          return Prelude["return"](Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(OpticUI_Internal_VirtualDOM.vtext(_26.value0));
      };
      if (_26 instanceof OpticUI_Markup.Element) {
          return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Array.foldM(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(function (acc) {
              return function (prop) {
                  return Prelude["<$>"](Control_Monad_State_Trans.functorStateT(Data_Identity.monadIdentity))(Prelude.append(OpticUI_Internal_VirtualDOM.semigroupProps)(acc))(toVProp(prop));
              };
          })(Data_Monoid.mempty(OpticUI_Internal_VirtualDOM.monoidProps))(_26.value2))(function (_17) {
              return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(toVTree)(_26.value3.value0))(function (_16) {
                  return Prelude["return"](Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(OpticUI_Internal_VirtualDOM.vnode(Data_Nullable.toNullable(_26.value0))(_26.value1)(Data_Nullable.toNullable(Data_Maybe.Nothing.value))(_17)(_16));
              });
          });
      };
      throw new Error("Failed pattern match: " + [ _26.constructor.name ]);
  };
  var buildVTree = function (_25) {
      return function (memo) {
          var n = Data_Nullable.toNullable(Data_Maybe.Nothing.value);
          var _61 = Control_Monad_State.runState(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(toVTree)(_25.value0))(memo);
          return new Data_Tuple.Tuple(OpticUI_Internal_VirtualDOM.vnode(n)("div")(n)(Data_Monoid.mempty(OpticUI_Internal_VirtualDOM.monoidProps))(_61.value0), _61.value1);
      };
  };
  var appendToBody = function (e) {
      return function __do() {
          var _22 = DOM_HTML.window();
          var _21 = DOM_HTML_Window.document(_22)();
          var _20 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(DOM_HTML_Document.body(_21))();
          return (function () {
              if (_20 instanceof Data_Maybe.Nothing) {
                  return Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit);
              };
              if (_20 instanceof Data_Maybe.Just) {
                  return Prelude["void"](Control_Monad_Eff.functorEff)(DOM_Node_Node.appendChild(DOM_HTML_Types.htmlElementToNode(e))(DOM_HTML_Types.htmlElementToNode(_20.value0)));
              };
              throw new Error("Failed pattern match at OpticUI.Run line 116, column 1 - line 117, column 1: " + [ _20.constructor.name ]);
          })()();
      };
  };
  var animate = function (s0) {
      return function (ui) {
          var v0 = OpticUI_Internal_VirtualDOM.vtext("");
          var n0 = OpticUI_Internal_VirtualDOM.createElement(v0);
          return function __do() {
              var _15 = Control_Monad_Eff_Ref.newRef(v0)();
              var _14 = Control_Monad_Eff_Ref.newRef(n0)();
              var _13 = Control_Monad_Eff_Ref.newRef(0)();
              var _12 = Control_Monad_Eff_Ref.newRef({
                  initializers: Data_StrMap.empty, 
                  finalizers: Data_StrMap.empty
              })();
              return (function () {
                  var checkGen = function (g) {
                      return function (go) {
                          return function __do() {
                              var _4 = Control_Monad_Eff_Ref.readRef(_13)();
                              return Control_Monad.when(Control_Monad_Eff.monadEff)(g === _4)(function __do() {
                                  Control_Monad_Eff_Ref.writeRef(_13)(_4 + 1 | 0)();
                                  return go();
                              })();
                          };
                      };
                  };
                  var step = function (gen) {
                      return function (s) {
                          return checkGen(gen)(function __do() {
                              var _11 = Control_Monad_Eff_Ref.readRef(_15)();
                              var _10 = Control_Monad_Eff_Ref.readRef(_12)();
                              var _9 = Prelude["<$>"](Control_Monad_Eff.functorEff)(function (tree) {
                                  return buildVTree(tree)(_10);
                              })(OpticUI_Core.runUI(ui)(s)(OpticUI_Core.Handler(step(gen + 1 | 0))))();
                              var _8 = Control_Monad_Eff_Ref.writeRef(_12)(_9.value1)();
                              var _7 = Control_Monad_Eff_Ref.writeRef(_15)(_9.value0)();
                              var _6 = Control_Monad_Eff_Ref.readRef(_14)();
                              var _5 = OpticUI_Internal_VirtualDOM.patch(OpticUI_Internal_VirtualDOM.diff(_11)(_9.value0))(_6)();
                              return Control_Monad_Eff_Ref.writeRef(_14)(_5)();
                          });
                      };
                  };
                  return onLoad(function __do() {
                      appendToBody(n0)();
                      return step(0)(s0)();
                  });
              })()();
          };
      };
  };
  exports["appendToBody"] = appendToBody;
  exports["onLoad"] = onLoad;
  exports["findProp"] = findProp;
  exports["toVProp"] = toVProp;
  exports["toVTree"] = toVTree;
  exports["buildVTree"] = buildVTree;
  exports["animate"] = animate;;
 
})(PS["OpticUI.Run"] = PS["OpticUI.Run"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Const = PS["Data.Const"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_Profunctor_Star = PS["Data.Profunctor.Star"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Lens_Internal_Wander = PS["Data.Lens.Internal.Wander"];     
  var traversed = function (__dict_Traversable_0) {
      return function (__dict_Wander_1) {
          return Data_Lens_Internal_Wander.wander(__dict_Wander_1)(function (__dict_Applicative_2) {
              return Data_Traversable.traverse(__dict_Traversable_0)(__dict_Applicative_2);
          });
      };
  };
  exports["traversed"] = traversed;;
 
})(PS["Data.Lens.Traversal"] = PS["Data.Lens.Traversal"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_Lens_Internal_Shop = PS["Data.Lens.Internal.Shop"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var lens$prime = function (to) {
      return function (__dict_Strong_0) {
          return function (pab) {
              return Data_Profunctor.dimap(__dict_Strong_0["__superclass_Data.Profunctor.Profunctor_0"]())(to)(function (_0) {
                  return _0.value1(_0.value0);
              })(Data_Profunctor_Strong.first(__dict_Strong_0)(pab));
          };
      };
  };
  var lens = function (get) {
      return function (set) {
          return function (__dict_Strong_1) {
              return lens$prime(function (s) {
                  return new Data_Tuple.Tuple(get(s), function (b) {
                      return set(s)(b);
                  });
              })(__dict_Strong_1);
          };
      };
  };
  exports["lens"] = lens;;
 
})(PS["Data.Lens.Lens"] = PS["Data.Lens.Lens"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Generic"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Array = PS["Data.Array"];
  var Data_String = PS["Data.String"];     
  var Proxy = (function () {
      function Proxy() {

      };
      Proxy.value = new Proxy();
      return Proxy;
  })();
  var SProd = (function () {
      function SProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SProd.create = function (value0) {
          return function (value1) {
              return new SProd(value0, value1);
          };
      };
      return SProd;
  })();
  var SRecord = (function () {
      function SRecord(value0) {
          this.value0 = value0;
      };
      SRecord.create = function (value0) {
          return new SRecord(value0);
      };
      return SRecord;
  })();
  var SNumber = (function () {
      function SNumber(value0) {
          this.value0 = value0;
      };
      SNumber.create = function (value0) {
          return new SNumber(value0);
      };
      return SNumber;
  })();
  var SBoolean = (function () {
      function SBoolean(value0) {
          this.value0 = value0;
      };
      SBoolean.create = function (value0) {
          return new SBoolean(value0);
      };
      return SBoolean;
  })();
  var SInt = (function () {
      function SInt(value0) {
          this.value0 = value0;
      };
      SInt.create = function (value0) {
          return new SInt(value0);
      };
      return SInt;
  })();
  var SString = (function () {
      function SString(value0) {
          this.value0 = value0;
      };
      SString.create = function (value0) {
          return new SString(value0);
      };
      return SString;
  })();
  var SArray = (function () {
      function SArray(value0) {
          this.value0 = value0;
      };
      SArray.create = function (value0) {
          return new SArray(value0);
      };
      return SArray;
  })();
  var SigProd = (function () {
      function SigProd(value0) {
          this.value0 = value0;
      };
      SigProd.create = function (value0) {
          return new SigProd(value0);
      };
      return SigProd;
  })();
  var SigRecord = (function () {
      function SigRecord(value0) {
          this.value0 = value0;
      };
      SigRecord.create = function (value0) {
          return new SigRecord(value0);
      };
      return SigRecord;
  })();
  var SigNumber = (function () {
      function SigNumber() {

      };
      SigNumber.value = new SigNumber();
      return SigNumber;
  })();
  var SigBoolean = (function () {
      function SigBoolean() {

      };
      SigBoolean.value = new SigBoolean();
      return SigBoolean;
  })();
  var SigInt = (function () {
      function SigInt() {

      };
      SigInt.value = new SigInt();
      return SigInt;
  })();
  var SigString = (function () {
      function SigString() {

      };
      SigString.value = new SigString();
      return SigString;
  })();
  var SigArray = (function () {
      function SigArray(value0) {
          this.value0 = value0;
      };
      SigArray.create = function (value0) {
          return new SigArray(value0);
      };
      return SigArray;
  })();
  var Generic = function (fromSpine, toSignature, toSpine) {
      this.fromSpine = fromSpine;
      this.toSignature = toSignature;
      this.toSpine = toSpine;
  };
  var toSpine = function (dict) {
      return dict.toSpine;
  };
  var toSignature = function (dict) {
      return dict.toSignature;
  };
  var genericString = new Generic(function (_10) {
      if (_10 instanceof SString) {
          return new Data_Maybe.Just(_10.value0);
      };
      return Data_Maybe.Nothing.value;
  }, function (_9) {
      return SigString.value;
  }, function (x) {
      return new SString(x);
  });
  var fromSpine = function (dict) {
      return dict.fromSpine;
  };
  var anyProxy = Proxy.value;
  exports["Proxy"] = Proxy;
  exports["SigProd"] = SigProd;
  exports["SigRecord"] = SigRecord;
  exports["SigNumber"] = SigNumber;
  exports["SigBoolean"] = SigBoolean;
  exports["SigInt"] = SigInt;
  exports["SigString"] = SigString;
  exports["SigArray"] = SigArray;
  exports["SProd"] = SProd;
  exports["SRecord"] = SRecord;
  exports["SNumber"] = SNumber;
  exports["SBoolean"] = SBoolean;
  exports["SInt"] = SInt;
  exports["SString"] = SString;
  exports["SArray"] = SArray;
  exports["Generic"] = Generic;
  exports["anyProxy"] = anyProxy;
  exports["fromSpine"] = fromSpine;
  exports["toSignature"] = toSignature;
  exports["toSpine"] = toSpine;
  exports["genericString"] = genericString;;
 
})(PS["Data.Generic"] = PS["Data.Generic"] || {});
(function(exports) {
  // module Data.Argonaut.Core

  function id(x) {
      return x;
  } 

  exports._foldJson = function(isNull, isBool, isNum, isStr, isArr, isObj, j) {
      if (j == null) return isNull(null);
      else if (typeof j === 'boolean') return isBool(j);
      else if (typeof j === 'number') return isNum(j);
      else if (typeof j === 'string') return isStr(j);
      else if (Object.prototype.toString.call(j) === '[object Array]')
          return isArr(j);
      else return isObj(j);
  };

  function _compare(EQ, GT, LT, a, b) {
      function isArray(a) {
          return Object.prototype.toString.call(a) === '[object Array]';
      }
      function keys(o) {
          var a = [];
          for (var k in o) {
              a.push(k);
          }
          return a;
      }

      if (a == null) {
          if (b == null) return EQ;
          else return LT;
      } else if (typeof a === 'boolean') {
          if (typeof b === 'boolean') {
              // boolean / boolean
              if (a === b) return EQ;
              else if (a == false) return LT;
              else return GT;
          } else if (b == null) return GT;
          else return LT;
      } else if (typeof a === 'number') {
          if (typeof b === 'number') {
              if (a === b) return EQ;
              else if (a < b) return LT;
              else return GT;
          } else if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else return LT;
      } else if (typeof a === 'string') {
          if (typeof b === 'string') {
              if (a === b) return EQ;
              else if (a < b) return LT;
              else return GT;
          } else if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else if (typeof b === 'number') return GT;
          else return LT;
      } else if (isArray(a)) {
          if (isArray(b)) {
              for (var i = 0; i < Math.min(a.length, b.length); i++) {
                  var c = _compare(EQ, GT, LT, a[i], b[i]);
                
                  if (c !== EQ) return c;
              }
              if (a.length === b.length) return EQ;
              else if (a.length < b.length) return LT;
              else return GT;
          } else if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else if (typeof b === 'number') return GT;
          else if (typeof b === 'string') return GT;
          else return LT;
      }
      else {
          if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else if (typeof b === 'number') return GT;
          else if (typeof b === 'string') return GT;
          else if (isArray(b)) return GT;
          else {
              var akeys = keys(a);
              var bkeys = keys(b);
            
              var keys = akeys.concat(bkeys).sort();
            
              for (var i = 0; i < keys.length; i++) {
                  var k = keys[i];
                
                  if (a[k] === undefined) return LT;
                  else if (b[k] === undefined) return GT;
                
                  var c = _compare(EQ, GT, LT, a[k], b[k]);
                
                  if (c !== EQ) return c;
              }
            
              if (akeys.length === bkeys.length) return EQ;
              else if (akeys.length < bkeys.length) return LT;
              else return GT;
          }
      }
  };                          
 
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Argonaut.Core"];
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];
  var Data_StrMap = PS["Data.StrMap"];     
  var verbJsonType = function (def) {
      return function (f) {
          return function (fold) {
              return fold(def)(f);
          };
      };
  };
  var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var foldJsonString = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), j);
          };
      };
  };                                        
  var toString = toJsonType(foldJsonString);
  var foldJsonObject = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, j);
          };
      };
  };                                        
  var toObject = toJsonType(foldJsonObject);
  var foldJsonNumber = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
          };
      };
  };                                        
  var toNumber = toJsonType(foldJsonNumber);
  var foldJsonBoolean = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
          };
      };
  };                                          
  var toBoolean = toJsonType(foldJsonBoolean);
  var foldJsonArray = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), j);
          };
      };
  };                                      
  var toArray = toJsonType(foldJsonArray);
  exports["toObject"] = toObject;
  exports["toArray"] = toArray;
  exports["toString"] = toString;
  exports["toNumber"] = toNumber;
  exports["toBoolean"] = toBoolean;
  exports["foldJsonObject"] = foldJsonObject;
  exports["foldJsonArray"] = foldJsonArray;
  exports["foldJsonString"] = foldJsonString;
  exports["foldJsonNumber"] = foldJsonNumber;
  exports["foldJsonBoolean"] = foldJsonBoolean;;
 
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var $eq$less$less = function (__dict_Bind_1) {
      return function (f) {
          return function (m) {
              return Prelude[">>="](__dict_Bind_1)(m)(f);
          };
      };
  };
  var $less$eq$less = function (__dict_Bind_2) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return $eq$less$less(__dict_Bind_2)(f)(g(a));
              };
          };
      };
  };
  exports["<=<"] = $less$eq$less;
  exports["=<<"] = $eq$less$less;;
 
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_String = PS["Data.String"];
  var Data_List = PS["Data.List"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic = PS["Data.Generic"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Map = PS["Data.Map"];     
  var DecodeJson = function (decodeJson) {
      this.decodeJson = decodeJson;
  };
  var gDecodeJson$prime = function (signature) {
      return function (json) {
          var mFail = function (msg) {
              return Data_Maybe.maybe(new Data_Either.Left(msg))(Data_Either.Right.create);
          };
          if (signature instanceof Data_Generic.SigNumber) {
              return Prelude["<$>"](Data_Either.functorEither)(Data_Generic.SNumber.create)(mFail("Expected a number")(Data_Argonaut_Core.toNumber(json)));
          };
          if (signature instanceof Data_Generic.SigInt) {
              return Prelude["<$>"](Data_Either.functorEither)(Data_Generic.SInt.create)(mFail("Expected an integer number")(Control_Bind["=<<"](Data_Maybe.bindMaybe)(Data_Int.fromNumber)(Data_Argonaut_Core.toNumber(json))));
          };
          if (signature instanceof Data_Generic.SigString) {
              return Prelude["<$>"](Data_Either.functorEither)(Data_Generic.SString.create)(mFail("Expected a string")(Data_Argonaut_Core.toString(json)));
          };
          if (signature instanceof Data_Generic.SigBoolean) {
              return Prelude["<$>"](Data_Either.functorEither)(Data_Generic.SBoolean.create)(mFail("Expected a boolean")(Data_Argonaut_Core.toBoolean(json)));
          };
          if (signature instanceof Data_Generic.SigArray) {
              return Prelude.bind(Data_Either.bindEither)(mFail("Expected an array")(Data_Argonaut_Core.toArray(json)))(function (_1) {
                  return Prelude["<$>"](Data_Either.functorEither)(Data_Generic.SArray.create)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(function (_43) {
                      return Prelude.map(Data_Either.functorEither)(Prelude["const"])(gDecodeJson$prime(signature.value0(Prelude.unit))(_43));
                  })(_1));
              });
          };
          if (signature instanceof Data_Generic.SigRecord) {
              return Prelude.bind(Data_Either.bindEither)(mFail("Expected an object")(Data_Argonaut_Core.toObject(json)))(function (_4) {
                  return Prelude["<$>"](Data_Either.functorEither)(Data_Generic.SRecord.create)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(signature.value0)(function (_12) {
                      return Prelude.bind(Data_Either.bindEither)(mFail("'" + (_12.recLabel + "' property missing"))(Data_StrMap.lookup(_12.recLabel)(_4)))(function (_3) {
                          return Prelude.bind(Data_Either.bindEither)(gDecodeJson$prime(_12.recValue(Prelude.unit))(_3))(function (_2) {
                              return Prelude.pure(Data_Either.applicativeEither)({
                                  recLabel: _12.recLabel, 
                                  recValue: Prelude["const"](_2)
                              });
                          });
                      });
                  }));
              });
          };
          if (signature instanceof Data_Generic.SigProd) {
              return Prelude.bind(Data_Either.bindEither)(mFail("Expected an object")(Data_Argonaut_Core.toObject(json)))(function (_8) {
                  return Prelude.bind(Data_Either.bindEither)(mFail("'tag' string property is missing")(Control_Bind["=<<"](Data_Maybe.bindMaybe)(Data_Argonaut_Core.toString)(Data_StrMap.lookup("tag")(_8))))(function (_7) {
                      var _27 = Data_Foldable.find(Data_Foldable.foldableArray)(function (_44) {
                          return Prelude["=="](Prelude.eqString)(_7)((function (_0) {
                              return _0.sigConstructor;
                          })(_44));
                      })(signature.value0);
                      if (_27 instanceof Data_Maybe.Nothing) {
                          return new Data_Either.Left("'" + (_7 + "' isn't a valid constructor"));
                      };
                      if (_27 instanceof Data_Maybe.Just) {
                          return Prelude.bind(Data_Either.bindEither)(mFail("'values' array is missing")(Control_Bind["=<<"](Data_Maybe.bindMaybe)(Data_Argonaut_Core.toArray)(Data_StrMap.lookup("values")(_8))))(function (_6) {
                              return Prelude.bind(Data_Either.bindEither)(Data_Array.zipWithA(Data_Either.applicativeEither)(function (k) {
                                  return gDecodeJson$prime(k(Prelude.unit));
                              })(_27.value0.sigValues)(_6))(function (_5) {
                                  return Prelude.pure(Data_Either.applicativeEither)(new Data_Generic.SProd(_7, Prelude["<$>"](Prelude.functorArray)(Prelude["const"])(_5)));
                              });
                          });
                      };
                      throw new Error("Failed pattern match: " + [ _27.constructor.name ]);
                  });
              });
          };
          throw new Error("Failed pattern match: " + [ signature.constructor.name ]);
      };
  };
  var gDecodeJson = function (__dict_Generic_0) {
      return function (json) {
          return Control_Bind["=<<"](Data_Either.bindEither)(function (_45) {
              return Data_Maybe.maybe(new Data_Either.Left("fromSpine failed"))(Data_Either.Right.create)(Data_Generic.fromSpine(__dict_Generic_0)(_45));
          })(gDecodeJson$prime(Data_Generic.toSignature(__dict_Generic_0)(Data_Generic.Proxy.value))(json));
      };
  };                                                                                                                                           
  var decodeJson = function (dict) {
      return dict.decodeJson;
  };
  var decodeMaybe = function (__dict_DecodeJson_9) {
      return function (json) {
          return Data_Either.either(Prelude["const"](Data_Maybe.Nothing.value))(Prelude.pure(Data_Maybe.applicativeMaybe))(decodeJson(__dict_DecodeJson_9)(json));
      };
  };
  var decodeArray = function (__dict_DecodeJson_12) {
      return new DecodeJson(function (json) {
          return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode."))(Data_Either.Right.create)(Prelude.bind(Data_Maybe.bindMaybe)(Data_Argonaut_Core.toArray(json))(function (_10) {
              return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(decodeMaybe(__dict_DecodeJson_12))(_10);
          }));
      });
  };
  exports["DecodeJson"] = DecodeJson;
  exports["decodeMaybe"] = decodeMaybe;
  exports["gDecodeJson"] = gDecodeJson;
  exports["decodeJson"] = decodeJson;
  exports["decodeArray"] = decodeArray;;
 
})(PS["Data.Argonaut.Decode"] = PS["Data.Argonaut.Decode"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Klikhut_SQL = PS["Klikhut.SQL"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];     
  var Photobooth = (function () {
      function Photobooth(value0) {
          this.value0 = value0;
      };
      Photobooth.create = function (value0) {
          return new Photobooth(value0);
      };
      return Photobooth;
  })();
  var genericPhotobooth = new Data_Generic.Generic(function ($dollarx) {
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "Photobooth" && $dollarx.value1.length === 1)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Photobooth.create))((function (r) {
              if (r instanceof Data_Generic.SRecord && r.value0.length === 3) {
                  return Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(function (alias_1) {
                      return function (computername_1) {
                          return function (defaultprofile_1) {
                              return {
                                  alias: alias_1, 
                                  computername: computername_1, 
                                  defaultprofile: defaultprofile_1
                              };
                          };
                      };
                  }))(Data_Generic.fromSpine(Data_Generic.genericString)((r.value0[0]).recValue(Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)((r.value0[1]).recValue(Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)((r.value0[2]).recValue(Prelude.unit)));
              };
              return Data_Maybe.Nothing.value;
          })($dollarx.value1[0](Prelude.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd([ {
          sigConstructor: "Photobooth", 
          sigValues: [ function ($dollarq_1) {
              return new Data_Generic.SigRecord([ {
                  recLabel: "alias", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
                  }
              }, {
                  recLabel: "computername", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
                  }
              }, {
                  recLabel: "defaultprofile", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
                  }
              } ]);
          } ]
      } ]);
  }, function ($dollarx) {
      return new Data_Generic.SProd("Photobooth", [ function ($dollarq) {
          return new Data_Generic.SRecord([ {
              recLabel: "alias", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0.alias);
              }
          }, {
              recLabel: "computername", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0.computername);
              }
          }, {
              recLabel: "defaultprofile", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0.defaultprofile);
              }
          } ]);
      } ]);
  });                                                                                                                 
  var decodeJsonPhotobooth = new Data_Argonaut_Decode.DecodeJson(Data_Argonaut_Decode.gDecodeJson(genericPhotobooth));
  exports["Photobooth"] = Photobooth;
  exports["genericPhotobooth"] = genericPhotobooth;
  exports["decodeJsonPhotobooth"] = decodeJsonPhotobooth;;
 
})(PS["Klikhut.Photobooth"] = PS["Klikhut.Photobooth"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Profunctor_Star = PS["Data.Profunctor.Star"];
  var Data_Const = PS["Data.Const"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_Lens_Internal_Tagged = PS["Data.Lens.Internal.Tagged"];
  var Data_Lens_Internal_Market = PS["Data.Lens.Internal.Market"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var prism = function (to) {
      return function (fro) {
          return function (__dict_Choice_0) {
              return function (pab) {
                  return Data_Profunctor.dimap(__dict_Choice_0["__superclass_Data.Profunctor.Profunctor_0"]())(fro)(Data_Either.either(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn)))(Data_Profunctor_Choice.right(__dict_Choice_0)(Data_Profunctor.rmap(__dict_Choice_0["__superclass_Data.Profunctor.Profunctor_0"]())(to)(pab)));
              };
          };
      };
  };
  var prism$prime = function (to) {
      return function (fro) {
          return function (__dict_Choice_1) {
              return prism(to)(function (s) {
                  return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(fro(s));
              })(__dict_Choice_1);
          };
      };
  };
  exports["prism'"] = prism$prime;
  exports["prism"] = prism;;
 
})(PS["Data.Lens.Prism"] = PS["Data.Lens.Prism"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports._makeAff = function (cb) {
    return function(success, error) {
      return cb(function(e) {
        return function() {
          error(e);
        };
      })(function(v) {
        return function() {
          try {
            success(v);
          } catch (e) {
            error(e);
          }
        };
      })();
    }
  }

  exports._pure = function (nonCanceler, v) {
    return function(success, error) {
      try {
        success(v);
      } catch (e) {
        error(e);
      }

      return nonCanceler;
    };
  }

  exports._throwError = function (nonCanceler, e) {
    return function(success, error) {
      error(e);

      return nonCanceler;
    };
  }

  exports._fmap = function (f, aff) {
    return function(success, error) {
      return aff(function(v) {
        try {
          success(f(v));
        } catch (e) {
          error(e);
        }
      }, error);
    };
  }

  exports._bind = function (alwaysCanceler, aff, f) {
    return function(success, error) {
      var canceler1, canceler2;

      var isCanceled    = false;
      var requestCancel = false;

      var onCanceler = function(){};

      canceler1 = aff(function(v) {
        if (requestCancel) {
          isCanceled = true;

          return alwaysCanceler;
        } else {
          canceler2 = f(v)(success, error);

          onCanceler(canceler2);

          return canceler2;
        }
      }, error);

      return function(e) {
        return function(s, f) {
          requestCancel = true;

          if (canceler2 !== undefined) {
            return canceler2(e)(s, f);
          } else {
            return canceler1(e)(function(bool) {
              if (bool || isCanceled) {
                try {
                  s(true);
                } catch (e) {
                  f(e);
                }
              } else {
                onCanceler = function(canceler) {
                  canceler(e)(s, f);
                };
              }
            }, f);
          }
        };
      };
    };
  }

  exports._attempt = function (Left, Right, aff) {
    return function(success, error) {
      return aff(function(v) {
        try {
          success(Right(v));
        } catch (e) {
          error(e);
        }
      }, function(e) {
        try {
          success(Left(e));
        } catch (e) {
          error(e);
        }
      });
    };
  }

  exports._runAff = function (errorT, successT, aff) {
    return function() {
      return aff(function(v) {
        try {
          successT(v)();
        } catch (e) {
          errorT(e)();
        }
      }, function(e) {
        errorT(e)();
      });
    };
  }
 
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Control.Monad.Aff"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Monoid = PS["Data.Monoid"];
  var runAff = function (ex) {
      return function (f) {
          return function (aff) {
              return $foreign._runAff(ex, f, aff);
          };
      };
  };
  var makeAff$prime = function (h) {
      return $foreign._makeAff(h);
  };
  var functorAff = new Prelude.Functor(function (f) {
      return function (fa) {
          return $foreign._fmap(f, fa);
      };
  });
  var attempt = function (aff) {
      return $foreign._attempt(Data_Either.Left.create, Data_Either.Right.create, aff);
  };
  var applyAff = new Prelude.Apply(function () {
      return functorAff;
  }, function (ff) {
      return function (fa) {
          return $foreign._bind(alwaysCanceler, ff, function (f) {
              return Prelude["<$>"](functorAff)(f)(fa);
          });
      };
  });
  var applicativeAff = new Prelude.Applicative(function () {
      return applyAff;
  }, function (v) {
      return $foreign._pure(nonCanceler, v);
  });
  var nonCanceler = Prelude["const"](Prelude.pure(applicativeAff)(false));
  var alwaysCanceler = Prelude["const"](Prelude.pure(applicativeAff)(true));
  var makeAff = function (h) {
      return makeAff$prime(function (e) {
          return function (a) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](nonCanceler))(h(e)(a));
          };
      });
  };                                                       
  var bindAff = new Prelude.Bind(function () {
      return applyAff;
  }, function (fa) {
      return function (f) {
          return $foreign._bind(alwaysCanceler, fa, f);
      };
  });
  var monadAff = new Prelude.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
      return monadAff;
  }, function (aff) {
      return function (ex) {
          return Prelude[">>="](bindAff)(attempt(aff))(Data_Either.either(ex)(Prelude.pure(applicativeAff)));
      };
  }, function (e) {
      return $foreign._throwError(nonCanceler, e);
  });
  exports["runAff"] = runAff;
  exports["nonCanceler"] = nonCanceler;
  exports["makeAff'"] = makeAff$prime;
  exports["makeAff"] = makeAff;
  exports["attempt"] = attempt;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadErrorAff"] = monadErrorAff;;
 
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var OpticUI_Core = PS["OpticUI.Core"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Either = PS["Data.Either"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Async = (function () {
      function Async(value0) {
          this.value0 = value0;
      };
      Async.create = function (value0) {
          return new Async(value0);
      };
      return Async;
  })();
  var onResult = function (__dict_Monoid_0) {
      return function (s) {
          return function (f) {
              return OpticUI_Core["with"](function (_4) {
                  return function (_3) {
                      return OpticUI_Core.inline(function __do() {
                          Control_Monad_Eff_Ref.writeRef(_4.value0)(Data_Either.either(f)(s))();
                          return Data_Monoid.mempty(__dict_Monoid_0);
                      });
                  };
              });
          };
      };
  };
  var async = function (go) {
      return function __do() {
          var _2 = Control_Monad_Eff_Ref.newRef(Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)))();
          return (function () {
              var s = function (a) {
                  return function __do() {
                      var _0 = Control_Monad_Eff_Ref.readRef(_2)();
                      return _0(new Data_Either.Right(a))();
                  };
              };
              var f = function (e) {
                  return function __do() {
                      var _1 = Control_Monad_Eff_Ref.readRef(_2)();
                      return _1(new Data_Either.Left(e))();
                  };
              };
              return function __do() {
                  Control_Monad_Aff.runAff(f)(s)(go)();
                  return new Async(_2);
              };
          })()();
      };
  };
  exports["Async"] = Async;
  exports["async"] = async;
  exports["onResult"] = onResult;;
 
})(PS["OpticUI.Components.Async"] = PS["OpticUI.Components.Async"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Prelude = PS["Prelude"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Maybe = PS["Data.Maybe"];
  var OpticUI_Components_Async = PS["OpticUI.Components.Async"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];     
  var Initial = (function () {
      function Initial() {

      };
      Initial.value = new Initial();
      return Initial;
  })();
  var Loading = (function () {
      function Loading(value0) {
          this.value0 = value0;
      };
      Loading.create = function (value0) {
          return new Loading(value0);
      };
      return Loading;
  })();
  var Errored = (function () {
      function Errored(value0) {
          this.value0 = value0;
      };
      Errored.create = function (value0) {
          return new Errored(value0);
      };
      return Errored;
  })();
  var Loaded = (function () {
      function Loaded(value0) {
          this.value0 = value0;
      };
      Loaded.create = function (value0) {
          return new Loaded(value0);
      };
      return Loaded;
  })();
  var _Loading = function (__dict_Choice_0) {
      var l = function (_1) {
          if (_1 instanceof Loading) {
              return new Data_Maybe.Just(_1.value0);
          };
          return Data_Maybe.Nothing.value;
      };
      return Data_Lens_Prism["prism'"](Loading.create)(l)(__dict_Choice_0);
  };
  var _Loaded = function (__dict_Choice_1) {
      var l = function (_3) {
          if (_3 instanceof Loaded) {
              return new Data_Maybe.Just(_3.value0);
          };
          return Data_Maybe.Nothing.value;
      };
      return Data_Lens_Prism["prism'"](Loaded.create)(l)(__dict_Choice_1);
  };
  var _Initial = function (__dict_Choice_2) {
      var l = function (_0) {
          if (_0 instanceof Initial) {
              return new Data_Maybe.Just(Prelude.unit);
          };
          return Data_Maybe.Nothing.value;
      };
      return Data_Lens_Prism["prism'"](Prelude["const"](Initial.value))(l)(__dict_Choice_2);
  };
  var _Errored = function (__dict_Choice_3) {
      var l = function (_2) {
          if (_2 instanceof Errored) {
              return new Data_Maybe.Just(_2.value0);
          };
          return Data_Maybe.Nothing.value;
      };
      return Data_Lens_Prism["prism'"](Errored.create)(l)(__dict_Choice_3);
  };
  exports["Initial"] = Initial;
  exports["Loading"] = Loading;
  exports["Errored"] = Errored;
  exports["Loaded"] = Loaded;
  exports["_Loaded"] = _Loaded;
  exports["_Errored"] = _Errored;
  exports["_Loading"] = _Loading;
  exports["_Initial"] = _Initial;;
 
})(PS["Klikhut.Async"] = PS["Klikhut.Async"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var OpticUI_Markup = PS["OpticUI.Markup"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var ul_ = OpticUI_Markup.element(Data_Maybe.Nothing.value)("ul")([  ]); 
  var span = OpticUI_Markup.element(Data_Maybe.Nothing.value)("span");
  var onClick = function (h) {
      return OpticUI_Markup.handle("click")(h);
  };                                                                  
  var li_ = OpticUI_Markup.element(Data_Maybe.Nothing.value)("li")([  ]);
  var div_ = OpticUI_Markup.element(Data_Maybe.Nothing.value)("div")([  ]);
  var button = OpticUI_Markup.element(Data_Maybe.Nothing.value)("button");
  exports["onClick"] = onClick;
  exports["ul_"] = ul_;
  exports["span"] = span;
  exports["li_"] = li_;
  exports["div_"] = div_;
  exports["button"] = button;;
 
})(PS["OpticUI.Markup.HTML"] = PS["OpticUI.Markup.HTML"] || {});
(function(exports) {
  /* global exports */
  /* global XMLHttpRequest */
  /* global module */
  "use strict";

  // module Network.HTTP.Affjax

  // jshint maxparams: 5
  exports._ajax = function (mkHeader, options, canceler, errback, callback) {
    var platformSpecific = { };
    if (typeof module !== "undefined" && module.require) {
      // We are on node.js
      platformSpecific.newXHR = function () {
        var XHR = module.require("xhr2");
        return new XHR();
      };

      platformSpecific.fixupUrl = function (url) {
        var urllib = module.require("url");
        var u = urllib.parse(url);
        u.protocol = u.protocol || "http:";
        u.hostname = u.hostname || "localhost";
        return urllib.format(u);
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    } else {
      // We are in the browser
      platformSpecific.newXHR = function () {
        return new XMLHttpRequest();
      };

      platformSpecific.fixupUrl = function (url) {
        return url || "/";
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    }

    return function () {
      var xhr = platformSpecific.newXHR();
      var fixedUrl = platformSpecific.fixupUrl(options.url);
      xhr.open(options.method || "GET", fixedUrl, true, options.username, options.password);
      if (options.headers) {
        for (var i = 0, header; (header = options.headers[i]) != null; i++) {
          xhr.setRequestHeader(header.field, header.value);
        }
      }
      xhr.onerror = function () {
        errback(new Error("AJAX request failed: " + options.method + " " + options.url))();
      };
      xhr.onload = function () {
        callback({
          status: xhr.status,
          headers: xhr.getAllResponseHeaders().split("\n")
            .filter(function (header) {
              return header.length > 0;
            })
            .map(function (header) {
              var i = header.indexOf(":");
              return mkHeader(header.substring(0, i))(header.substring(i + 2));
            }),
          response: platformSpecific.getResponse(xhr)
        })();
      };
      xhr.responseType = options.responseType;
      xhr.send(options.content);
      return canceler(xhr);
    };
  };

  // jshint maxparams: 4
  exports._cancelAjax = function (xhr, cancelError, errback, callback) {
    return function () {
      try { xhr.abort(); } catch (e) { return callback(false)(); }
      return callback(true)();
    };
  };

 
})(PS["Network.HTTP.Affjax"] = PS["Network.HTTP.Affjax"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var DOM_File_Types = PS["DOM.File.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var DOM_XHR_Types = PS["DOM.XHR.Types"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];     
  var Requestable = function (toRequest) {
      this.toRequest = toRequest;
  };
  var toRequest = function (dict) {
      return dict.toRequest;
  };
  var requestableUnit = new Requestable(Unsafe_Coerce.unsafeCoerce);
  exports["Requestable"] = Requestable;
  exports["toRequest"] = toRequest;
  exports["requestableUnit"] = requestableUnit;;
 
})(PS["Network.HTTP.Affjax.Request"] = PS["Network.HTTP.Affjax.Request"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var DOM_File_Types = PS["DOM.File.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var DOM_XHR_Types = PS["DOM.XHR.Types"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];     
  var ArrayBufferResponse = (function () {
      function ArrayBufferResponse() {

      };
      ArrayBufferResponse.value = new ArrayBufferResponse();
      return ArrayBufferResponse;
  })();
  var BlobResponse = (function () {
      function BlobResponse() {

      };
      BlobResponse.value = new BlobResponse();
      return BlobResponse;
  })();
  var DocumentResponse = (function () {
      function DocumentResponse() {

      };
      DocumentResponse.value = new DocumentResponse();
      return DocumentResponse;
  })();
  var JSONResponse = (function () {
      function JSONResponse() {

      };
      JSONResponse.value = new JSONResponse();
      return JSONResponse;
  })();
  var StringResponse = (function () {
      function StringResponse() {

      };
      StringResponse.value = new StringResponse();
      return StringResponse;
  })();
  var Respondable = function (fromResponse, responseType) {
      this.fromResponse = fromResponse;
      this.responseType = responseType;
  }; 
  var responseTypeToString = function (_0) {
      if (_0 instanceof ArrayBufferResponse) {
          return "arraybuffer";
      };
      if (_0 instanceof BlobResponse) {
          return "blob";
      };
      if (_0 instanceof DocumentResponse) {
          return "document";
      };
      if (_0 instanceof JSONResponse) {
          return "text";
      };
      if (_0 instanceof StringResponse) {
          return "text";
      };
      throw new Error("Failed pattern match at Network.HTTP.Affjax.Response line 41, column 1 - line 42, column 1: " + [ _0.constructor.name ]);
  };
  var responseType = function (dict) {
      return dict.responseType;
  };                                                                                                                 
  var responsableString = new Respondable(Data_Foreign.readString, StringResponse.value);                               
  var fromResponse = function (dict) {
      return dict.fromResponse;
  };
  exports["ArrayBufferResponse"] = ArrayBufferResponse;
  exports["BlobResponse"] = BlobResponse;
  exports["DocumentResponse"] = DocumentResponse;
  exports["JSONResponse"] = JSONResponse;
  exports["StringResponse"] = StringResponse;
  exports["Respondable"] = Respondable;
  exports["fromResponse"] = fromResponse;
  exports["responseType"] = responseType;
  exports["responseTypeToString"] = responseTypeToString;
  exports["responsableString"] = responsableString;;
 
})(PS["Network.HTTP.Affjax.Response"] = PS["Network.HTTP.Affjax.Response"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];     
  var DELETE = (function () {
      function DELETE() {

      };
      DELETE.value = new DELETE();
      return DELETE;
  })();
  var GET = (function () {
      function GET() {

      };
      GET.value = new GET();
      return GET;
  })();
  var HEAD = (function () {
      function HEAD() {

      };
      HEAD.value = new HEAD();
      return HEAD;
  })();
  var OPTIONS = (function () {
      function OPTIONS() {

      };
      OPTIONS.value = new OPTIONS();
      return OPTIONS;
  })();
  var PATCH = (function () {
      function PATCH() {

      };
      PATCH.value = new PATCH();
      return PATCH;
  })();
  var POST = (function () {
      function POST() {

      };
      POST.value = new POST();
      return POST;
  })();
  var PUT = (function () {
      function PUT() {

      };
      PUT.value = new PUT();
      return PUT;
  })();
  var MOVE = (function () {
      function MOVE() {

      };
      MOVE.value = new MOVE();
      return MOVE;
  })();
  var COPY = (function () {
      function COPY() {

      };
      COPY.value = new COPY();
      return COPY;
  })();
  var CustomMethod = (function () {
      function CustomMethod(value0) {
          this.value0 = value0;
      };
      CustomMethod.create = function (value0) {
          return new CustomMethod(value0);
      };
      return CustomMethod;
  })();
  var showMethod = new Prelude.Show(function (_3) {
      if (_3 instanceof DELETE) {
          return "DELETE";
      };
      if (_3 instanceof GET) {
          return "GET";
      };
      if (_3 instanceof HEAD) {
          return "HEAD";
      };
      if (_3 instanceof OPTIONS) {
          return "OPTIONS";
      };
      if (_3 instanceof PATCH) {
          return "PATCH";
      };
      if (_3 instanceof POST) {
          return "POST";
      };
      if (_3 instanceof PUT) {
          return "PUT";
      };
      if (_3 instanceof MOVE) {
          return "MOVE";
      };
      if (_3 instanceof COPY) {
          return "COPY";
      };
      if (_3 instanceof CustomMethod) {
          return "(CustomMethod " + (Prelude.show(Prelude.showString)(_3.value0) + ")");
      };
      throw new Error("Failed pattern match at Network.HTTP.Method line 29, column 1 - line 41, column 1: " + [ _3.constructor.name ]);
  });
  var methodToString = function (_0) {
      if (_0 instanceof CustomMethod) {
          return _0.value0;
      };
      return Prelude.show(showMethod)(_0);
  };
  exports["DELETE"] = DELETE;
  exports["GET"] = GET;
  exports["HEAD"] = HEAD;
  exports["OPTIONS"] = OPTIONS;
  exports["PATCH"] = PATCH;
  exports["POST"] = POST;
  exports["PUT"] = PUT;
  exports["MOVE"] = MOVE;
  exports["COPY"] = COPY;
  exports["CustomMethod"] = CustomMethod;
  exports["methodToString"] = methodToString;
  exports["showMethod"] = showMethod;;
 
})(PS["Network.HTTP.Method"] = PS["Network.HTTP.Method"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var mimeTypeToString = function (_0) {
      return _0;
  };
  exports["mimeTypeToString"] = mimeTypeToString;;
 
})(PS["Network.HTTP.MimeType"] = PS["Network.HTTP.MimeType"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Network_HTTP_MimeType = PS["Network.HTTP.MimeType"];     
  var Accept = (function () {
      function Accept(value0) {
          this.value0 = value0;
      };
      Accept.create = function (value0) {
          return new Accept(value0);
      };
      return Accept;
  })();
  var ContentType = (function () {
      function ContentType(value0) {
          this.value0 = value0;
      };
      ContentType.create = function (value0) {
          return new ContentType(value0);
      };
      return ContentType;
  })();
  var RequestHeader = (function () {
      function RequestHeader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RequestHeader.create = function (value0) {
          return function (value1) {
              return new RequestHeader(value0, value1);
          };
      };
      return RequestHeader;
  })();
  var requestHeaderValue = function (_1) {
      if (_1 instanceof Accept) {
          return Network_HTTP_MimeType.mimeTypeToString(_1.value0);
      };
      if (_1 instanceof ContentType) {
          return Network_HTTP_MimeType.mimeTypeToString(_1.value0);
      };
      if (_1 instanceof RequestHeader) {
          return _1.value1;
      };
      throw new Error("Failed pattern match at Network.HTTP.RequestHeader line 28, column 1 - line 29, column 1: " + [ _1.constructor.name ]);
  };
  var requestHeaderName = function (_0) {
      if (_0 instanceof Accept) {
          return "Accept";
      };
      if (_0 instanceof ContentType) {
          return "Content-Type";
      };
      if (_0 instanceof RequestHeader) {
          return _0.value0;
      };
      throw new Error("Failed pattern match at Network.HTTP.RequestHeader line 23, column 1 - line 24, column 1: " + [ _0.constructor.name ]);
  };
  exports["Accept"] = Accept;
  exports["ContentType"] = ContentType;
  exports["RequestHeader"] = RequestHeader;
  exports["requestHeaderValue"] = requestHeaderValue;
  exports["requestHeaderName"] = requestHeaderName;;
 
})(PS["Network.HTTP.RequestHeader"] = PS["Network.HTTP.RequestHeader"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];     
  var ResponseHeader = (function () {
      function ResponseHeader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ResponseHeader.create = function (value0) {
          return function (value1) {
              return new ResponseHeader(value0, value1);
          };
      };
      return ResponseHeader;
  })();
  var responseHeader = function (field) {
      return function (value) {
          return new ResponseHeader(field, value);
      };
  };
  exports["responseHeader"] = responseHeader;;
 
})(PS["Network.HTTP.ResponseHeader"] = PS["Network.HTTP.ResponseHeader"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Network.HTTP.Affjax"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_Par = PS["Control.Monad.Aff.Par"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var DOM_XHR_Types = PS["DOM.XHR.Types"];
  var $$Math = PS["Math"];
  var Network_HTTP_Affjax_Request = PS["Network.HTTP.Affjax.Request"];
  var Network_HTTP_Affjax_Response = PS["Network.HTTP.Affjax.Response"];
  var Network_HTTP_Method = PS["Network.HTTP.Method"];
  var Network_HTTP_RequestHeader = PS["Network.HTTP.RequestHeader"];
  var Network_HTTP_ResponseHeader = PS["Network.HTTP.ResponseHeader"];
  var Network_HTTP_StatusCode = PS["Network.HTTP.StatusCode"];
  var defaultRequest = {
      method: Network_HTTP_Method.GET.value, 
      url: "/", 
      headers: [  ], 
      content: Data_Maybe.Nothing.value, 
      username: Data_Maybe.Nothing.value, 
      password: Data_Maybe.Nothing.value
  };
  var cancelAjax = function (xhr) {
      return function (err) {
          return Control_Monad_Aff.makeAff(function (eb) {
              return function (cb) {
                  return $foreign._cancelAjax(xhr, err, eb, cb);
              };
          });
      };
  };
  var affjax$prime = function (__dict_Requestable_1) {
      return function (__dict_Respondable_2) {
          return function (req) {
              return function (eb) {
                  return function (cb) {
                      var req$prime = {
                          method: Network_HTTP_Method.methodToString(req.method), 
                          url: req.url, 
                          headers: Prelude["<$>"](Prelude.functorArray)(function (h) {
                              return {
                                  field: Network_HTTP_RequestHeader.requestHeaderName(h), 
                                  value: Network_HTTP_RequestHeader.requestHeaderValue(h)
                              };
                          })(req.headers), 
                          content: Data_Nullable.toNullable(Prelude["<$>"](Data_Maybe.functorMaybe)(Network_HTTP_Affjax_Request.toRequest(__dict_Requestable_1))(req.content)), 
                          responseType: Network_HTTP_Affjax_Response.responseTypeToString(Network_HTTP_Affjax_Response.responseType(__dict_Respondable_2)), 
                          username: Data_Nullable.toNullable(req.username), 
                          password: Data_Nullable.toNullable(req.password)
                      };
                      var fromResponse$prime = (function () {
                          var _32 = Network_HTTP_Affjax_Response.responseType(__dict_Respondable_2);
                          if (_32 instanceof Network_HTTP_Affjax_Response.JSONResponse) {
                              return Control_Bind["<=<"](Data_Either.bindEither)(Network_HTTP_Affjax_Response.fromResponse(__dict_Respondable_2))(Control_Bind["<=<"](Data_Either.bindEither)(Data_Foreign.parseJSON)(Data_Foreign.readString));
                          };
                          return Network_HTTP_Affjax_Response.fromResponse(__dict_Respondable_2);
                      })();
                      var cb$prime = function (res) {
                          var _35 = Prelude["<$>"](Data_Either.functorEither)(function (_0) {
                              var _33 = {};
                              for (var _34 in res) {
                                  if (res.hasOwnProperty(_34)) {
                                      _33[_34] = res[_34];
                                  };
                              };
                              _33.response = _0;
                              return _33;
                          })(fromResponse$prime(res.response));
                          if (_35 instanceof Data_Either.Left) {
                              return eb(Control_Monad_Eff_Exception.error(Prelude.show(Data_Foreign.showForeignError)(_35.value0)));
                          };
                          if (_35 instanceof Data_Either.Right) {
                              return cb(_35.value0);
                          };
                          throw new Error("Failed pattern match at Network.HTTP.Affjax line 197, column 1 - line 202, column 1: " + [ _35.constructor.name ]);
                      };
                      return $foreign._ajax(Network_HTTP_ResponseHeader.responseHeader, req$prime, cancelAjax, eb, cb$prime);
                  };
              };
          };
      };
  };
  var affjax = function (__dict_Requestable_3) {
      return function (__dict_Respondable_4) {
          return function (_51) {
              return Control_Monad_Aff["makeAff'"](affjax$prime(__dict_Requestable_3)(__dict_Respondable_4)(_51));
          };
      };
  };                                                                   
  var get = function (__dict_Respondable_6) {
      return function (u) {
          return affjax(Network_HTTP_Affjax_Request.requestableUnit)(__dict_Respondable_6)((function () {
              var _40 = {};
              for (var _41 in defaultRequest) {
                  if (defaultRequest.hasOwnProperty(_41)) {
                      _40[_41] = defaultRequest[_41];
                  };
              };
              _40.url = u;
              return _40;
          })());
      };
  };
  exports["get"] = get;
  exports["affjax"] = affjax;
  exports["defaultRequest"] = defaultRequest;;
 
})(PS["Network.HTTP.Affjax"] = PS["Network.HTTP.Affjax"] || {});
(function(exports) {
  // module Data.Argonaut.Parser

  exports._jsonParser = function(fail, succ, s) {
      try {
          return succ(JSON.parse(s));
      }
      catch(e) {
          return fail(e.message);
      }
  };
 
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Argonaut.Parser"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Function = PS["Data.Function"];
  var Data_Either = PS["Data.Either"];     
  var jsonParser = function (j) {
      return $foreign._jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
  };
  exports["jsonParser"] = jsonParser;;
 
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var OpticUI_Run = PS["OpticUI.Run"];
  var OpticUI_Core = PS["OpticUI.Core"];
  var Data_Lens_Traversal = PS["Data.Lens.Traversal"];
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Prelude = PS["Prelude"];
  var Klikhut_Photobooth = PS["Klikhut.Photobooth"];
  var Klikhut_Async = PS["Klikhut.Async"];
  var OpticUI_Markup_HTML = PS["OpticUI.Markup.HTML"];
  var OpticUI_Markup = PS["OpticUI.Markup"];
  var OpticUI = PS["OpticUI"];
  var OpticUI_Components_Async = PS["OpticUI.Components.Async"];
  var Network_HTTP_Affjax = PS["Network.HTTP.Affjax"];
  var DOM = PS["DOM"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Either = PS["Data.Either"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Network_HTTP_Affjax_Response = PS["Network.HTTP.Affjax.Response"];
  var Data_Traversable = PS["Data.Traversable"];     
  var showPB = OpticUI_Core["with"](function (_6) {
      return function (h) {
          return OpticUI_Core.withView(OpticUI_Markup_HTML.li_)(Data_Foldable.mconcat(Data_Foldable.foldableArray)(OpticUI_Core.uiMonoid(OpticUI_Markup.markupMonoid))([ OpticUI_Core.ui(OpticUI_Markup_HTML.span([  ])(OpticUI_Markup.text(_6.value0.computername))), OpticUI_Core.ui(OpticUI_Markup_HTML.span([  ])(OpticUI_Markup.text(_6.value0.alias))), OpticUI_Core.ui(OpticUI_Markup_HTML.span([  ])(OpticUI_Markup.text(_6.value0.defaultprofile))) ]));
      };
  });
  var parseOrThrow = function (__dict_DecodeJson_0) {
      return function (a) {
          var throwStr = function (str) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error(str));
          };
          return Data_Either.either(throwStr)(function (json) {
              return Data_Either.either(throwStr)(Prelude["return"](Control_Monad_Aff.applicativeAff))(Data_Argonaut_Decode.decodeJson(__dict_DecodeJson_0)(json));
          })(Data_Argonaut_Parser.jsonParser(a));
      };
  };
  var loadPbs = Prelude.bind(Control_Monad_Aff.bindAff)(Network_HTTP_Affjax.get(Network_HTTP_Affjax_Response.responsableString)("/api/photobooths"))(function (_4) {
      return parseOrThrow(Data_Argonaut_Decode.decodeArray(Klikhut_Photobooth.decodeJsonPhotobooth))((function (_0) {
          return _0.response;
      })(_4));
  });
  var listPhotobooths = OpticUI_Core["with"](function (pbs) {
      return function (h) {
          var load = function (_7) {
              return function __do() {
                  var _14 = OpticUI_Components_Async.async(loadPbs)();
                  return OpticUI_Core.runHandler(h)(Klikhut_Async.Loading.create(_14))();
              };
          };
          return Data_Foldable.mconcat(Data_Foldable.foldableArray)(OpticUI_Core.uiMonoid(OpticUI_Markup.markupMonoid))([ Klikhut_Async._Initial(OpticUI_Core.uiChoice(OpticUI_Markup.markupMonoid))(Data_Foldable.mconcat(Data_Foldable.foldableArray)(OpticUI_Core.uiMonoid(OpticUI_Markup.markupMonoid))([ OpticUI_Core.ui(OpticUI_Markup_HTML.div_(OpticUI_Markup.text("Nothing loaded yet"))), OpticUI_Core.ui(OpticUI_Markup_HTML.button([ OpticUI_Markup_HTML.onClick(load) ])(OpticUI_Markup.text("Load shit"))) ])), Klikhut_Async._Loading(OpticUI_Core.uiChoice(OpticUI_Markup.markupMonoid))(Data_Foldable.mconcat(Data_Foldable.foldableArray)(OpticUI_Core.uiMonoid(OpticUI_Markup.markupMonoid))([ OpticUI_Core.ui(OpticUI_Markup_HTML.div_(OpticUI_Markup.text("Loading photobooths"))), OpticUI_Components_Async.onResult(OpticUI_Markup.markupMonoid)(function (_15) {
              return OpticUI_Core.runHandler(h)(Klikhut_Async.Loaded.create(_15));
          })(function (_16) {
              return OpticUI_Core.runHandler(h)(Klikhut_Async.Errored.create(_16));
          }) ])), Klikhut_Async._Loaded(OpticUI_Core.uiChoice(OpticUI_Markup.markupMonoid))(Data_Foldable.mconcat(Data_Foldable.foldableArray)(OpticUI_Core.uiMonoid(OpticUI_Markup.markupMonoid))([ OpticUI_Core.withView(OpticUI_Markup_HTML.ul_)(OpticUI_Core.traversal(OpticUI_Markup.markupMonoid)(function (__dict_Wander_1) {
              return Data_Lens_Traversal.traversed(Data_Traversable.traversableArray)(__dict_Wander_1);
          })(showPB)), OpticUI_Core.ui(OpticUI_Markup_HTML.button([ OpticUI_Markup_HTML.onClick(load) ])(OpticUI_Markup.text("Load shit"))) ])), Klikhut_Async._Errored(OpticUI_Core.uiChoice(OpticUI_Markup.markupMonoid))(OpticUI_Core["with"](function (err) {
              return function (_5) {
                  return OpticUI_Core.ui(OpticUI_Markup_HTML.div_(OpticUI_Markup.text("Photobooths failed to load: " + Control_Monad_Eff_Exception.message(err))));
              };
          })) ]);
      };
  });
  var initialState = {
      photobooths: Klikhut_Async.Initial.value
  };
  var _photobooths = function (__dict_Strong_2) {
      return Data_Lens_Lens.lens(function (_1) {
          return _1.photobooths;
      })(function (_2) {
          return function (_3) {
              var _12 = {};
              for (var _13 in _2) {
                  if (_2.hasOwnProperty(_13)) {
                      _12[_13] = _2[_13];
                  };
              };
              _12.photobooths = _3;
              return _12;
          };
      })(__dict_Strong_2);
  };
  var main = OpticUI_Run.animate(initialState)(_photobooths(OpticUI_Core.uiStrong)(listPhotobooths));
  exports["_photobooths"] = _photobooths;
  exports["parseOrThrow"] = parseOrThrow;
  exports["loadPbs"] = loadPbs;
  exports["showPB"] = showPB;
  exports["listPhotobooths"] = listPhotobooths;
  exports["main"] = main;
  exports["initialState"] = initialState;;
 
})(PS["Client"] = PS["Client"] || {});

PS["Client"].main();
