// Generated by psc-bundle 0.7.5.2
var PS = { };
(function(exports) {
  /* global exports */
  "use strict";

  // module Prelude

  //- Functor --------------------------------------------------------------------

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };

  //- Eq -------------------------------------------------------------------------

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  //- Ord ------------------------------------------------------------------------

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x > y ? gt : eq;
          };
        };
      };
    };
  };

  //- Show -----------------------------------------------------------------------

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    return JSON.stringify(s);
  };
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Prelude"];
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Eq = function (eq) {
      this.eq = eq;
  };
  var Ord = function (__superclass_Prelude$dotEq_0, compare) {
      this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
      this.compare = compare;
  };
  var Show = function (show) {
      this.show = show;
  };
  var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
  var unit = {};
  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };                                                                     
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });                 
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (__dict_Applicative_2) {
      return pure(__dict_Applicative_2);
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (__dict_Functor_5) {
      return map(__dict_Functor_5);
  };
  var id = function (dict) {
      return dict.id;
  };
  var functorArray = new Functor($foreign.arrayMap);
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  }; 
  var eqString = new Eq($foreign.refEq);
  var ordString = new Ord(function () {
      return eqString;
  }, unsafeCompare);
  var eq = function (dict) {
      return dict.eq;
  };
  var $eq$eq = function (__dict_Eq_7) {
      return eq(__dict_Eq_7);
  };
  var $$const = function (a) {
      return function (_3) {
          return a;
      };
  };
  var $$void = function (__dict_Functor_12) {
      return function (fa) {
          return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);
      };
  };
  var compose = function (dict) {
      return dict.compose;
  };
  var compare = function (dict) {
      return dict.compare;
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var bind = function (dict) {
      return dict.bind;
  };
  var $greater$greater$eq = function (__dict_Bind_24) {
      return bind(__dict_Bind_24);
  }; 
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (__dict_Apply_25) {
      return apply(__dict_Apply_25);
  };
  var liftA1 = function (__dict_Applicative_26) {
      return function (f) {
          return function (a) {
              return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
          };
      };
  }; 
  var append = function (dict) {
      return dict.append;
  };
  var $less$greater = function (__dict_Semigroup_28) {
      return append(__dict_Semigroup_28);
  };
  var ap = function (__dict_Monad_30) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                  return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                      return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_2(_1));
                  });
              });
          };
      };
  };
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["Show"] = Show;
  exports["Ord"] = Ord;
  exports["Eq"] = Eq;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["show"] = show;
  exports["unsafeCompare"] = unsafeCompare;
  exports["compare"] = compare;
  exports["=="] = $eq$eq;
  exports["eq"] = eq;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["return"] = $$return;
  exports[">>="] = $greater$greater$eq;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["apply"] = apply;
  exports["void"] = $$void;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports["compose"] = compose;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;
  exports["functorArray"] = functorArray;
  exports["eqString"] = eqString;
  exports["ordString"] = ordString;
  exports["showInt"] = showInt;
  exports["showString"] = showString;;
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var $eq$less$less = function (__dict_Bind_1) {
      return function (f) {
          return function (m) {
              return Prelude[">>="](__dict_Bind_1)(m)(f);
          };
      };
  };
  exports["=<<"] = $eq$less$less;;
 
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports._pure = function (nonCanceler, v) {
    return function(success, error) {
      try {
        success(v);
      } catch (e) {
        error(e);
      }

      return nonCanceler;
    };
  }

  exports._throwError = function (nonCanceler, e) {
    return function(success, error) {
      error(e);

      return nonCanceler;
    };
  }

  exports._fmap = function (f, aff) {
    return function(success, error) {
      return aff(function(v) {
        try {
          success(f(v));
        } catch (e) {
          error(e);
        }
      }, error);
    };
  }

  exports._bind = function (alwaysCanceler, aff, f) {
    return function(success, error) {
      var canceler1, canceler2;

      var isCanceled    = false;
      var requestCancel = false;

      var onCanceler = function(){};

      canceler1 = aff(function(v) {
        if (requestCancel) {
          isCanceled = true;

          return alwaysCanceler;
        } else {
          canceler2 = f(v)(success, error);

          onCanceler(canceler2);

          return canceler2;
        }
      }, error);

      return function(e) {
        return function(s, f) {
          requestCancel = true;

          if (canceler2 !== undefined) {
            return canceler2(e)(s, f);
          } else {
            return canceler1(e)(function(bool) {
              if (bool || isCanceled) {
                try {
                  s(true);
                } catch (e) {
                  f(e);
                }
              } else {
                onCanceler = function(canceler) {
                  canceler(e)(s, f);
                };
              }
            }, f);
          }
        };
      };
    };
  }

  exports._attempt = function (Left, Right, aff) {
    return function(success, error) {
      return aff(function(v) {
        try {
          success(Right(v));
        } catch (e) {
          error(e);
        }
      }, function(e) {
        try {
          success(Left(e));
        } catch (e) {
          error(e);
        }
      });
    };
  }

  exports._runAff = function (errorT, successT, aff) {
    return function() {
      return aff(function(v) {
        try {
          successT(v)();
        } catch (e) {
          errorT(e)();
        }
      }, function(e) {
        errorT(e)();
      });
    };
  }

  exports._liftEff = function (nonCanceler, e) {
    return function(success, error) {
      try {
        success(e());
      } catch (e) {
        error(e);
      }

      return nonCanceler;
    };
  }
 
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];     
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;;
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var MonadEff = function (__superclass_Prelude$dotMonad_0, liftEff) {
      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
      this.liftEff = liftEff;
  };                                 
  var liftEff = function (dict) {
      return dict.liftEff;
  };
  exports["MonadEff"] = MonadEff;
  exports["liftEff"] = liftEff;;
 
})(PS["Control.Monad.Eff.Class"] = PS["Control.Monad.Eff.Class"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Exception

  exports.showErrorImpl = function (err) {
    return err.stack || err.toString();
  };

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.message = function (e) {
    return e.message;
  };
 
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var showError = new Prelude.Show($foreign.showErrorImpl);
  exports["showError"] = showError;
  exports["message"] = $foreign.message;
  exports["error"] = $foreign.error;;
 
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;;
 
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (b) {
      return function (f) {
          return function (_0) {
              if (_0 instanceof Nothing) {
                  return b;
              };
              if (_0 instanceof Just) {
                  return f(_0.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 26, column 1 - line 27, column 1: " + [ b.constructor.name, f.constructor.name, _0.constructor.name ]);
          };
      };
  };                                                
  var functorMaybe = new Prelude.Functor(function (fn) {
      return function (_2) {
          if (_2 instanceof Just) {
              return new Just(fn(_2.value0));
          };
          return Nothing.value;
      };
  });
  var applyMaybe = new Prelude.Apply(function () {
      return functorMaybe;
  }, function (_3) {
      return function (x) {
          if (_3 instanceof Just) {
              return Prelude["<$>"](functorMaybe)(_3.value0)(x);
          };
          if (_3 instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 121, column 1 - line 145, column 1: " + [ _3.constructor.name, x.constructor.name ]);
      };
  });
  var bindMaybe = new Prelude.Bind(function () {
      return applyMaybe;
  }, function (_5) {
      return function (k) {
          if (_5 instanceof Just) {
              return k(_5.value0);
          };
          if (_5 instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 180, column 1 - line 199, column 1: " + [ _5.constructor.name, k.constructor.name ]);
      };
  });
  var applicativeMaybe = new Prelude.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["bindMaybe"] = bindMaybe;;
 
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foldable

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];     
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldMapDefaultR = function (__dict_Foldable_20) {
      return function (__dict_Monoid_21) {
          return function (f) {
              return function (xs) {
                  return foldr(__dict_Foldable_20)(function (x) {
                      return function (acc) {
                          return Prelude["<>"](__dict_Monoid_21["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(__dict_Monoid_21))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (__dict_Monoid_22) {
      return foldMapDefaultR(foldableArray)(__dict_Monoid_22);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var find = function (__dict_Foldable_31) {
      return function (p) {
          return foldl(__dict_Foldable_31)(function (r) {
              return function (x) {
                  var _96 = p(x);
                  if (_96) {
                      return new Data_Maybe.Just(x);
                  };
                  if (!_96) {
                      return r;
                  };
                  throw new Error("Failed pattern match at Data.Foldable line 229, column 1 - line 230, column 1: " + [ _96.constructor.name ]);
              };
          })(Data_Maybe.Nothing.value);
      };
  };
  exports["Foldable"] = Foldable;
  exports["find"] = find;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;;
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Traversable

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont (fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList (x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray (list) {
      var arr = [];
      while (list !== emptyList) {
        arr.push(list.head);
        list = list.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  };
  var sequenceDefault = function (__dict_Traversable_12) {
      return function (__dict_Applicative_13) {
          return function (tma) {
              return traverse(__dict_Traversable_12)(__dict_Applicative_13)(Prelude.id(Prelude.categoryFn))(tma);
          };
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Prelude.functorArray;
  }, function (__dict_Applicative_15) {
      return sequenceDefault(traversableArray)(__dict_Applicative_15);
  }, function (__dict_Applicative_14) {
      return $foreign.traverseArrayImpl(Prelude.apply(__dict_Applicative_14["__superclass_Prelude.Apply_0"]()))(Prelude.map((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_14));
  });
  var sequence = function (dict) {
      return dict.sequence;
  }; 
  var $$for = function (__dict_Applicative_26) {
      return function (__dict_Traversable_27) {
          return function (x) {
              return function (f) {
                  return traverse(__dict_Traversable_27)(__dict_Applicative_26)(f)(x);
              };
          };
      };
  };
  exports["Traversable"] = Traversable;
  exports["for"] = $$for;
  exports["sequenceDefault"] = sequenceDefault;
  exports["sequence"] = sequence;
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;;
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Prelude.Functor(function (f) {
      return function (_2) {
          if (_2 instanceof Left) {
              return new Left(_2.value0);
          };
          if (_2 instanceof Right) {
              return new Right(f(_2.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 52, column 1 - line 56, column 1: " + [ f.constructor.name, _2.constructor.name ]);
      };
  });
  var either = function (f) {
      return function (g) {
          return function (_1) {
              if (_1 instanceof Left) {
                  return f(_1.value0);
              };
              if (_1 instanceof Right) {
                  return g(_1.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 28, column 1 - line 29, column 1: " + [ f.constructor.name, g.constructor.name, _1.constructor.name ]);
          };
      };
  }; 
  var applyEither = new Prelude.Apply(function () {
      return functorEither;
  }, function (_4) {
      return function (r) {
          if (_4 instanceof Left) {
              return new Left(_4.value0);
          };
          if (_4 instanceof Right) {
              return Prelude["<$>"](functorEither)(_4.value0)(r);
          };
          throw new Error("Failed pattern match at Data.Either line 92, column 1 - line 116, column 1: " + [ _4.constructor.name, r.constructor.name ]);
      };
  });
  var bindEither = new Prelude.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (_0) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Prelude.Applicative(function () {
      return applyEither;
  }, Right.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;;
 
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];     
  var MonadError = function (__superclass_Prelude$dotMonad_0, catchError, throwError) {
      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
      this.catchError = catchError;
      this.throwError = throwError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };                          
  var catchError = function (dict) {
      return dict.catchError;
  };
  exports["MonadError"] = MonadError;
  exports["catchError"] = catchError;
  exports["throwError"] = throwError;;
 
})(PS["Control.Monad.Error.Class"] = PS["Control.Monad.Error.Class"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
 
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Function"];
  var Prelude = PS["Prelude"];
  exports["runFn4"] = $foreign.runFn4;;
 
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Control.Monad.Aff"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Monoid = PS["Data.Monoid"];
  var runAff = function (ex) {
      return function (f) {
          return function (aff) {
              return $foreign._runAff(ex, f, aff);
          };
      };
  };
  var functorAff = new Prelude.Functor(function (f) {
      return function (fa) {
          return $foreign._fmap(f, fa);
      };
  });
  var attempt = function (aff) {
      return $foreign._attempt(Data_Either.Left.create, Data_Either.Right.create, aff);
  };
  var applyAff = new Prelude.Apply(function () {
      return functorAff;
  }, function (ff) {
      return function (fa) {
          return $foreign._bind(alwaysCanceler, ff, function (f) {
              return Prelude["<$>"](functorAff)(f)(fa);
          });
      };
  });
  var applicativeAff = new Prelude.Applicative(function () {
      return applyAff;
  }, function (v) {
      return $foreign._pure(nonCanceler, v);
  });
  var nonCanceler = Prelude["const"](Prelude.pure(applicativeAff)(false));
  var alwaysCanceler = Prelude["const"](Prelude.pure(applicativeAff)(true));
  var bindAff = new Prelude.Bind(function () {
      return applyAff;
  }, function (fa) {
      return function (f) {
          return $foreign._bind(alwaysCanceler, fa, f);
      };
  });
  var monadAff = new Prelude.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
      return monadAff;
  }, function (eff) {
      return $foreign._liftEff(nonCanceler, eff);
  });
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
      return monadAff;
  }, function (aff) {
      return function (ex) {
          return Prelude[">>="](bindAff)(attempt(aff))(Data_Either.either(ex)(Prelude.pure(applicativeAff)));
      };
  }, function (e) {
      return $foreign._throwError(nonCanceler, e);
  });
  var $$finally = function (aff1) {
      return function (aff2) {
          return Prelude.bind(bindAff)(attempt(aff1))(function (_0) {
              return Prelude.bind(bindAff)(aff2)(function () {
                  return Data_Either.either(Control_Monad_Error_Class.throwError(monadErrorAff))(Prelude.pure(applicativeAff))(_0);
              });
          });
      };
  };
  exports["runAff"] = runAff;
  exports["nonCanceler"] = nonCanceler;
  exports["finally"] = $$finally;
  exports["attempt"] = attempt;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadEffAff"] = monadEffAff;
  exports["monadErrorAff"] = monadErrorAff;;
 
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  /* global exports, console */
  "use strict";

  // module Control.Monad.Eff.Console

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["log"] = $foreign.log;;
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // module Data.Argonaut.Core

  function id(x) {
      return x;
  } 

  exports.fromBoolean = id;
  exports.fromNumber = id;
  exports.fromString = id;
  exports.fromArray = id;
  exports.fromObject = id;

  exports.jsonNull = null;

  exports._stringify = function(j) {
      return JSON.stringify(j);
  };

  exports._foldJson = function(isNull, isBool, isNum, isStr, isArr, isObj, j) {
      if (j == null) return isNull(null);
      else if (typeof j === 'boolean') return isBool(j);
      else if (typeof j === 'number') return isNum(j);
      else if (typeof j === 'string') return isStr(j);
      else if (Object.prototype.toString.call(j) === '[object Array]')
          return isArr(j);
      else return isObj(j);
  };

  function _compare(EQ, GT, LT, a, b) {
      function isArray(a) {
          return Object.prototype.toString.call(a) === '[object Array]';
      }
      function keys(o) {
          var a = [];
          for (var k in o) {
              a.push(k);
          }
          return a;
      }

      if (a == null) {
          if (b == null) return EQ;
          else return LT;
      } else if (typeof a === 'boolean') {
          if (typeof b === 'boolean') {
              // boolean / boolean
              if (a === b) return EQ;
              else if (a == false) return LT;
              else return GT;
          } else if (b == null) return GT;
          else return LT;
      } else if (typeof a === 'number') {
          if (typeof b === 'number') {
              if (a === b) return EQ;
              else if (a < b) return LT;
              else return GT;
          } else if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else return LT;
      } else if (typeof a === 'string') {
          if (typeof b === 'string') {
              if (a === b) return EQ;
              else if (a < b) return LT;
              else return GT;
          } else if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else if (typeof b === 'number') return GT;
          else return LT;
      } else if (isArray(a)) {
          if (isArray(b)) {
              for (var i = 0; i < Math.min(a.length, b.length); i++) {
                  var c = _compare(EQ, GT, LT, a[i], b[i]);
                
                  if (c !== EQ) return c;
              }
              if (a.length === b.length) return EQ;
              else if (a.length < b.length) return LT;
              else return GT;
          } else if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else if (typeof b === 'number') return GT;
          else if (typeof b === 'string') return GT;
          else return LT;
      }
      else {
          if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else if (typeof b === 'number') return GT;
          else if (typeof b === 'string') return GT;
          else if (isArray(b)) return GT;
          else {
              var akeys = keys(a);
              var bkeys = keys(b);
            
              var keys = akeys.concat(bkeys).sort();
            
              for (var i = 0; i < keys.length; i++) {
                  var k = keys[i];
                
                  if (a[k] === undefined) return LT;
                  else if (b[k] === undefined) return GT;
                
                  var c = _compare(EQ, GT, LT, a[k], b[k]);
                
                  if (c !== EQ) return c;
              }
            
              if (akeys.length === bkeys.length) return EQ;
              else if (akeys.length < bkeys.length) return LT;
              else return GT;
          }
      }
  };                          
 
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (_4) {
      return _4.value1;
  };                                                                                                    
  var fst = function (_3) {
      return _3.value0;
  };
  exports["Tuple"] = Tuple;
  exports["snd"] = snd;
  exports["fst"] = fst;;
 
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports._copyEff = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (m.hasOwnProperty(k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f;
  };

  // jshint maxparams: 4
  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function _collect (f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (m.hasOwnProperty(k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports._collect = _collect;

  exports.keys = Object.keys || _collect(function (k) {
    return function () { return k; };
  });
 
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.StrMap.ST

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (m) {
    return function (k) {
      return function (v) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
 
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.StrMap.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["poke"] = $foreign.poke;
  exports["new"] = $foreign["new"];;
 
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.StrMap"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_List = PS["Data.List"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_StrMap_ST = PS["Data.StrMap.ST"];
  var thawST = $foreign._copyEff;
  var pureST = function (f) {
      return Control_Monad_Eff.runPure($foreign.runST(f));
  };
  var singleton = function (k) {
      return function (v) {
          return pureST(function __do() {
              var _1 = Data_StrMap_ST["new"]();
              Data_StrMap_ST.poke(_1)(k)(v)();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(_1)();
          });
      };
  };
  var mutate = function (f) {
      return function (m) {
          return pureST(function __do() {
              var _0 = thawST(m)();
              f(_0)();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(_0)();
          });
      };
  };                                                                                 
  var lookup = Data_Function.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var insert = function (k) {
      return function (v) {
          return mutate(function (s) {
              return Data_StrMap_ST.poke(s)(k)(v);
          });
      };
  };
  exports["thawST"] = thawST;
  exports["lookup"] = lookup;
  exports["insert"] = insert;
  exports["singleton"] = singleton;
  exports["keys"] = $foreign.keys;
  exports["empty"] = $foreign.empty;;
 
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Argonaut.Core"];
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];
  var Data_StrMap = PS["Data.StrMap"];     
  var verbJsonType = function (def) {
      return function (f) {
          return function (fold) {
              return fold(def)(f);
          };
      };
  };
  var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var showJson = new Prelude.Show($foreign._stringify);        
  var foldJsonString = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), j);
          };
      };
  };                                        
  var toString = toJsonType(foldJsonString);
  var foldJsonObject = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, j);
          };
      };
  };                                        
  var toObject = toJsonType(foldJsonObject);
  var foldJsonNumber = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
          };
      };
  };                                        
  var toNumber = toJsonType(foldJsonNumber);
  var foldJsonNull = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
          };
      };
  };                                    
  var foldJsonBoolean = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
          };
      };
  };                                          
  var toBoolean = toJsonType(foldJsonBoolean);
  var foldJsonArray = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), j);
          };
      };
  };                                      
  var toArray = toJsonType(foldJsonArray);
  exports["toObject"] = toObject;
  exports["toArray"] = toArray;
  exports["toString"] = toString;
  exports["toNumber"] = toNumber;
  exports["toBoolean"] = toBoolean;
  exports["foldJsonObject"] = foldJsonObject;
  exports["foldJsonArray"] = foldJsonArray;
  exports["foldJsonString"] = foldJsonString;
  exports["foldJsonNumber"] = foldJsonNumber;
  exports["foldJsonBoolean"] = foldJsonBoolean;
  exports["foldJsonNull"] = foldJsonNull;
  exports["showJson"] = showJson;
  exports["jsonNull"] = $foreign.jsonNull;
  exports["fromObject"] = $foreign.fromObject;
  exports["fromArray"] = $foreign.fromArray;
  exports["fromString"] = $foreign.fromString;
  exports["fromNumber"] = $foreign.fromNumber;
  exports["fromBoolean"] = $foreign.fromBoolean;;
 
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.replicate = function (n) {
    return function (v) {
      if (n < 1) return [];
      var r = new Array(n);
      for (var i = 0; i < n; i++) r[i] = v;
      return r;
    };
  };

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortImpl = function (f) {
    return function (l) {
      /* jshint maxparams: 2 */
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var zipWithA = function (__dict_Applicative_0) {
      return function (f) {
          return function (xs) {
              return function (ys) {
                  return Data_Traversable.sequence(Data_Traversable.traversableArray)(__dict_Applicative_0)($foreign.zipWith(f)(xs)(ys));
              };
          };
      };
  };
  var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
  var sortBy = function (comp) {
      return function (xs) {
          var comp$prime = function (x) {
              return function (y) {
                  var _25 = comp(x)(y);
                  if (_25 instanceof Prelude.GT) {
                      return 1;
                  };
                  if (_25 instanceof Prelude.EQ) {
                      return 0;
                  };
                  if (_25 instanceof Prelude.LT) {
                      return -1;
                  };
                  throw new Error("Failed pattern match at Data.Array line 391, column 3 - line 396, column 1: " + [ _25.constructor.name ]);
              };
          };
          return $foreign.sortImpl(comp$prime)(xs);
      };
  };
  var sort = function (__dict_Ord_1) {
      return function (xs) {
          return sortBy(Prelude.compare(__dict_Ord_1))(xs);
      };
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var $bang$bang = index;
  exports["zip"] = zip;
  exports["zipWithA"] = zipWithA;
  exports["sortBy"] = sortBy;
  exports["sort"] = sort;
  exports["index"] = index;
  exports["!!"] = $bang$bang;
  exports["filter"] = $foreign.filter;
  exports["length"] = $foreign.length;
  exports["replicate"] = $foreign.replicate;;
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };
 
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Int"];
  var Prelude = PS["Prelude"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var $$Math = PS["Math"];                                                                   
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["fromNumber"] = fromNumber;
  exports["toNumber"] = $foreign.toNumber;;
 
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
 
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Data_Char = PS["Data.Char"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  exports["joinWith"] = $foreign.joinWith;;
 
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Generic"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Array = PS["Data.Array"];
  var Data_String = PS["Data.String"];     
  var Proxy = (function () {
      function Proxy() {

      };
      Proxy.value = new Proxy();
      return Proxy;
  })();
  var SProd = (function () {
      function SProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SProd.create = function (value0) {
          return function (value1) {
              return new SProd(value0, value1);
          };
      };
      return SProd;
  })();
  var SRecord = (function () {
      function SRecord(value0) {
          this.value0 = value0;
      };
      SRecord.create = function (value0) {
          return new SRecord(value0);
      };
      return SRecord;
  })();
  var SNumber = (function () {
      function SNumber(value0) {
          this.value0 = value0;
      };
      SNumber.create = function (value0) {
          return new SNumber(value0);
      };
      return SNumber;
  })();
  var SBoolean = (function () {
      function SBoolean(value0) {
          this.value0 = value0;
      };
      SBoolean.create = function (value0) {
          return new SBoolean(value0);
      };
      return SBoolean;
  })();
  var SInt = (function () {
      function SInt(value0) {
          this.value0 = value0;
      };
      SInt.create = function (value0) {
          return new SInt(value0);
      };
      return SInt;
  })();
  var SString = (function () {
      function SString(value0) {
          this.value0 = value0;
      };
      SString.create = function (value0) {
          return new SString(value0);
      };
      return SString;
  })();
  var SArray = (function () {
      function SArray(value0) {
          this.value0 = value0;
      };
      SArray.create = function (value0) {
          return new SArray(value0);
      };
      return SArray;
  })();
  var SigProd = (function () {
      function SigProd(value0) {
          this.value0 = value0;
      };
      SigProd.create = function (value0) {
          return new SigProd(value0);
      };
      return SigProd;
  })();
  var SigRecord = (function () {
      function SigRecord(value0) {
          this.value0 = value0;
      };
      SigRecord.create = function (value0) {
          return new SigRecord(value0);
      };
      return SigRecord;
  })();
  var SigNumber = (function () {
      function SigNumber() {

      };
      SigNumber.value = new SigNumber();
      return SigNumber;
  })();
  var SigBoolean = (function () {
      function SigBoolean() {

      };
      SigBoolean.value = new SigBoolean();
      return SigBoolean;
  })();
  var SigInt = (function () {
      function SigInt() {

      };
      SigInt.value = new SigInt();
      return SigInt;
  })();
  var SigString = (function () {
      function SigString() {

      };
      SigString.value = new SigString();
      return SigString;
  })();
  var SigArray = (function () {
      function SigArray(value0) {
          this.value0 = value0;
      };
      SigArray.create = function (value0) {
          return new SigArray(value0);
      };
      return SigArray;
  })();
  var Generic = function (fromSpine, toSignature, toSpine) {
      this.fromSpine = fromSpine;
      this.toSignature = toSignature;
      this.toSpine = toSpine;
  };
  var toSpine = function (dict) {
      return dict.toSpine;
  };
  var toSignature = function (dict) {
      return dict.toSignature;
  };
  var genericString = new Generic(function (_10) {
      if (_10 instanceof SString) {
          return new Data_Maybe.Just(_10.value0);
      };
      return Data_Maybe.Nothing.value;
  }, function (_9) {
      return SigString.value;
  }, function (x) {
      return new SString(x);
  });
  var genericNumber = new Generic(function (_6) {
      if (_6 instanceof SNumber) {
          return new Data_Maybe.Just(_6.value0);
      };
      return Data_Maybe.Nothing.value;
  }, function (_5) {
      return SigNumber.value;
  }, function (x) {
      return new SNumber(x);
  });
  var genericInt = new Generic(function (_8) {
      if (_8 instanceof SInt) {
          return new Data_Maybe.Just(_8.value0);
      };
      return Data_Maybe.Nothing.value;
  }, function (_7) {
      return SigInt.value;
  }, function (x) {
      return new SInt(x);
  });
  var fromSpine = function (dict) {
      return dict.fromSpine;
  };
  var anyProxy = Proxy.value;
  var genericArray = function (__dict_Generic_3) {
      return new Generic(function (_15) {
          if (_15 instanceof SArray) {
              return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(function (_172) {
                  return fromSpine(__dict_Generic_3)((function (_1) {
                      return _1(Prelude.unit);
                  })(_172));
              })(_15.value0);
          };
          return Data_Maybe.Nothing.value;
      }, function (x) {
          var lowerProxy = function (_16) {
              return anyProxy;
          };
          return new SigArray(function (unit) {
              return toSignature(__dict_Generic_3)(lowerProxy(x));
          });
      }, function (xs) {
          return new SArray(Prelude["<$>"](Prelude.functorArray)(function (x) {
              return function (y) {
                  return toSpine(__dict_Generic_3)(x);
              };
          })(xs));
      });
  };
  var genericMaybe = function (__dict_Generic_6) {
      return new Generic(function (_22) {
          if (_22 instanceof SProd && (_22.value0 === "Data.Maybe.Just" && _22.value1.length === 1)) {
              return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(fromSpine(__dict_Generic_6)(_22.value1[0](Prelude.unit)));
          };
          if (_22 instanceof SProd && (_22.value0 === "Data.Maybe.Nothing" && _22.value1.length === 0)) {
              return Prelude["return"](Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
          };
          return Data_Maybe.Nothing.value;
      }, function (x) {
          var mbProxy = function (_23) {
              return anyProxy;
          };
          return new SigProd([ {
              sigConstructor: "Data.Maybe.Just", 
              sigValues: [ function (u) {
                  return toSignature(__dict_Generic_6)(mbProxy(x));
              } ]
          }, {
              sigConstructor: "Data.Maybe.Nothing", 
              sigValues: [  ]
          } ]);
      }, function (_21) {
          if (_21 instanceof Data_Maybe.Just) {
              return new SProd("Data.Maybe.Just", [ function (u) {
                  return toSpine(__dict_Generic_6)(_21.value0);
              } ]);
          };
          if (_21 instanceof Data_Maybe.Nothing) {
              return new SProd("Data.Maybe.Nothing", [  ]);
          };
          throw new Error("Failed pattern match at Data.Generic line 126, column 1 - line 137, column 1: " + [ _21.constructor.name ]);
      });
  };
  exports["Proxy"] = Proxy;
  exports["SigProd"] = SigProd;
  exports["SigRecord"] = SigRecord;
  exports["SigNumber"] = SigNumber;
  exports["SigBoolean"] = SigBoolean;
  exports["SigInt"] = SigInt;
  exports["SigString"] = SigString;
  exports["SigArray"] = SigArray;
  exports["SProd"] = SProd;
  exports["SRecord"] = SRecord;
  exports["SNumber"] = SNumber;
  exports["SBoolean"] = SBoolean;
  exports["SInt"] = SInt;
  exports["SString"] = SString;
  exports["SArray"] = SArray;
  exports["Generic"] = Generic;
  exports["anyProxy"] = anyProxy;
  exports["fromSpine"] = fromSpine;
  exports["toSignature"] = toSignature;
  exports["toSpine"] = toSpine;
  exports["genericNumber"] = genericNumber;
  exports["genericInt"] = genericInt;
  exports["genericString"] = genericString;
  exports["genericArray"] = genericArray;
  exports["genericMaybe"] = genericMaybe;;
 
})(PS["Data.Generic"] = PS["Data.Generic"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_String = PS["Data.String"];
  var Data_List = PS["Data.List"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic = PS["Data.Generic"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Map = PS["Data.Map"];     
  var DecodeJson = function (decodeJson) {
      this.decodeJson = decodeJson;
  };
  var gDecodeJson$prime = function (signature) {
      return function (json) {
          var mFail = function (msg) {
              return Data_Maybe.maybe(new Data_Either.Left(msg))(Data_Either.Right.create);
          };
          if (signature instanceof Data_Generic.SigNumber) {
              return Prelude["<$>"](Data_Either.functorEither)(Data_Generic.SNumber.create)(mFail("Expected a number")(Data_Argonaut_Core.toNumber(json)));
          };
          if (signature instanceof Data_Generic.SigInt) {
              return Prelude["<$>"](Data_Either.functorEither)(Data_Generic.SInt.create)(mFail("Expected an integer number")(Control_Bind["=<<"](Data_Maybe.bindMaybe)(Data_Int.fromNumber)(Data_Argonaut_Core.toNumber(json))));
          };
          if (signature instanceof Data_Generic.SigString) {
              return Prelude["<$>"](Data_Either.functorEither)(Data_Generic.SString.create)(mFail("Expected a string")(Data_Argonaut_Core.toString(json)));
          };
          if (signature instanceof Data_Generic.SigBoolean) {
              return Prelude["<$>"](Data_Either.functorEither)(Data_Generic.SBoolean.create)(mFail("Expected a boolean")(Data_Argonaut_Core.toBoolean(json)));
          };
          if (signature instanceof Data_Generic.SigArray) {
              return Prelude.bind(Data_Either.bindEither)(mFail("Expected an array")(Data_Argonaut_Core.toArray(json)))(function (_1) {
                  return Prelude["<$>"](Data_Either.functorEither)(Data_Generic.SArray.create)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(function (_43) {
                      return Prelude.map(Data_Either.functorEither)(Prelude["const"])(gDecodeJson$prime(signature.value0(Prelude.unit))(_43));
                  })(_1));
              });
          };
          if (signature instanceof Data_Generic.SigRecord) {
              return Prelude.bind(Data_Either.bindEither)(mFail("Expected an object")(Data_Argonaut_Core.toObject(json)))(function (_4) {
                  return Prelude["<$>"](Data_Either.functorEither)(Data_Generic.SRecord.create)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(signature.value0)(function (_12) {
                      return Prelude.bind(Data_Either.bindEither)(mFail("'" + (_12.recLabel + "' property missing"))(Data_StrMap.lookup(_12.recLabel)(_4)))(function (_3) {
                          return Prelude.bind(Data_Either.bindEither)(gDecodeJson$prime(_12.recValue(Prelude.unit))(_3))(function (_2) {
                              return Prelude.pure(Data_Either.applicativeEither)({
                                  recLabel: _12.recLabel, 
                                  recValue: Prelude["const"](_2)
                              });
                          });
                      });
                  }));
              });
          };
          if (signature instanceof Data_Generic.SigProd) {
              return Prelude.bind(Data_Either.bindEither)(mFail("Expected an object")(Data_Argonaut_Core.toObject(json)))(function (_8) {
                  return Prelude.bind(Data_Either.bindEither)(mFail("'tag' string property is missing")(Control_Bind["=<<"](Data_Maybe.bindMaybe)(Data_Argonaut_Core.toString)(Data_StrMap.lookup("tag")(_8))))(function (_7) {
                      var _27 = Data_Foldable.find(Data_Foldable.foldableArray)(function (_44) {
                          return Prelude["=="](Prelude.eqString)(_7)((function (_0) {
                              return _0.sigConstructor;
                          })(_44));
                      })(signature.value0);
                      if (_27 instanceof Data_Maybe.Nothing) {
                          return new Data_Either.Left("'" + (_7 + "' isn't a valid constructor"));
                      };
                      if (_27 instanceof Data_Maybe.Just) {
                          return Prelude.bind(Data_Either.bindEither)(mFail("'values' array is missing")(Control_Bind["=<<"](Data_Maybe.bindMaybe)(Data_Argonaut_Core.toArray)(Data_StrMap.lookup("values")(_8))))(function (_6) {
                              return Prelude.bind(Data_Either.bindEither)(Data_Array.zipWithA(Data_Either.applicativeEither)(function (k) {
                                  return gDecodeJson$prime(k(Prelude.unit));
                              })(_27.value0.sigValues)(_6))(function (_5) {
                                  return Prelude.pure(Data_Either.applicativeEither)(new Data_Generic.SProd(_7, Prelude["<$>"](Prelude.functorArray)(Prelude["const"])(_5)));
                              });
                          });
                      };
                      throw new Error("Failed pattern match: " + [ _27.constructor.name ]);
                  });
              });
          };
          throw new Error("Failed pattern match: " + [ signature.constructor.name ]);
      };
  };
  var gDecodeJson = function (__dict_Generic_0) {
      return function (json) {
          return Control_Bind["=<<"](Data_Either.bindEither)(function (_45) {
              return Data_Maybe.maybe(new Data_Either.Left("fromSpine failed"))(Data_Either.Right.create)(Data_Generic.fromSpine(__dict_Generic_0)(_45));
          })(gDecodeJson$prime(Data_Generic.toSignature(__dict_Generic_0)(Data_Generic.Proxy.value))(json));
      };
  };                                                                                                                                        
  var decodeJsonNull = new DecodeJson(Data_Argonaut_Core.foldJsonNull(new Data_Either.Left("Not null."))(Prelude["const"](new Data_Either.Right(Prelude.unit))));
  var decodeJson = function (dict) {
      return dict.decodeJson;
  };
  var decodeMaybe = function (__dict_DecodeJson_9) {
      return function (json) {
          return Data_Either.either(Prelude["const"](Data_Maybe.Nothing.value))(Prelude.pure(Data_Maybe.applicativeMaybe))(decodeJson(__dict_DecodeJson_9)(json));
      };
  };
  var decodeArray = function (__dict_DecodeJson_12) {
      return new DecodeJson(function (json) {
          return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode."))(Data_Either.Right.create)(Prelude.bind(Data_Maybe.bindMaybe)(Data_Argonaut_Core.toArray(json))(function (_10) {
              return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(decodeMaybe(__dict_DecodeJson_12))(_10);
          }));
      });
  };
  exports["DecodeJson"] = DecodeJson;
  exports["decodeMaybe"] = decodeMaybe;
  exports["gDecodeJson"] = gDecodeJson;
  exports["decodeJson"] = decodeJson;
  exports["decodeJsonNull"] = decodeJsonNull;
  exports["decodeArray"] = decodeArray;;
 
})(PS["Data.Argonaut.Decode"] = PS["Data.Argonaut.Decode"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_String = PS["Data.String"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_List = PS["Data.List"];
  var Data_Int = PS["Data.Int"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Generic = PS["Data.Generic"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Map = PS["Data.Map"];     
  var EncodeJson = function (encodeJson) {
      this.encodeJson = encodeJson;
  };
  var encodeJsonUnit = new EncodeJson(Prelude["const"](Data_Argonaut_Core.jsonNull));
  var encodeJsonJson = new EncodeJson(Prelude.id(Prelude.categoryFn));
  var encodeJsonJString = new EncodeJson(Data_Argonaut_Core.fromString);
  var encodeJson = function (dict) {
      return dict.encodeJson;
  };
  var encodeJsonArray = function (__dict_EncodeJson_0) {
      return new EncodeJson(function (json) {
          return Data_Argonaut_Core.fromArray(Prelude["<$>"](Prelude.functorArray)(encodeJson(__dict_EncodeJson_0))(json));
      });
  };
  var gEncodeJson$prime = function (spine) {
      var addField = function (field) {
          return Data_StrMap.insert(field.recLabel)(gEncodeJson$prime(field.recValue(Prelude.unit)));
      };
      if (spine instanceof Data_Generic.SInt) {
          return Data_Argonaut_Core.fromNumber(Data_Int.toNumber(spine.value0));
      };
      if (spine instanceof Data_Generic.SString) {
          return Data_Argonaut_Core.fromString(spine.value0);
      };
      if (spine instanceof Data_Generic.SNumber) {
          return Data_Argonaut_Core.fromNumber(spine.value0);
      };
      if (spine instanceof Data_Generic.SBoolean) {
          return Data_Argonaut_Core.fromBoolean(spine.value0);
      };
      if (spine instanceof Data_Generic.SArray) {
          return Data_Argonaut_Core.fromArray(Prelude["<$>"](Prelude.functorArray)(function (_23) {
              return gEncodeJson$prime(_23(Prelude.unit));
          })(spine.value0));
      };
      if (spine instanceof Data_Generic.SProd) {
          return Data_Argonaut_Core.fromObject(Data_StrMap.insert("tag")(encodeJson(encodeJsonJString)(spine.value0))(Data_StrMap.singleton("values")(encodeJson(encodeJsonArray(encodeJsonJson))(Prelude["<$>"](Prelude.functorArray)(function (_24) {
              return gEncodeJson$prime(_24(Prelude.unit));
          })(spine.value1)))));
      };
      if (spine instanceof Data_Generic.SRecord) {
          return Data_Argonaut_Core.fromObject(Data_Foldable.foldr(Data_Foldable.foldableArray)(addField)(Data_StrMap.empty)(spine.value0));
      };
      throw new Error("Failed pattern match: " + [ spine.constructor.name ]);
  };
  var gEncodeJson = function (__dict_Generic_11) {
      return function (_25) {
          return gEncodeJson$prime(Data_Generic.toSpine(__dict_Generic_11)(_25));
      };
  };
  exports["EncodeJson"] = EncodeJson;
  exports["gEncodeJson"] = gEncodeJson;
  exports["encodeJson"] = encodeJson;
  exports["encodeJsonUnit"] = encodeJsonUnit;
  exports["encodeJsonJString"] = encodeJsonJString;
  exports["encodeJsonJson"] = encodeJsonJson;
  exports["encodeJsonArray"] = encodeJsonArray;;
 
})(PS["Data.Argonaut.Encode"] = PS["Data.Argonaut.Encode"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];     
  var Printer = function (printJson) {
      this.printJson = printJson;
  };
  var printerString = new Printer(Prelude.show(Data_Argonaut_Core.showJson));
  var printJson = function (dict) {
      return dict.printJson;
  };
  exports["Printer"] = Printer;
  exports["printJson"] = printJson;
  exports["printerString"] = printerString;;
 
})(PS["Data.Argonaut.Printer"] = PS["Data.Argonaut.Printer"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.nowImpl = function (ctor) {
    return function () {
      return ctor(new Date());
    };
  };

  exports.jsDateConstructor = function (x) {
    return new Date(x);
  };

  // jshint maxparams: 2
  exports.jsDateMethod = function (method, date) {
    return date[method]();
  };

  // jshint maxparams: 3
  exports.strictJsDate = function (just, nothing, s) {
    var epoch = Date.parse(s);
    if (isNaN(epoch)) return nothing;
    var date = new Date(epoch);
    var s2 = date.toISOString();
    var idx = s2.indexOf(s);
    return idx < 0 ? nothing : just(date);
  };
 
})(PS["Data.Date"] = PS["Data.Date"] || {});
(function(exports) {
  /* globals exports */
  "use strict";     

  exports.isNaN = isNaN;         
 
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Global"];
  exports["isNaN"] = $foreign.isNaN;;
 
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Milliseconds = function (x) {
      return x;
  };
  exports["Milliseconds"] = Milliseconds;;
 
})(PS["Data.Time"] = PS["Data.Time"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Date"];
  var Global = PS["Global"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Time = PS["Data.Time"];
  var Data_Generic = PS["Data.Generic"];
  var DateTime = function (x) {
      return x;
  };
  var toEpochMilliseconds = function (_1) {
      return $foreign.jsDateMethod("getTime", _1);
  }; 
  var now = $foreign.nowImpl(DateTime);
  var fromJSDate = function (d) {
      var _44 = Global.isNaN($foreign.jsDateMethod("getTime", d));
      if (_44) {
          return Data_Maybe.Nothing.value;
      };
      if (!_44) {
          return new Data_Maybe.Just(d);
      };
      throw new Error("Failed pattern match at Data.Date line 58, column 1 - line 59, column 1: " + [ _44.constructor.name ]);
  };
  var fromStringStrict = function (s) {
      return Prelude[">>="](Data_Maybe.bindMaybe)($foreign.strictJsDate(Data_Maybe.Just.create, Data_Maybe.Nothing.value, s))(fromJSDate);
  };
  var fromEpochMilliseconds = function (_65) {
      return fromJSDate($foreign.jsDateConstructor(_65));
  };
  var genericDate = new Data_Generic.Generic(function (_8) {
      if (_8 instanceof Data_Generic.SProd && (_8.value0 === "Data.Date.Date" && _8.value1.length === 1)) {
          return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function (_66) {
              return fromEpochMilliseconds(Data_Time.Milliseconds(_66));
          })(Data_Generic.fromSpine(Data_Generic.genericNumber)(_8.value1[0](Prelude.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function (_7) {
      return new Data_Generic.SigProd([ {
          sigConstructor: "Data.Date.Date", 
          sigValues: [ Prelude["const"](Data_Generic.SigNumber.value) ]
      } ]);
  }, function (d) {
      var _49 = toEpochMilliseconds(d);
      return new Data_Generic.SProd("Data.Date.Date", [ function (u) {
          return new Data_Generic.SNumber(_49);
      } ]);
  });
  exports["now"] = now;
  exports["fromStringStrict"] = fromStringStrict;
  exports["toEpochMilliseconds"] = toEpochMilliseconds;
  exports["fromEpochMilliseconds"] = fromEpochMilliseconds;
  exports["fromJSDate"] = fromJSDate;
  exports["genericDate"] = genericDate;;
 
})(PS["Data.Date"] = PS["Data.Date"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };

  exports.isNull = function (value) {
    return value === null;
  };

  exports.isUndefined = function (value) {
    return value === undefined;
  };
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];
  var Data_Int = PS["Data.Int"];
  var Data_String = PS["Data.String"];     
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var JSONError = (function () {
      function JSONError(value0) {
          this.value0 = value0;
      };
      JSONError.create = function (value0) {
          return new JSONError(value0);
      };
      return JSONError;
  })();
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if (Prelude["=="](Prelude.eqString)($foreign.tagOf(value))(tag)) {
              return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
          };
          return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
      };
  };
  var showForeignError = new Prelude.Show(function (_0) {
      if (_0 instanceof TypeMismatch) {
          return "Type mismatch: expected " + (_0.value0 + (", found " + _0.value1));
      };
      if (_0 instanceof ErrorAtIndex) {
          return "Error at array index " + (Prelude.show(Prelude.showInt)(_0.value0) + (": " + Prelude.show(showForeignError)(_0.value1)));
      };
      if (_0 instanceof ErrorAtProperty) {
          return "Error at property " + (Prelude.show(Prelude.showString)(_0.value0) + (": " + Prelude.show(showForeignError)(_0.value1)));
      };
      if (_0 instanceof JSONError) {
          return "JSON error: " + _0.value0;
      };
      throw new Error("Failed pattern match: " + [ _0.constructor.name ]);
  });
  var readString = unsafeReadTagged("String");
  var readNumber = unsafeReadTagged("Number");
  var readInt = function (value) {
      var error = Data_Either.Left.create(new TypeMismatch("Int", $foreign.tagOf(value)));
      var fromNumber = function (_30) {
          return Data_Maybe.maybe(error)(Prelude.pure(Data_Either.applicativeEither))(Data_Int.fromNumber(_30));
      };
      return Data_Either.either(Prelude["const"](error))(fromNumber)(readNumber(value));
  };
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["JSONError"] = JSONError;
  exports["readInt"] = readInt;
  exports["readNumber"] = readNumber;
  exports["readString"] = readString;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["showForeignError"] = showForeignError;
  exports["isUndefined"] = $foreign.isUndefined;
  exports["isNull"] = $foreign.isNull;
  exports["typeOf"] = $foreign.typeOf;;
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foreign.Index

  // jshint maxparams: 4
  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };

  // jshint maxparams: 2
  exports.unsafeHasOwnProperty = function (prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  };

  exports.unsafeHasProperty = function (prop, value) {
    return prop in value;
  };
 
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Data.Foreign.Index"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Int = PS["Data.Int"];     
  var Index = function (errorAt, hasOwnProperty, hasProperty, ix) {
      this.errorAt = errorAt;
      this.hasOwnProperty = hasOwnProperty;
      this.hasProperty = hasProperty;
      this.ix = ix;
  };
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
      };
  };
  var prop = unsafeReadProp;
  var ix = function (dict) {
      return dict.ix;
  };
  var $bang = function (__dict_Index_0) {
      return ix(__dict_Index_0);
  };                         
  var hasPropertyImpl = function (p) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("object") || Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("function")) {
              return $foreign.unsafeHasProperty(p, value);
          };
          return false;
      };
  };
  var hasProperty = function (dict) {
      return dict.hasProperty;
  };
  var hasOwnPropertyImpl = function (p) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("object") || Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("function")) {
              return $foreign.unsafeHasOwnProperty(p, value);
          };
          return false;
      };
  };                                                                                                                   
  var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(prop));
  var hasOwnProperty = function (dict) {
      return dict.hasOwnProperty;
  };
  var errorAt = function (dict) {
      return dict.errorAt;
  };
  exports["Index"] = Index;
  exports["errorAt"] = errorAt;
  exports["hasOwnProperty"] = hasOwnProperty;
  exports["hasProperty"] = hasProperty;
  exports["!"] = $bang;
  exports["ix"] = ix;
  exports["prop"] = prop;
  exports["indexString"] = indexString;;
 
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Null = PS["Data.Foreign.Null"];
  var Data_Foreign_NullOrUndefined = PS["Data.Foreign.NullOrUndefined"];
  var Data_Foreign_Undefined = PS["Data.Foreign.Undefined"];
  var Data_Int = PS["Data.Int"];
  var Data_Traversable = PS["Data.Traversable"];     
  var IsForeign = function (read) {
      this.read = read;
  };
  var stringIsForeign = new IsForeign(Data_Foreign.readString);
  var read = function (dict) {
      return dict.read;
  };
  var readWith = function (__dict_IsForeign_1) {
      return function (f) {
          return function (value) {
              return Data_Either.either(function (_0) {
                  return Data_Either.Left.create(f(_0));
              })(Data_Either.Right.create)(read(__dict_IsForeign_1)(value));
          };
      };
  };
  var readProp = function (__dict_IsForeign_2) {
      return function (__dict_Index_3) {
          return function (prop) {
              return function (value) {
                  return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](__dict_Index_3)(value)(prop))(readWith(__dict_IsForeign_2)(Data_Foreign_Index.errorAt(__dict_Index_3)(prop)));
              };
          };
      };
  };
  var intIsForeign = new IsForeign(Data_Foreign.readInt);
  exports["IsForeign"] = IsForeign;
  exports["readProp"] = readProp;
  exports["readWith"] = readWith;
  exports["read"] = read;
  exports["stringIsForeign"] = stringIsForeign;
  exports["intIsForeign"] = intIsForeign;;
 
})(PS["Data.Foreign.Class"] = PS["Data.Foreign.Class"] || {});
(function(exports) {
  "use strict";

  // module Database.AnyDB
  /* eslint-env node*/
  /* eslint "no-underscore-dangle": 0 */

  exports.connect_ = function connect_(conString) {
    return function(success, error) {
      var anyDB = require("any-db");
      anyDB.createConnection(conString, function(err, con) {
        if (err) {
          error(err);
        } else {
          success(con);
        }
      });
    };
  };

  exports.runQuery_ = function runQuery_(queryStr) {
    return function(con) {
      return function(success, error) {
        con.query(queryStr, function(err, result) {
          if (err) {
            error(err);
          } else {
            success(result.rows);
          }
        });
      };
    };
  };

  exports.runQuery = function runQuery(queryStr) {
    return function(params) {
      return function(con) {
        return function(success, error) {
          con.query(queryStr, params, function(err, result) {
            if (err) {return error(err); }
            success(result.rows);
          });
        };
      };
    };
  };

  exports.close = function close(con) {
    return function() {
      con.end();
    };
  };
 
})(PS["Database.AnyDB"] = PS["Database.AnyDB"] || {});
(function(exports) {
  "use strict";

  // module Database.AnyDB.SqlValue
  /* eslint-env node*/

  exports.unsafeToSqlValue = function unsafeToSqlValue(x) {
    return x;
  };                          
 
})(PS["Database.AnyDB.SqlValue"] = PS["Database.AnyDB.SqlValue"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Database.AnyDB.SqlValue"];
  var Prelude = PS["Prelude"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Node_Buffer = PS["Node.Buffer"];     
  var IsSqlValue = function (toSql) {
      this.toSql = toSql;
  };
  var toSql = function (dict) {
      return dict.toSql;
  };
  var isSqlValueString = new IsSqlValue($foreign.unsafeToSqlValue);
  var isSqlValueInt = new IsSqlValue(function (_3) {
      return $foreign.unsafeToSqlValue(Data_Int.toNumber(_3));
  });
  var isSqlValueBuffer = new IsSqlValue($foreign.unsafeToSqlValue);
  exports["IsSqlValue"] = IsSqlValue;
  exports["toSql"] = toSql;
  exports["isSqlValueString"] = isSqlValueString;
  exports["isSqlValueInt"] = isSqlValueInt;
  exports["isSqlValueBuffer"] = isSqlValueBuffer;;
 
})(PS["Database.AnyDB.SqlValue"] = PS["Database.AnyDB.SqlValue"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Database.AnyDB"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Data_Either = PS["Data.Either"];
  var Data_Array = PS["Data.Array"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Data_Traversable = PS["Data.Traversable"];
  var Database_AnyDB_SqlValue = PS["Database.AnyDB.SqlValue"];     
  var Query = function (x) {
      return x;
  };
  var Postgres = (function () {
      function Postgres(value0) {
          this.value0 = value0;
      };
      Postgres.create = function (value0) {
          return new Postgres(value0);
      };
      return Postgres;
  })();
  var Sqlite3 = (function () {
      function Sqlite3(value0) {
          this.value0 = value0;
      };
      Sqlite3.create = function (value0) {
          return new Sqlite3(value0);
      };
      return Sqlite3;
  })();
  var mkConnectionString = function (_7) {
      if (_7 instanceof Postgres) {
          return "postgres://" + (_7.value0.user + (":" + (_7.value0.password + ("@" + (_7.value0.host + (":" + (Prelude.show(Prelude.showInt)(_7.value0.port) + ("/" + _7.value0.db))))))));
      };
      if (_7 instanceof Sqlite3) {
          return "sqlite3://" + (function () {
              if (_7.value0.memory) {
                  return ":memory:";
              };
              if (!_7.value0.memory) {
                  return _7.value0.filename;
              };
              throw new Error("Failed pattern match at Database.AnyDB line 64, column 1 - line 65, column 1: " + [ _7.value0.memory.constructor.name ]);
          })();
      };
      throw new Error("Failed pattern match at Database.AnyDB line 64, column 1 - line 65, column 1: " + [ _7.constructor.name ]);
  };
  var liftError = function (err) {
      return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error(Prelude.show(Data_Foreign.showForeignError)(err)));
  };
  var query = function (__dict_IsForeign_1) {
      return function (_10) {
          return function (params) {
              return function (con) {
                  return Prelude.bind(Control_Monad_Aff.bindAff)($foreign.runQuery(_10)(params)(con))(function (_0) {
                      return Data_Either.either(liftError)(Prelude.pure(Control_Monad_Aff.applicativeAff))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Prelude["<$>"](Prelude.functorArray)(Data_Foreign_Class.read(__dict_IsForeign_1))(_0)));
                  });
              };
          };
      };
  };
  var queryOne_ = function (__dict_IsForeign_3) {
      return function (_13) {
          return function (con) {
              return Prelude.bind(Control_Monad_Aff.bindAff)($foreign.runQuery_(_13)(con))(function (_3) {
                  return Data_Maybe.maybe(Prelude.pure(Control_Monad_Aff.applicativeAff)(Data_Maybe.Nothing.value))(Data_Either.either(liftError)(function (_54) {
                      return Prelude.pure(Control_Monad_Aff.applicativeAff)(Data_Maybe.Just.create(_54));
                  }))(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Foreign_Class.read(__dict_IsForeign_3))(Data_Array["!!"](_3)(0)));
              });
          };
      };
  };
  var query_ = function (__dict_IsForeign_5) {
      return function (_11) {
          return function (con) {
              return Prelude.bind(Control_Monad_Aff.bindAff)($foreign.runQuery_(_11)(con))(function (_1) {
                  return Data_Either.either(liftError)(Prelude.pure(Control_Monad_Aff.applicativeAff))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Prelude["<$>"](Prelude.functorArray)(Data_Foreign_Class.read(__dict_IsForeign_5))(_1)));
              });
          };
      };
  };
  var execute_ = function (_9) {
      return function (con) {
          return Prelude["void"](Control_Monad_Aff.functorAff)($foreign.runQuery_(_9)(con));
      };
  };
  var execute = function (_8) {
      return function (params) {
          return function (con) {
              return Prelude["void"](Control_Monad_Aff.functorAff)($foreign.runQuery(_8)(params)(con));
          };
      };
  }; 
  var connect = function (_56) {
      return $foreign.connect_(mkConnectionString(_56));
  };
  var withConnection = function (info) {
      return function (p) {
          return Prelude.bind(Control_Monad_Aff.bindAff)(connect(info))(function (_6) {
              return Control_Monad_Aff["finally"](p(_6))(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)($foreign.close(_6)));
          });
      };
  };
  exports["Postgres"] = Postgres;
  exports["Sqlite3"] = Sqlite3;
  exports["Query"] = Query;
  exports["withConnection"] = withConnection;
  exports["queryOne_"] = queryOne_;
  exports["query_"] = query_;
  exports["query"] = query;
  exports["execute_"] = execute_;
  exports["execute"] = execute;
  exports["connect"] = connect;
  exports["mkConnectionString"] = mkConnectionString;;
 
})(PS["Database.AnyDB"] = PS["Database.AnyDB"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var GET = (function () {
      function GET() {

      };
      GET.value = new GET();
      return GET;
  })();
  var POST = (function () {
      function POST() {

      };
      POST.value = new POST();
      return POST;
  })();
  var PUT = (function () {
      function PUT() {

      };
      PUT.value = new PUT();
      return PUT;
  })();
  exports["GET"] = GET;
  exports["POST"] = POST;
  exports["PUT"] = PUT;;
 
})(PS["Network.HTTP.Method"] = PS["Network.HTTP.Method"] || {});
(function(exports) {
  "use strict";

  //module Klikhut.Model.StrMap

  exports._collect = function _collect (f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (m.hasOwnProperty(k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  };
 
})(PS["Klikhut.Model.StrMap"] = PS["Klikhut.Model.StrMap"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Klikhut.Model.StrMap"];
  var Prelude = PS["Prelude"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Array = PS["Data.Array"];     
  var toArray = $foreign._collect(Data_Tuple.Tuple.create);
  var fromArray = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (acc) {
      return function (_0) {
          return Data_StrMap.insert(_0.value0)(_0.value1)(acc);
      };
  })(Data_StrMap.empty);
  exports["fromArray"] = fromArray;
  exports["toArray"] = toArray;;
 
})(PS["Klikhut.Model.StrMap"] = PS["Klikhut.Model.StrMap"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_String = PS["Data.String"];
  var Database_AnyDB = PS["Database.AnyDB"];
  var Data_Array = PS["Data.Array"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_StrMap = PS["Data.StrMap"];
  var Klikhut_Model_StrMap = PS["Klikhut.Model.StrMap"];     
  var Char = (function () {
      function Char() {

      };
      Char.value = new Char();
      return Char;
  })();
  var Integer = (function () {
      function Integer() {

      };
      Integer.value = new Integer();
      return Integer;
  })();
  var $$Date = (function () {
      function Date() {

      };
      Date.value = new Date();
      return Date;
  })();
  var Blob = (function () {
      function Blob() {

      };
      Blob.value = new Blob();
      return Blob;
  })();
  var PrimaryKey = (function () {
      function PrimaryKey() {

      };
      PrimaryKey.value = new PrimaryKey();
      return PrimaryKey;
  })();
  var Unique = (function () {
      function Unique() {

      };
      Unique.value = new Unique();
      return Unique;
  })();
  var ColumnDef = (function () {
      function ColumnDef(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ColumnDef.create = function (value0) {
          return function (value1) {
              return new ColumnDef(value0, value1);
          };
      };
      return ColumnDef;
  })();
  var update = function (_6) {
      return function (i) {
          return function (fs) {
              return function (str) {
                  var sortedValues = Prelude.map(Prelude.functorArray)(Data_Tuple.snd)(Data_Array.sortBy(function (f1) {
                      return function (f2) {
                          return Prelude.compare(Prelude.ordString)(Data_Tuple.fst(f1))(Data_Tuple.fst(f2));
                      };
                  })(Klikhut_Model_StrMap.toArray(fs)));
                  var sortedKeys = Data_Array.sort(Prelude.ordString)(Data_StrMap.keys(fs));
                  var fields = Data_Array.zip(sortedKeys)(sortedValues);
                  return Database_AnyDB.Query("UPDATE " + (_6.name + (" SET " + (Data_String.joinWith(", ")(Prelude.map(Prelude.functorArray)(function (_1) {
                      return _1.value0 + (" = '" + (_1.value1 + "'"));
                  })(fields)) + (" WHERE id = " + (Prelude.show(Prelude.showInt)(i) + str))))));
              };
          };
      };
  };
  var showFieldType = new Prelude.Show(function (_10) {
      if (_10 instanceof Char) {
          return "CHAR";
      };
      if (_10 instanceof Integer) {
          return "INTEGER";
      };
      if (_10 instanceof $$Date) {
          return "CHAR";
      };
      if (_10 instanceof Blob) {
          return "BLOB";
      };
      throw new Error("Failed pattern match at Klikhut.SQL line 30, column 1 - line 36, column 1: " + [ _10.constructor.name ]);
  });
  var showColumnConstraint = new Prelude.Show(function (_11) {
      if (_11 instanceof PrimaryKey) {
          return "PRIMARY KEY";
      };
      if (_11 instanceof Unique) {
          return "UNIQUE";
      };
      throw new Error("Failed pattern match at Klikhut.SQL line 36, column 1 - line 40, column 1: " + [ _11.constructor.name ]);
  });
  var showColumnDef = new Prelude.Show(function (_9) {
      return Prelude.show(showFieldType)(_9.value0) + ((function () {
          var _28 = Data_Array.length(_9.value1) > 0;
          if (_28) {
              return " ";
          };
          if (!_28) {
              return "";
          };
          throw new Error("Failed pattern match at Klikhut.SQL line 26, column 1 - line 30, column 1: " + [ _28.constructor.name ]);
      })() + Data_String.joinWith(", ")(Prelude.map(Prelude.functorArray)(Prelude.show(showColumnConstraint))(_9.value1)));
  });
  var selectStar = function (_8) {
      return function (s) {
          return Database_AnyDB.Query("SELECT * FROM " + (_8.name + (" " + s)));
      };
  };
  var selectStarId = function (t) {
      return function (i) {
          return selectStar(t)("WHERE id = " + Prelude.show(Prelude.showInt)(i));
      };
  };
  var selectLastInserted = function (t) {
      return selectStar(t)("WHERE id = last_insert_rowid()");
  };
  var parens = function (s) {
      return " (" + (s + ")");
  };
  var insert = function (_4) {
      return function (fs) {
          return function (str) {
              var sortedValues = Prelude.map(Prelude.functorArray)(Data_Tuple.snd)(Data_Array.sortBy(function (f1) {
                  return function (f2) {
                      return Prelude.compare(Prelude.ordString)(Data_Tuple.fst(f1))(Data_Tuple.fst(f2));
                  };
              })(Klikhut_Model_StrMap.toArray(fs)));
              var sortedKeys = Data_Array.sort(Prelude.ordString)(Data_StrMap.keys(fs));
              return Database_AnyDB.Query("INSERT INTO " + (_4.name + (parens(Data_String.joinWith(", ")(sortedKeys)) + (" VALUES" + (parens(Data_String.joinWith(", ")(Prelude.map(Prelude.functorArray)(function (str_2) {
                  return "'" + (str_2 + "'");
              })(sortedValues))) + (";" + str))))));
          };
      };
  };
  var dropTable = function (_2) {
      return Database_AnyDB.Query("DROP TABLE IF EXISTS " + _2.name);
  };
  var createColumnDefs = function (s) {
      return Data_String.joinWith(", ")(Prelude.map(Prelude.functorArray)(function (_0) {
          return _0.value0 + (" " + Prelude.show(showColumnDef)(_0.value1));
      })(Klikhut_Model_StrMap.toArray(s)));
  };
  var createTable = function (_3) {
      return Database_AnyDB.Query("CREATE TABLE " + (_3.name + parens(createColumnDefs(_3.columns))));
  };
  exports["Char"] = Char;
  exports["Integer"] = Integer;
  exports["Date"] = $$Date;
  exports["Blob"] = Blob;
  exports["PrimaryKey"] = PrimaryKey;
  exports["Unique"] = Unique;
  exports["ColumnDef"] = ColumnDef;
  exports["parens"] = parens;
  exports["selectLastInserted"] = selectLastInserted;
  exports["selectStarId"] = selectStarId;
  exports["selectStar"] = selectStar;
  exports["update"] = update;
  exports["insert"] = insert;
  exports["createTable"] = createTable;
  exports["createColumnDefs"] = createColumnDefs;
  exports["dropTable"] = dropTable;
  exports["showColumnDef"] = showColumnDef;
  exports["showFieldType"] = showFieldType;
  exports["showColumnConstraint"] = showColumnConstraint;;
 
})(PS["Klikhut.SQL"] = PS["Klikhut.SQL"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Prelude = PS["Prelude"];
  var Klikhut_SQL = PS["Klikhut.SQL"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Tuple = PS["Data.Tuple"];
  var Klikhut_Model_StrMap = PS["Klikhut.Model.StrMap"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];     
  var Photobooth = (function () {
      function Photobooth(value0) {
          this.value0 = value0;
      };
      Photobooth.create = function (value0) {
          return new Photobooth(value0);
      };
      return Photobooth;
  })();
  var photoboothsTable = {
      name: "PHOTOBOOTHS", 
      columns: Klikhut_Model_StrMap.fromArray([ Data_Tuple.Tuple.create("id")(new Klikhut_SQL.ColumnDef(Klikhut_SQL.Integer.value, [ Klikhut_SQL.PrimaryKey.value ])), Data_Tuple.Tuple.create("computername")(new Klikhut_SQL.ColumnDef(Klikhut_SQL.Char.value, [ Klikhut_SQL.Unique.value ])), Data_Tuple.Tuple.create("alias")(new Klikhut_SQL.ColumnDef(Klikhut_SQL.Char.value, [  ])), Data_Tuple.Tuple.create("defaultprofile")(new Klikhut_SQL.ColumnDef(Klikhut_SQL.Char.value, [  ])) ])
  };
  var photoboothIsForeign = new Data_Foreign_Class.IsForeign(function (obj) {
      return Prelude.bind(Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.intIsForeign)(Data_Foreign_Index.indexString)("id")(obj))(function (_3) {
          return Prelude.bind(Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("computername")(obj))(function (_2) {
              return Prelude.bind(Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("alias")(obj))(function (_1) {
                  return Prelude.bind(Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("defaultprofile")(obj))(function (_0) {
                      return Prelude["return"](Data_Either.applicativeEither)(new Photobooth({
                          id: new Data_Maybe.Just(_3), 
                          computername: _2, 
                          alias: _1, 
                          defaultprofile: _0
                      }));
                  });
              });
          });
      });
  });
  var genericPhotobooth = new Data_Generic.Generic(function ($dollarx) {
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "Photobooth" && $dollarx.value1.length === 1)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Photobooth.create))((function (r) {
              if (r instanceof Data_Generic.SRecord && r.value0.length === 4) {
                  return Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(function (alias_1) {
                      return function (computername_1) {
                          return function (defaultprofile_1) {
                              return function (id_1) {
                                  return {
                                      alias: alias_1, 
                                      computername: computername_1, 
                                      defaultprofile: defaultprofile_1, 
                                      id: id_1
                                  };
                              };
                          };
                      };
                  }))(Data_Generic.fromSpine(Data_Generic.genericString)((r.value0[0]).recValue(Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)((r.value0[1]).recValue(Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)((r.value0[2]).recValue(Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericMaybe(Data_Generic.genericInt))((r.value0[3]).recValue(Prelude.unit)));
              };
              return Data_Maybe.Nothing.value;
          })($dollarx.value1[0](Prelude.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd([ {
          sigConstructor: "Photobooth", 
          sigValues: [ function ($dollarq_1) {
              return new Data_Generic.SigRecord([ {
                  recLabel: "alias", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
                  }
              }, {
                  recLabel: "computername", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
                  }
              }, {
                  recLabel: "defaultprofile", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
                  }
              }, {
                  recLabel: "id", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Generic.genericMaybe(Data_Generic.genericInt))(Data_Generic.anyProxy);
                  }
              } ]);
          } ]
      } ]);
  }, function ($dollarx) {
      return new Data_Generic.SProd("Photobooth", [ function ($dollarq) {
          return new Data_Generic.SRecord([ {
              recLabel: "alias", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0.alias);
              }
          }, {
              recLabel: "computername", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0.computername);
              }
          }, {
              recLabel: "defaultprofile", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0.defaultprofile);
              }
          }, {
              recLabel: "id", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Generic.genericMaybe(Data_Generic.genericInt))($dollarx.value0.id);
              }
          } ]);
      } ]);
  });                                                                    
  var encodeJsonPhotobooth = new Data_Argonaut_Encode.EncodeJson(Data_Argonaut_Encode.gEncodeJson(genericPhotobooth));
  var decodeJsonPhotobooth = new Data_Argonaut_Decode.DecodeJson(Data_Argonaut_Decode.gDecodeJson(genericPhotobooth));
  exports["Photobooth"] = Photobooth;
  exports["photoboothsTable"] = photoboothsTable;
  exports["genericPhotobooth"] = genericPhotobooth;
  exports["encodeJsonPhotobooth"] = encodeJsonPhotobooth;
  exports["decodeJsonPhotobooth"] = decodeJsonPhotobooth;
  exports["photoboothIsForeign"] = photoboothIsForeign;;
 
})(PS["Klikhut.Model.Photobooth"] = PS["Klikhut.Model.Photobooth"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Klikhut_SQL = PS["Klikhut.SQL"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Tuple = PS["Data.Tuple"];
  var Klikhut_Model_StrMap = PS["Klikhut.Model.StrMap"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];     
  var SavedImage = (function () {
      function SavedImage(value0) {
          this.value0 = value0;
      };
      SavedImage.create = function (value0) {
          return new SavedImage(value0);
      };
      return SavedImage;
  })();
  var savedImageTable = {
      name: "IMAGES", 
      columns: Klikhut_Model_StrMap.fromArray([ Data_Tuple.Tuple.create("id")(new Klikhut_SQL.ColumnDef(Klikhut_SQL.Integer.value, [ Klikhut_SQL.PrimaryKey.value ])), Data_Tuple.Tuple.create("name")(new Klikhut_SQL.ColumnDef(Klikhut_SQL.Char.value, [  ])), Data_Tuple.Tuple.create("eventid")(new Klikhut_SQL.ColumnDef(Klikhut_SQL.Integer.value, [  ])), Data_Tuple.Tuple.create("image")(new Klikhut_SQL.ColumnDef(Klikhut_SQL.Blob.value, [  ])) ])
  };
  var savedImageIsForeign = new Data_Foreign_Class.IsForeign(function (obj) {
      return Prelude.bind(Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.intIsForeign)(Data_Foreign_Index.indexString)("id")(obj))(function (_2) {
          return Prelude.bind(Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("name")(obj))(function (_1) {
              return Prelude.bind(Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.intIsForeign)(Data_Foreign_Index.indexString)("eventid")(obj))(function (_0) {
                  return Prelude["return"](Data_Either.applicativeEither)(new SavedImage({
                      id: _2, 
                      name: _1, 
                      eventId: _0
                  }));
              });
          });
      });
  });
  var genericSavedImage = new Data_Generic.Generic(function ($dollarx) {
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "SavedImage" && $dollarx.value1.length === 1)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(SavedImage.create))((function (r) {
              if (r instanceof Data_Generic.SRecord && r.value0.length === 3) {
                  return Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(function (eventId_1) {
                      return function (id_1) {
                          return function (name_1) {
                              return {
                                  eventId: eventId_1, 
                                  id: id_1, 
                                  name: name_1
                              };
                          };
                      };
                  }))(Data_Generic.fromSpine(Data_Generic.genericInt)((r.value0[0]).recValue(Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericInt)((r.value0[1]).recValue(Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)((r.value0[2]).recValue(Prelude.unit)));
              };
              return Data_Maybe.Nothing.value;
          })($dollarx.value1[0](Prelude.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd([ {
          sigConstructor: "SavedImage", 
          sigValues: [ function ($dollarq_1) {
              return new Data_Generic.SigRecord([ {
                  recLabel: "eventId", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
                  }
              }, {
                  recLabel: "id", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
                  }
              }, {
                  recLabel: "name", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
                  }
              } ]);
          } ]
      } ]);
  }, function ($dollarx) {
      return new Data_Generic.SProd("SavedImage", [ function ($dollarq) {
          return new Data_Generic.SRecord([ {
              recLabel: "eventId", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Generic.genericInt)($dollarx.value0.eventId);
              }
          }, {
              recLabel: "id", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Generic.genericInt)($dollarx.value0.id);
              }
          }, {
              recLabel: "name", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0.name);
              }
          } ]);
      } ]);
  });                                                                    
  var encodeJsonSavedImage = new Data_Argonaut_Encode.EncodeJson(Data_Argonaut_Encode.gEncodeJson(genericSavedImage));
  var decodeJsonSavedImage = new Data_Argonaut_Decode.DecodeJson(Data_Argonaut_Decode.gDecodeJson(genericSavedImage));
  exports["SavedImage"] = SavedImage;
  exports["savedImageTable"] = savedImageTable;
  exports["genericSavedImage"] = genericSavedImage;
  exports["encodeJsonSavedImage"] = encodeJsonSavedImage;
  exports["decodeJsonSavedImage"] = decodeJsonSavedImage;
  exports["savedImageIsForeign"] = savedImageIsForeign;;
 
})(PS["Klikhut.Model.SavedImage"] = PS["Klikhut.Model.SavedImage"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Prelude = PS["Prelude"];
  var Klikhut_SQL = PS["Klikhut.SQL"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Date = PS["Data.Date"];
  var Data_Time = PS["Data.Time"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Klikhut_Model_StrMap = PS["Klikhut.Model.StrMap"];
  var Klikhut_Model_SavedImage = PS["Klikhut.Model.SavedImage"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];     
  var PartialEvent = (function () {
      function PartialEvent(value0) {
          this.value0 = value0;
      };
      PartialEvent.create = function (value0) {
          return new PartialEvent(value0);
      };
      return PartialEvent;
  })();
  var Event = (function () {
      function Event(value0) {
          this.value0 = value0;
      };
      Event.create = function (value0) {
          return new Event(value0);
      };
      return Event;
  })();
  var partialEventIsForeign = new Data_Foreign_Class.IsForeign(function (obj) {
      return Prelude.bind(Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.intIsForeign)(Data_Foreign_Index.indexString)("id")(obj))(function (_7) {
          return Prelude.bind(Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("computername")(obj))(function (_6) {
              return Prelude.bind(Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("name")(obj))(function (_5) {
                  return Prelude.bind(Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("datefrom")(obj))(function (_4) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Maybe.maybe(Data_Either.Left.create(new Data_Foreign.TypeMismatch("ISO 8601 Date", _4)))(Data_Either.Right.create)(Data_Date.fromStringStrict(_4)))(function (_3) {
                          return Prelude.bind(Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("dateuntil")(obj))(function (_2) {
                              return Prelude.bind(Data_Either.bindEither)(Data_Maybe.maybe(Data_Either.Left.create(new Data_Foreign.TypeMismatch("ISO 8601 Date", _2)))(Data_Either.Right.create)(Data_Date.fromStringStrict(_2)))(function (_1) {
                                  return Prelude.bind(Data_Either.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("profile")(obj))(function (_0) {
                                      return Prelude["return"](Data_Either.applicativeEither)(new PartialEvent({
                                          id: new Data_Maybe.Just(_7), 
                                          computername: _6, 
                                          name: _5, 
                                          datefrom: _3, 
                                          dateuntil: _1, 
                                          profile: _0
                                      }));
                                  });
                              });
                          });
                      });
                  });
              });
          });
      });
  });
  var mkEvent = function (_12) {
      return function (im) {
          return new Event({
              id: _12.value0.id, 
              computername: _12.value0.computername, 
              name: _12.value0.name, 
              datefrom: _12.value0.datefrom, 
              dateuntil: _12.value0.dateuntil, 
              profile: _12.value0.profile, 
              images: im
          });
      };
  };
  var genericEvent = new Data_Generic.Generic(function ($dollarx) {
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "Event" && $dollarx.value1.length === 1)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Event.create))((function (r) {
              if (r instanceof Data_Generic.SRecord && r.value0.length === 7) {
                  return Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(function (computername_1) {
                      return function (datefrom_1) {
                          return function (dateuntil_1) {
                              return function (id_1) {
                                  return function (images_1) {
                                      return function (name_1) {
                                          return function (profile_1) {
                                              return {
                                                  computername: computername_1, 
                                                  datefrom: datefrom_1, 
                                                  dateuntil: dateuntil_1, 
                                                  id: id_1, 
                                                  images: images_1, 
                                                  name: name_1, 
                                                  profile: profile_1
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  }))(Data_Generic.fromSpine(Data_Generic.genericString)((r.value0[0]).recValue(Prelude.unit))))(Data_Generic.fromSpine(Data_Date.genericDate)((r.value0[1]).recValue(Prelude.unit))))(Data_Generic.fromSpine(Data_Date.genericDate)((r.value0[2]).recValue(Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericMaybe(Data_Generic.genericInt))((r.value0[3]).recValue(Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericArray(Klikhut_Model_SavedImage.genericSavedImage))((r.value0[4]).recValue(Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)((r.value0[5]).recValue(Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)((r.value0[6]).recValue(Prelude.unit)));
              };
              return Data_Maybe.Nothing.value;
          })($dollarx.value1[0](Prelude.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd([ {
          sigConstructor: "Event", 
          sigValues: [ function ($dollarq_1) {
              return new Data_Generic.SigRecord([ {
                  recLabel: "computername", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
                  }
              }, {
                  recLabel: "datefrom", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Date.genericDate)(Data_Generic.anyProxy);
                  }
              }, {
                  recLabel: "dateuntil", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Date.genericDate)(Data_Generic.anyProxy);
                  }
              }, {
                  recLabel: "id", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Generic.genericMaybe(Data_Generic.genericInt))(Data_Generic.anyProxy);
                  }
              }, {
                  recLabel: "images", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Generic.genericArray(Klikhut_Model_SavedImage.genericSavedImage))(Data_Generic.anyProxy);
                  }
              }, {
                  recLabel: "name", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
                  }
              }, {
                  recLabel: "profile", 
                  recValue: function ($dollarq_2) {
                      return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
                  }
              } ]);
          } ]
      } ]);
  }, function ($dollarx) {
      return new Data_Generic.SProd("Event", [ function ($dollarq) {
          return new Data_Generic.SRecord([ {
              recLabel: "computername", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0.computername);
              }
          }, {
              recLabel: "datefrom", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Date.genericDate)($dollarx.value0.datefrom);
              }
          }, {
              recLabel: "dateuntil", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Date.genericDate)($dollarx.value0.dateuntil);
              }
          }, {
              recLabel: "id", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Generic.genericMaybe(Data_Generic.genericInt))($dollarx.value0.id);
              }
          }, {
              recLabel: "images", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Generic.genericArray(Klikhut_Model_SavedImage.genericSavedImage))($dollarx.value0.images);
              }
          }, {
              recLabel: "name", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0.name);
              }
          }, {
              recLabel: "profile", 
              recValue: function ($dollarq_1) {
                  return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0.profile);
              }
          } ]);
      } ]);
  });                                                                
  var eventsTable = {
      name: "EVENTS", 
      columns: Klikhut_Model_StrMap.fromArray([ Data_Tuple.Tuple.create("id")(new Klikhut_SQL.ColumnDef(Klikhut_SQL.Integer.value, [ Klikhut_SQL.PrimaryKey.value ])), Data_Tuple.Tuple.create("computername")(new Klikhut_SQL.ColumnDef(Klikhut_SQL.Char.value, [  ])), Data_Tuple.Tuple.create("name")(new Klikhut_SQL.ColumnDef(Klikhut_SQL.Char.value, [  ])), Data_Tuple.Tuple.create("datefrom")(new Klikhut_SQL.ColumnDef((Klikhut_SQL["Date"]).value, [  ])), Data_Tuple.Tuple.create("dateuntil")(new Klikhut_SQL.ColumnDef((Klikhut_SQL["Date"]).value, [  ])), Data_Tuple.Tuple.create("profile")(new Klikhut_SQL.ColumnDef(Klikhut_SQL.Char.value, [  ])) ])
  };                                                           
  var encodeJsonEvent = new Data_Argonaut_Encode.EncodeJson(Data_Argonaut_Encode.gEncodeJson(genericEvent));
  var decodeJsonEvent = new Data_Argonaut_Decode.DecodeJson(Data_Argonaut_Decode.gDecodeJson(genericEvent));
  exports["PartialEvent"] = PartialEvent;
  exports["Event"] = Event;
  exports["eventsTable"] = eventsTable;
  exports["mkEvent"] = mkEvent;
  exports["genericEvent"] = genericEvent;
  exports["encodeJsonEvent"] = encodeJsonEvent;
  exports["decodeJsonEvent"] = decodeJsonEvent;
  exports["partialEventIsForeign"] = partialEventIsForeign;;
 
})(PS["Klikhut.Model.Event"] = PS["Klikhut.Model.Event"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Network_HTTP_Affjax = PS["Network.HTTP.Affjax"];
  var Network_HTTP_RequestHeader = PS["Network.HTTP.RequestHeader"];
  var Network_HTTP_MimeType_Common = PS["Network.HTTP.MimeType.Common"];
  var Network_HTTP_Method = PS["Network.HTTP.Method"];
  var DOM_File_Types = PS["DOM.File.Types"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Either = PS["Data.Either"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Printer = PS["Data.Argonaut.Printer"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Node_Express_Types = PS["Node.Express.Types"];
  var Klikhut_Model_Photobooth = PS["Klikhut.Model.Photobooth"];
  var Klikhut_Model_Event = PS["Klikhut.Model.Event"];
  var Klikhut_Model_SavedImage = PS["Klikhut.Model.SavedImage"];
  var Network_HTTP_Affjax_Request = PS["Network.HTTP.Affjax.Request"];
  var Network_HTTP_Affjax_Response = PS["Network.HTTP.Affjax.Response"];     
  var FileEndpoint = (function () {
      function FileEndpoint(value0) {
          this.value0 = value0;
      };
      FileEndpoint.create = function (value0) {
          return new FileEndpoint(value0);
      };
      return FileEndpoint;
  })();
  var Endpoint = (function () {
      function Endpoint(value0) {
          this.value0 = value0;
      };
      Endpoint.create = function (value0) {
          return new Endpoint(value0);
      };
      return Endpoint;
  })();
  var putPhotobooths = new Endpoint({
      method: Network_HTTP_Method.PUT.value, 
      serverUrl: "/api/photobooths", 
      mkClientUrl: Prelude["const"]("/api/photobooths")
  });
  var putEvents = new Endpoint({
      method: Network_HTTP_Method.PUT.value, 
      serverUrl: "/api/events", 
      mkClientUrl: Prelude["const"]("/api/events")
  });
  var postPhotobooths = new Endpoint({
      method: Network_HTTP_Method.POST.value, 
      serverUrl: "/api/photobooths", 
      mkClientUrl: Prelude["const"]("/api/photobooths")
  });
  var postEvents = new Endpoint({
      method: Network_HTTP_Method.POST.value, 
      serverUrl: "/api/events", 
      mkClientUrl: Prelude["const"]("/api/events")
  });
  var getPhotobooths = new Endpoint({
      method: Network_HTTP_Method.GET.value, 
      serverUrl: "/api/photobooths", 
      mkClientUrl: Prelude["const"]("/api/photobooths")
  });
  var getEvents = new Endpoint({
      method: Network_HTTP_Method.GET.value, 
      serverUrl: "/api/events/:cname", 
      mkClientUrl: function (s) {
          return "/api/events/" + s;
      }
  });
  var attachImage = new FileEndpoint({
      serverUrl: "/api/attachfiletoevent/:eventid/:name", 
      mkClientUrl: function (_2) {
          return "/api/attachfiletoevent/" + (Prelude.show(Prelude.showInt)(_2.value0) + ("/" + _2.value1));
      }
  });
  exports["FileEndpoint"] = FileEndpoint;
  exports["Endpoint"] = Endpoint;
  exports["attachImage"] = attachImage;
  exports["putEvents"] = putEvents;
  exports["postEvents"] = postEvents;
  exports["getEvents"] = getEvents;
  exports["putPhotobooths"] = putPhotobooths;
  exports["postPhotobooths"] = postPhotobooths;
  exports["getPhotobooths"] = getPhotobooths;;
 
})(PS["Klikhut.Endpoint"] = PS["Klikhut.Endpoint"] || {});
(function(exports) {
  "use strict";

  //module Klikhut.Model.Date
  /*eslint-env node*/

  exports.iso8601 = function iso8601(d){
    return d.toISOString();
  };
 
})(PS["Klikhut.Model.Date"] = PS["Klikhut.Model.Date"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Klikhut.Model.Date"];
  var Data_Date = PS["Data.Date"];
  exports["iso8601"] = $foreign.iso8601;;
 
})(PS["Klikhut.Model.Date"] = PS["Klikhut.Model.Date"] || {});
(function(exports) {
  "use strict";

  //module Klikhut.Server.Core
  /*eslint-env node*/

  exports.makeApp = function makeApp(){
    var app = require("express")();
    // var bodyParser = require("body-parser");
    // app.use(bodyParser.json());
    return app;
  };

  exports.listen = function listen(app){
    return function(port){
      return function(){
        var server = require("http").createServer(app);
        server.listen(port);
        return server;
      };
    };
  };

  exports.get = function get(app){
    return function (url){
      return function(mware){
        return function(handler){
          return function(){
            app.get(url, mware, function(req, res){
              return handler(req)(res)();
            });
          };
        };
      };
    };
  };

  exports.post = function get(app){
    return function (url){
      return function(mware){
        return function(handler){
          return function(){
            app.post(url, mware, function(req, res){
              return handler(req)(res)();
            });
          };
        };
      };
    };
  };

  exports.put = function get(app){
    return function (url){
      return function(mware){
        return function(handler){
          return function(){
            app.put(url, mware, function(req, res){
              return handler(req)(res)();
            });
          };
        };
      };
    };
  };

  var bodyParser = require("body-parser");
  exports.jsonParser = bodyParser.json();
  exports.jpegParser = bodyParser.raw({type: "jpg", limit: "5MB"});

  exports.mkConvert = function mkConvert(constr){
    return function convert(req){
      return constr(req.url)(!req.body || Object.keys(req.body).length === 0 ? null : req.body)(req.params)(req.path)(req.query)(req.headers);
    };
  };

  exports.mkBufferConvert = function mkBufferConvert(constr){
    return function convert(req){
      return constr(req.url)(req.body)(req.params)(req.path)(req.query)(req.headers);
    };
  };

  exports.sendStr = function sendStr(res){
    return function(string){
      return function(){
        res.send(string);
      };
    };
  };
  exports.sendFile = function sendFile(res){
    return function(string){
      return function(){
        res.sendFile(string, {root: process.cwd()});
      };
    };
  };
 
})(PS["Klikhut.Server.Core"] = PS["Klikhut.Server.Core"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Klikhut.Server.Core"];
  var Prelude = PS["Prelude"];
  var Data_StrMap = PS["Data.StrMap"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Klikhut_Endpoint = PS["Klikhut.Endpoint"];
  var Data_Function = PS["Data.Function"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Printer = PS["Data.Argonaut.Printer"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Network_HTTP_Method = PS["Network.HTTP.Method"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Data_Either = PS["Data.Either"];
  var Node_Buffer = PS["Node.Buffer"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];     
  var parseBodyOrThrow = function (__dict_DecodeJson_0) {
      return function (a) {
          return Data_Either.either(function (str) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("failed to parse input: " + str));
          })(function (p) {
              return Prelude["return"](Control_Monad_Aff.applicativeAff)((function () {
                  var _14 = {};
                  for (var _15 in a) {
                      if (a.hasOwnProperty(_15)) {
                          _14[_15] = a[_15];
                      };
                  };
                  _14.body = p;
                  return _14;
              })());
          })(Data_Argonaut_Decode.decodeJson(__dict_DecodeJson_0)(a.body));
      };
  };
  var convertJson = $foreign.mkConvert(function (_0) {
      return function (_1) {
          return function (_2) {
              return function (_3) {
                  return function (_4) {
                      return function (_5) {
                          return {
                              url: _0, 
                              body: _1, 
                              params: _2, 
                              path: _3, 
                              query: _4, 
                              headers: _5
                          };
                      };
                  };
              };
          };
      };
  });
  var hostEndpoint = function (__dict_EncodeJson_1) {
      return function (__dict_DecodeJson_2) {
          return function (__dict_EncodeJson_3) {
              return function (__dict_DecodeJson_4) {
                  return function (app) {
                      return function (_12) {
                          return function (f) {
                              if (_12.value0.method instanceof Network_HTTP_Method.GET) {
                                  var handler = function (req) {
                                      return function (res) {
                                          return Control_Monad_Aff.runAff(function (err) {
                                              return function __do() {
                                                  Control_Monad_Eff_Console.log("Failed hostEndpoint GET on " + (_12.value0.serverUrl + Control_Monad_Eff_Exception.message(err)))();
                                                  return $foreign.sendStr(res)(Control_Monad_Eff_Exception.message(err))();
                                              };
                                          })(function (a) {
                                              return $foreign.sendStr(res)(Data_Argonaut_Printer.printJson(Data_Argonaut_Printer.printerString)(Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_3)(a)));
                                          })(Prelude[">>="](Control_Monad_Aff.bindAff)(parseBodyOrThrow(__dict_DecodeJson_2)(convertJson(req)))(f));
                                      };
                                  };
                                  return $foreign.get(app)(_12.value0.serverUrl)($foreign.jsonParser)(handler);
                              };
                              if (_12.value0.method instanceof Network_HTTP_Method.POST) {
                                  var handler = function (req) {
                                      return function (res) {
                                          return Control_Monad_Aff.runAff(function (err) {
                                              return function __do() {
                                                  Control_Monad_Eff_Console.log("Failed hostEndpoint POST on " + (_12.value0.serverUrl + Control_Monad_Eff_Exception.message(err)))();
                                                  return $foreign.sendStr(res)(Control_Monad_Eff_Exception.message(err))();
                                              };
                                          })(function (a) {
                                              return $foreign.sendStr(res)(Data_Argonaut_Printer.printJson(Data_Argonaut_Printer.printerString)(Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_3)(a)));
                                          })(Prelude[">>="](Control_Monad_Aff.bindAff)(parseBodyOrThrow(__dict_DecodeJson_2)(convertJson(req)))(f));
                                      };
                                  };
                                  return $foreign.post(app)(_12.value0.serverUrl)($foreign.jsonParser)(handler);
                              };
                              if (_12.value0.method instanceof Network_HTTP_Method.PUT) {
                                  var handler = function (req) {
                                      return function (res) {
                                          return Control_Monad_Aff.runAff(function (err) {
                                              return function __do() {
                                                  Control_Monad_Eff_Console.log("Failed hostEndpoint PUT on " + (_12.value0.serverUrl + Control_Monad_Eff_Exception.message(err)))();
                                                  return $foreign.sendStr(res)(Control_Monad_Eff_Exception.message(err))();
                                              };
                                          })(function (a) {
                                              return $foreign.sendStr(res)(Data_Argonaut_Printer.printJson(Data_Argonaut_Printer.printerString)(Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_3)(a)));
                                          })(Prelude[">>="](Control_Monad_Aff.bindAff)(parseBodyOrThrow(__dict_DecodeJson_2)(convertJson(req)))(f));
                                      };
                                  };
                                  return $foreign.put(app)(_12.value0.serverUrl)($foreign.jsonParser)(handler);
                              };
                              throw new Error("Failed pattern match at Klikhut.Server.Core line 49, column 1 - line 52, column 1: " + [ app.constructor.name, _12.constructor.name, f.constructor.name ]);
                          };
                      };
                  };
              };
          };
      };
  };
  var hostFile = function (app) {
      return function (url) {
          return function (f) {
              var handler = function (req) {
                  return function (res) {
                      return Control_Monad_Aff.runAff(function (err) {
                          return function __do() {
                              Control_Monad_Eff_Console.log("Failed hostFile " + Control_Monad_Eff_Exception.message(err))();
                              return $foreign.sendStr(res)(Control_Monad_Eff_Exception.message(err))();
                          };
                      })(function (a) {
                          return $foreign.sendFile(res)(a);
                      })(Prelude[">>="](Control_Monad_Aff.bindAff)(parseBodyOrThrow(Data_Argonaut_Decode.decodeJsonNull)(convertJson(req)))(f));
                  };
              };
              return $foreign.get(app)(url)($foreign.jsonParser)(handler);
          };
      };
  };
  var convertBuffer = $foreign.mkBufferConvert(function (_6) {
      return function (_7) {
          return function (_8) {
              return function (_9) {
                  return function (_10) {
                      return function (_11) {
                          return {
                              url: _6, 
                              body: _7, 
                              params: _8, 
                              path: _9, 
                              query: _10, 
                              headers: _11
                          };
                      };
                  };
              };
          };
      };
  });
  var hostFileEndpoint = function (__dict_EncodeJson_5) {
      return function (__dict_DecodeJson_6) {
          return function (app) {
              return function (_13) {
                  return function (f) {
                      var handler = function (req) {
                          return function (res) {
                              return Control_Monad_Aff.runAff(function (err) {
                                  return function __do() {
                                      Control_Monad_Eff_Console.log("Failed hostFileEndpoint on " + (_13.value0.serverUrl + Control_Monad_Eff_Exception.message(err)))();
                                      return $foreign.sendStr(res)(Control_Monad_Eff_Exception.message(err))();
                                  };
                              })(function (a) {
                                  return $foreign.sendStr(res)(Data_Argonaut_Printer.printJson(Data_Argonaut_Printer.printerString)(Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_5)(a)));
                              })(f(convertBuffer(req)));
                          };
                      };
                      return $foreign.post(app)(_13.value0.serverUrl)($foreign.jpegParser)(handler);
                  };
              };
          };
      };
  };
  exports["hostFileEndpoint"] = hostFileEndpoint;
  exports["hostFile"] = hostFile;
  exports["hostEndpoint"] = hostEndpoint;
  exports["listen"] = $foreign.listen;
  exports["makeApp"] = $foreign.makeApp;;
 
})(PS["Klikhut.Server.Core"] = PS["Klikhut.Server.Core"] || {});
(function(exports) {
  "use strict";

  //module Main

  exports.pInt = function pInt(nothing){
    return function(just){
      return function(str){
        var i = parseInt(str);
        if (isNaN(i)){
          return nothing;
        } else {
          return just(i);
        }
      };
    };
  };
 
})(PS["Main"] = PS["Main"] || {});
(function(exports) {
  // Generated by psc version 0.7.5.2
  "use strict";
  var $foreign = PS["Main"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Data_Argonaut_Printer = PS["Data.Argonaut.Printer"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Date = PS["Data.Date"];
  var Data_Array = PS["Data.Array"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_String = PS["Data.String"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe = PS["Data.Maybe"];
  var Database_AnyDB = PS["Database.AnyDB"];
  var Database_AnyDB_SqlValue = PS["Database.AnyDB.SqlValue"];
  var Node_Buffer = PS["Node.Buffer"];
  var Klikhut_SQL = PS["Klikhut.SQL"];
  var Klikhut_Endpoint = PS["Klikhut.Endpoint"];
  var Klikhut_Server_Core = PS["Klikhut.Server.Core"];
  var Klikhut_Model_Photobooth = PS["Klikhut.Model.Photobooth"];
  var Klikhut_Model_Event = PS["Klikhut.Model.Event"];
  var Klikhut_Model_SavedImage = PS["Klikhut.Model.SavedImage"];
  var Klikhut_Model_Date = PS["Klikhut.Model.Date"];
  var Klikhut_Model_StrMap = PS["Klikhut.Model.StrMap"];
  var Klikhut_Debug = PS["Klikhut.Debug"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];     
  var yourbooth = new Klikhut_Model_Photobooth.Photobooth({
      id: Data_Maybe.Nothing.value, 
      computername: "yourcomputername", 
      alias: "youralias", 
      defaultprofile: "yourprofile"
  });
  var $$static = function (_11) {
      if (_11.url === "/") {
          return Prelude["return"](Control_Monad_Aff.applicativeAff)("./static/index.html");
      };
      if (_11.url === "/static/client.js") {
          return Prelude["return"](Control_Monad_Aff.applicativeAff)("./static/client.js");
      };
      return Prelude["return"](Control_Monad_Aff.applicativeAff)(_11.url);
  };
  var selectImagesForEvents = function (is) {
      return function (conn) {
          var qs = Data_String.joinWith(", ")(Data_Array.replicate(Data_Array.length(is))("?"));
          return Database_AnyDB.query(Klikhut_Model_SavedImage.savedImageIsForeign)(Klikhut_SQL.selectStar(Klikhut_Model_SavedImage.savedImageTable)("WHERE eventid = (" + (qs + ")")))(Prelude.map(Prelude.functorArray)(Database_AnyDB_SqlValue.toSql(Database_AnyDB_SqlValue.isSqlValueInt))(is))(conn);
      };
  };
  var selectImagesForEvent = function (i) {
      return function (conn) {
          return Database_AnyDB.query(Klikhut_Model_SavedImage.savedImageIsForeign)(Klikhut_SQL.selectStar(Klikhut_Model_SavedImage.savedImageTable)("WHERE eventid = ?"))([ Database_AnyDB_SqlValue.toSql(Database_AnyDB_SqlValue.isSqlValueInt)(i) ])(conn);
      };
  };
  var safeParseInt = function (str) {
      return $foreign.pInt(Data_Maybe.Nothing.value)(Data_Maybe.Just.create)(str);
  };
  var port = 8080;
  var myevent = function (d) {
      return new Klikhut_Model_Event.Event({
          id: Data_Maybe.Nothing.value, 
          computername: "mycomputername", 
          name: "Sweet Event Dude", 
          datefrom: d, 
          dateuntil: d, 
          profile: "myprofile", 
          images: [  ]
      });
  };
  var mybooth = new Klikhut_Model_Photobooth.Photobooth({
      id: Data_Maybe.Nothing.value, 
      computername: "mycomputername", 
      alias: "myalias", 
      defaultprofile: "myprofile"
  });
  var insertPB = function (_15) {
      return Klikhut_SQL.insert(Klikhut_Model_Photobooth.photoboothsTable)(Klikhut_Model_StrMap.fromArray([ new Data_Tuple.Tuple("computername", _15.value0.computername), new Data_Tuple.Tuple("alias", _15.value0.alias), new Data_Tuple.Tuple("defaultprofile", _15.value0.defaultprofile) ]))("");
  };
  var insertEvent = function (_17) {
      return Klikhut_SQL.insert(Klikhut_Model_Event.eventsTable)(Klikhut_Model_StrMap.fromArray([ new Data_Tuple.Tuple("computername", _17.value0.computername), new Data_Tuple.Tuple("name", _17.value0.name), Data_Tuple.Tuple.create("datefrom")(Klikhut_Model_Date.iso8601(_17.value0.datefrom)), Data_Tuple.Tuple.create("dateuntil")(Klikhut_Model_Date.iso8601(_17.value0.dateuntil)), Data_Tuple.Tuple.create("profile")(_17.value0.profile) ]))("");
  };
  var connectionInfo = new Database_AnyDB.Sqlite3({
      filename: "klikhutdb", 
      memory: false
  });
  var eventsByCname = function (_13) {
      var _31 = Data_StrMap.lookup("cname")(_13.params);
      if (_31 instanceof Data_Maybe.Nothing) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("GetEvents: No computername provided"));
      };
      if (_31 instanceof Data_Maybe.Just) {
          var q = Klikhut_SQL.selectStar(Klikhut_Model_Event.eventsTable)(" WHERE computername = '" + (_31.value0 + "'"));
          return Database_AnyDB.withConnection(connectionInfo)(function (conn) {
              return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.query_(Klikhut_Model_Event.partialEventIsForeign)(q)(conn))(function (_3) {
                  var ids = Prelude["<$>"](Prelude.functorArray)(function (_9) {
                      if (_9.value0.id instanceof Data_Maybe.Just) {
                          return _9.value0.id.value0;
                      };
                      throw new Error("Failed pattern match at Main line 104, column 19 - line 105, column 15: " + [ _9.constructor.name ]);
                  })(_3);
                  return Prelude.bind(Control_Monad_Aff.bindAff)(selectImagesForEvents(ids)(conn))(function (_2) {
                      var createEvent = function (_21) {
                          if (_21.value0.id instanceof Data_Maybe.Just) {
                              return Klikhut_Model_Event.mkEvent(_21)(Data_Array.filter(function (_10) {
                                  return _10.value0.eventId === _21.value0.id.value0;
                              })(_2));
                          };
                          throw new Error("Failed pattern match at Main line 106, column 19 - line 107, column 15: " + [ _21.constructor.name ]);
                      };
                      return Prelude["return"](Control_Monad_Aff.applicativeAff)(Prelude["<$>"](Prelude.functorArray)(createEvent)(_3));
                  });
              });
          });
      };
      throw new Error("Failed pattern match at Main line 96, column 1 - line 97, column 1: " + [ _31.constructor.name ]);
  };
  var newEvent = function (_16) {
      return Database_AnyDB.withConnection(connectionInfo)(function (conn) {
          return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.execute_(insertEvent(_16.body))(conn))(function () {
              return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.queryOne_(Klikhut_Model_Event.partialEventIsForeign)(Klikhut_SQL.selectLastInserted(Klikhut_Model_Event.eventsTable))(conn))(function (_5) {
                  if (_5 instanceof Data_Maybe.Nothing) {
                      return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("Failed to create Event"));
                  };
                  if (_5 instanceof Data_Maybe.Just && _5.value0.value0.id instanceof Data_Maybe.Nothing) {
                      return Prelude["return"](Control_Monad_Aff.applicativeAff)(Klikhut_Model_Event.mkEvent(_5.value0)([  ]));
                  };
                  if (_5 instanceof Data_Maybe.Just && _5.value0.value0.id instanceof Data_Maybe.Just) {
                      return Prelude[">>="](Control_Monad_Aff.bindAff)(selectImagesForEvent(_5.value0.value0.id.value0)(conn))(function (ims) {
                          return Prelude["return"](Control_Monad_Aff.applicativeAff)(Klikhut_Model_Event.mkEvent(_5.value0)(ims));
                      });
                  };
                  throw new Error("Failed pattern match at Main line 123, column 1 - line 124, column 1: " + [ _5.constructor.name ]);
              });
          });
      });
  };
  var newPB = function (_14) {
      return Database_AnyDB.withConnection(connectionInfo)(function (conn) {
          return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.execute_(insertPB(_14.body))(conn))(function () {
              return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.queryOne_(Klikhut_Model_Photobooth.photoboothIsForeign)(Klikhut_SQL.selectLastInserted(Klikhut_Model_Photobooth.photoboothsTable))(conn))(function (_4) {
                  return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("Failed to create Photobooth")))(Prelude["return"](Control_Monad_Aff.applicativeAff))(_4);
              });
          });
      });
  };
  var saveImageToDb = function (_20) {
      var _61 = Data_StrMap.lookup("eventid")(_20.params);
      if (_61 instanceof Data_Maybe.Nothing) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("SaveImageToDb: No eventid provided"));
      };
      if (_61 instanceof Data_Maybe.Just) {
          var _62 = safeParseInt(_61.value0);
          if (_62 instanceof Data_Maybe.Nothing) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("SaveImageToDb: Failed to parse: " + _61.value0));
          };
          if (_62 instanceof Data_Maybe.Just) {
              var _63 = Data_StrMap.lookup("name")(_20.params);
              if (_63 instanceof Data_Maybe.Nothing) {
                  return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("SaveImageToDb: No name provided"));
              };
              if (_63 instanceof Data_Maybe.Just) {
                  return Database_AnyDB.withConnection(connectionInfo)(function (conn) {
                      var query = Database_AnyDB.Query("INSERT INTO " + (Klikhut_Model_SavedImage.savedImageTable.name + " (name, eventid, image) VALUES (?, ?, ?)"));
                      return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.execute(query)([ Database_AnyDB_SqlValue.toSql(Database_AnyDB_SqlValue.isSqlValueString)(_63.value0), Database_AnyDB_SqlValue.toSql(Database_AnyDB_SqlValue.isSqlValueInt)(_62.value0), Database_AnyDB_SqlValue.toSql(Database_AnyDB_SqlValue.isSqlValueBuffer)(_20.body) ])(conn))(function () {
                          return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.queryOne_(Klikhut_Model_SavedImage.savedImageIsForeign)(Klikhut_SQL.selectLastInserted(Klikhut_Model_SavedImage.savedImageTable))(conn))(function (_8) {
                              return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("Failed to save image")))(Prelude["return"](Control_Monad_Aff.applicativeAff))(_8);
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at Main line 170, column 1 - line 171, column 1: " + [ _63.constructor.name ]);
          };
          throw new Error("Failed pattern match at Main line 170, column 1 - line 171, column 1: " + [ _62.constructor.name ]);
      };
      throw new Error("Failed pattern match at Main line 170, column 1 - line 171, column 1: " + [ _61.constructor.name ]);
  };
  var updateEvent = function (_19) {
      if (_19.body.value0.id instanceof Data_Maybe.Nothing) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("updateEvent impossible without id"));
      };
      if (_19.body.value0.id instanceof Data_Maybe.Just) {
          var query = Klikhut_SQL.update(Klikhut_Model_Event.eventsTable)(_19.body.value0.id.value0)(Klikhut_Model_StrMap.fromArray([ new Data_Tuple.Tuple("computername", _19.body.value0.computername), new Data_Tuple.Tuple("name", _19.body.value0.name), Data_Tuple.Tuple.create("datefrom")(Klikhut_Model_Date.iso8601(_19.body.value0.datefrom)), Data_Tuple.Tuple.create("dateuntil")(Klikhut_Model_Date.iso8601(_19.body.value0.dateuntil)), new Data_Tuple.Tuple("profile", _19.body.value0.profile) ]))("");
          return Database_AnyDB.withConnection(connectionInfo)(function (conn) {
              return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.execute_(query)(conn))(function () {
                  return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.queryOne_(Klikhut_Model_Event.partialEventIsForeign)(Klikhut_SQL.selectStarId(Klikhut_Model_Event.eventsTable)(_19.body.value0.id.value0))(conn))(function (_7) {
                      if (_7 instanceof Data_Maybe.Nothing) {
                          return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("Failed to update Event"));
                      };
                      if (_7 instanceof Data_Maybe.Just && _7.value0.value0.id instanceof Data_Maybe.Nothing) {
                          return Prelude["return"](Control_Monad_Aff.applicativeAff)(Klikhut_Model_Event.mkEvent(_7.value0)([  ]));
                      };
                      if (_7 instanceof Data_Maybe.Just && _7.value0.value0.id instanceof Data_Maybe.Just) {
                          return Prelude[">>="](Control_Monad_Aff.bindAff)(selectImagesForEvent(_7.value0.value0.id.value0)(conn))(function (ims) {
                              return Prelude["return"](Control_Monad_Aff.applicativeAff)(Klikhut_Model_Event.mkEvent(_7.value0)(ims));
                          });
                      };
                      throw new Error("Failed pattern match at Main line 152, column 1 - line 153, column 1: " + [ _7.constructor.name ]);
                  });
              });
          });
      };
      throw new Error("Failed pattern match at Main line 152, column 1 - line 153, column 1: " + [ _19.constructor.name ]);
  };
  var updatePB = function (_18) {
      if (_18.body.value0.id instanceof Data_Maybe.Nothing) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("updatePhotobooth impossible without id!"));
      };
      if (_18.body.value0.id instanceof Data_Maybe.Just) {
          var query = Klikhut_SQL.update(Klikhut_Model_Photobooth.photoboothsTable)(_18.body.value0.id.value0)(Klikhut_Model_StrMap.fromArray([ new Data_Tuple.Tuple("alias", _18.body.value0.alias), new Data_Tuple.Tuple("defaultprofile", _18.body.value0.defaultprofile) ]))("");
          return Database_AnyDB.withConnection(connectionInfo)(function (conn) {
              return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.execute_(query)(conn))(function () {
                  return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.queryOne_(Klikhut_Model_Photobooth.photoboothIsForeign)(Klikhut_SQL.selectStarId(Klikhut_Model_Photobooth.photoboothsTable)(_18.body.value0.id.value0))(conn))(function (_6) {
                      return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("Failed to update Photobooth")))(Prelude["return"](Control_Monad_Aff.applicativeAff))(_6);
                  });
              });
          });
      };
      throw new Error("Failed pattern match at Main line 142, column 1 - line 143, column 1: " + [ _18.constructor.name ]);
  };
  var allPhotobooths = function (_12) {
      return Database_AnyDB.withConnection(connectionInfo)(function (conn) {
          return Database_AnyDB.query_(Klikhut_Model_Photobooth.photoboothIsForeign)(Klikhut_SQL.selectStar(Klikhut_Model_Photobooth.photoboothsTable)(""))(conn);
      });
  };
  var main = function __do() {
      var _1 = Data_Date.now();
      Control_Monad_Aff.runAff(function (_100) {
          return Control_Monad_Eff_Console.log(Prelude.show(Control_Monad_Eff_Exception.showError)(_100));
      })(Prelude["const"](Control_Monad_Eff_Console.log("Initial SQL OK")))(Database_AnyDB.withConnection(connectionInfo)(function (conn) {
          return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.execute_(Klikhut_SQL.dropTable(Klikhut_Model_Photobooth.photoboothsTable))(conn))(function () {
              return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.execute_(Klikhut_SQL.createTable(Klikhut_Model_Photobooth.photoboothsTable))(conn))(function () {
                  return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.execute_(insertPB(mybooth))(conn))(function () {
                      return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.execute_(insertPB(yourbooth))(conn))(function () {
                          return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.execute_(Klikhut_SQL.dropTable(Klikhut_Model_Event.eventsTable))(conn))(function () {
                              return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.execute_(Klikhut_SQL.createTable(Klikhut_Model_Event.eventsTable))(conn))(function () {
                                  return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.execute_(insertEvent(myevent(_1)))(conn))(function () {
                                      return Prelude.bind(Control_Monad_Aff.bindAff)(Database_AnyDB.execute_(Klikhut_SQL.dropTable(Klikhut_Model_SavedImage.savedImageTable))(conn))(function () {
                                          return Database_AnyDB.execute_(Klikhut_SQL.createTable(Klikhut_Model_SavedImage.savedImageTable))(conn);
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          });
      }))();
      var _0 = Klikhut_Server_Core.makeApp();
      Klikhut_Server_Core.hostEndpoint(Data_Argonaut_Encode.encodeJsonUnit)(Data_Argonaut_Decode.decodeJsonNull)(Data_Argonaut_Encode.encodeJsonArray(Klikhut_Model_Photobooth.encodeJsonPhotobooth))(Data_Argonaut_Decode.decodeArray(Klikhut_Model_Photobooth.decodeJsonPhotobooth))(_0)(Klikhut_Endpoint.getPhotobooths)(allPhotobooths)();
      Klikhut_Server_Core.hostEndpoint(Klikhut_Model_Photobooth.encodeJsonPhotobooth)(Klikhut_Model_Photobooth.decodeJsonPhotobooth)(Klikhut_Model_Photobooth.encodeJsonPhotobooth)(Klikhut_Model_Photobooth.decodeJsonPhotobooth)(_0)(Klikhut_Endpoint.postPhotobooths)(newPB)();
      Klikhut_Server_Core.hostEndpoint(Klikhut_Model_Photobooth.encodeJsonPhotobooth)(Klikhut_Model_Photobooth.decodeJsonPhotobooth)(Klikhut_Model_Photobooth.encodeJsonPhotobooth)(Klikhut_Model_Photobooth.decodeJsonPhotobooth)(_0)(Klikhut_Endpoint.putPhotobooths)(updatePB)();
      Klikhut_Server_Core.hostEndpoint(Data_Argonaut_Encode.encodeJsonUnit)(Data_Argonaut_Decode.decodeJsonNull)(Data_Argonaut_Encode.encodeJsonArray(Klikhut_Model_Event.encodeJsonEvent))(Data_Argonaut_Decode.decodeArray(Klikhut_Model_Event.decodeJsonEvent))(_0)(Klikhut_Endpoint.getEvents)(eventsByCname)();
      Klikhut_Server_Core.hostEndpoint(Klikhut_Model_Event.encodeJsonEvent)(Klikhut_Model_Event.decodeJsonEvent)(Klikhut_Model_Event.encodeJsonEvent)(Klikhut_Model_Event.decodeJsonEvent)(_0)(Klikhut_Endpoint.postEvents)(newEvent)();
      Klikhut_Server_Core.hostEndpoint(Klikhut_Model_Event.encodeJsonEvent)(Klikhut_Model_Event.decodeJsonEvent)(Klikhut_Model_Event.encodeJsonEvent)(Klikhut_Model_Event.decodeJsonEvent)(_0)(Klikhut_Endpoint.putEvents)(updateEvent)();
      Klikhut_Server_Core.hostFileEndpoint(Klikhut_Model_SavedImage.encodeJsonSavedImage)(Klikhut_Model_SavedImage.decodeJsonSavedImage)(_0)(Klikhut_Endpoint.attachImage)(saveImageToDb)();
      Klikhut_Server_Core.hostFile(_0)("*")($$static)();
      Klikhut_Server_Core.listen(_0)(port)();
      return Control_Monad_Eff_Console.log("Starting server on " + Prelude.show(Prelude.showInt)(port))();
  };
  exports["safeParseInt"] = safeParseInt;
  exports["selectImagesForEvents"] = selectImagesForEvents;
  exports["selectImagesForEvent"] = selectImagesForEvent;
  exports["saveImageToDb"] = saveImageToDb;
  exports["updateEvent"] = updateEvent;
  exports["updatePB"] = updatePB;
  exports["insertEvent"] = insertEvent;
  exports["newEvent"] = newEvent;
  exports["insertPB"] = insertPB;
  exports["newPB"] = newPB;
  exports["eventsByCname"] = eventsByCname;
  exports["allPhotobooths"] = allPhotobooths;
  exports["static"] = $$static;
  exports["main"] = main;
  exports["port"] = port;
  exports["myevent"] = myevent;
  exports["yourbooth"] = yourbooth;
  exports["mybooth"] = mybooth;
  exports["connectionInfo"] = connectionInfo;
  exports["pInt"] = $foreign.pInt;;
 
})(PS["Main"] = PS["Main"] || {});

PS["Main"].main();